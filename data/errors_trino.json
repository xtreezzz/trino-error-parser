[
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/ClientOptions.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Using both the URL parameter and the --server option is not allowed\");"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/ClientOptions.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(e);"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/Console.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"both --execute and --file specified\");"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/Console.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(format(\"Error reading from file %s: %s\", clientOptions.file, e.getMessage()));"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/CsvPrinter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"error writing to output\");"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/OutputHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/OutputHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e.getCause());"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/OutputHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/Pager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "QueryAbortedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new QueryAbortedException(e);"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/Query.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/Query.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/Query.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "QueryAbortedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new QueryAbortedException(e);"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/Query.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(format + \" not supported\");"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/QueryPreprocessor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "QueryPreprocessorException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new QueryPreprocessorException(\"Interrupted while preprocessing query\");"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/QueryPreprocessor.java",
        "error_code": "Error preprocessing query: \" + e.getMessage()",
        "error_code_name": null,
        "error_class_name": "QueryPreprocessorException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new QueryPreprocessorException(\"Error preprocessing query: \" + e.getMessage(), e);"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/QueryPreprocessor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "QueryPreprocessorException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new QueryPreprocessorException(\"Query preprocessor exited \" + exitCode + message);"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/QueryPreprocessor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "QueryPreprocessorException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new QueryPreprocessorException(\"Interrupted while preprocessing query\");"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/QueryPreprocessor.java",
        "error_code": "Error preprocessing query: \" + cause.getMessage()",
        "error_code_name": null,
        "error_class_name": "QueryPreprocessorException",
        "error_message_template": "{}",
        "error_message_variables": [
            "cause"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new QueryPreprocessorException(\"Error preprocessing query: \" + cause.getMessage(), cause);"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/QueryPreprocessor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "QueryPreprocessorException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new QueryPreprocessorException(\"Timed out waiting for query preprocessor after \" + timeout);"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/TerminalUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/TerminalUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/ValidatingPropertiesDefaultProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/ValidatingPropertiesDefaultProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Unknown option \" + argSpec);"
    },
    {
        "file_path": "client/trino-cli/src/main/java/io/trino/cli/lexer/DelimiterLexer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"nextToken requires a non-null input stream.\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/ClientSelectedRole.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Role must be present for the selected role type: \" + type);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/ClientSelectedRole.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Could not parse selected role: \" + value);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/ClientTypeSignatureParameter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"ParameterKind is [%s] but expected [%s]\", kind, expectedParameterKind));"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/ClientTypeSignatureParameter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"Unsupported kind [%s]\", kind));"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/DerUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/ErrorInfo.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"code is negative\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/IntervalDayTime.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/IntervalDayTime.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid day-time interval: \" + value);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/IntervalYearMonth.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/IntervalYearMonth.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid year-month interval: \" + value);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/JsonCodec.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/JsonCodec.java",
        "error_code": "String.format(\"%s could not be converted to JSON\", instance.getClass().getName())",
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "{}",
        "error_message_variables": [
            "exception"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(String.format(\"%s could not be converted to JSON\", instance.getClass().getName()), exception);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/JsonDecodingUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalTokenException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalTokenException(parser);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/JsonResponse.java",
        "error_code": "Response does not contain a JSON value",
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "{}",
        "error_message_variables": [
            "exception"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Response does not contain a JSON value\", exception);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/JsonResponse.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/JsonResultRows.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "VerifyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new VerifyException(\"Expected start of the data array, but got \" + parser.currentToken());"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/JsonResultRows.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "VerifyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new VerifyException(\"Expected end of or start of next data array, but got \" + parser.currentToken());"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/JsonResultRows.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/JsonResultRows.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/JsonResultRows.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/JsonResultRows.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/OkHttpUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ClientException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ClientException(\"Illegal character ':' found in username\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/OkHttpUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"checkClientTrusted should not be called\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/OkHttpUtil.java",
        "error_code": "Error setting up SSL: \" + e.getMessage()",
        "error_code_name": null,
        "error_class_name": "ClientException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ClientException(\"Error setting up SSL: \" + e.getMessage(), e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/OkHttpUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Unexpected default trust managers:\" + Arrays.toString(trustManagers));"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/OkHttpUtil.java",
        "error_code": "Error setting up SSL: \" + e.getMessage()",
        "error_code_name": null,
        "error_class_name": "ClientException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ClientException(\"Error setting up SSL: \" + e.getMessage(), e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/OkHttpUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "CertificateExpiredException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new CertificateExpiredException(\"KeyStore certificate is expired: \" + e.getMessage());"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/OkHttpUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "CertificateNotYetValidException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new CertificateNotYetValidException(\"KeyStore certificate is not yet valid: \" + e.getMessage());"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/PemReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "CertificateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new CertificateException(\"Certificate file does not contain any certificates: \" + certificateChainFile);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/PemReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "KeyStoreException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new KeyStoreException(\"Private key does not match the public key of any certificate\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/PemReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "KeyStoreException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new KeyStoreException(\"did not find a private key\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/PemReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InvalidKeySpecException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidKeySpecException(\"Password protected PKCS 1 private keys are not supported\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/PemReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "KeyStoreException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new KeyStoreException(\"Private key is encrypted, but no password was provided\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/PemReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InvalidKeySpecException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidKeySpecException(\"Key type must be one of \" + algorithms);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/PemReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InvalidKeySpecException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidKeySpecException(pkcs1KeyType + \" private key in PKCS 1 format is not supported\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/PemReader.java",
        "error_code": "format(\"Invalid %s private key in PKCS 1 format\", pkcs1KeyType)",
        "error_code_name": null,
        "error_class_name": "InvalidKeySpecException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidKeySpecException(format(\"Invalid %s private key in PKCS 1 format\", pkcs1KeyType), e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/PemReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InvalidKeySpecException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidKeySpecException(\"Expected DSA key to have 6 elements\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/PemReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InvalidKeySpecException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidKeySpecException(\"Expected EC key to have 4 elements\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/PemReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InvalidKeySpecException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidKeySpecException(\"Key type must be one of \" + SUPPORTED_KEY_TYPES);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/ProtocolHeaders.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ProtocolDetectionException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ProtocolDetectionException(\"Both Trino and \" + alternateHeaderName.get() + \" headers detected\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/QueryData.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"getData() is deprecated for removal, use StatementClient.currentRows() instead\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/ResultRowsDecoder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported data type: \" + data.getClass().getName());"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/ResultRowsDecoder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/ResultRowsDecoder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/ResultRowsDecoder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported segment type: \" + segment.getClass().getName());"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/StatementClientV1.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ClientException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ClientException(\"Invalid server URL: \" + session.getServer());"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/StatementClientV1.java",
        "error_code": "format(\"Error fetching next (attempts: %s, duration: %s)\", attempts, sinceStart)",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "cause"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(format(\"Error fetching next (attempts: %s, duration: %s)\", attempts, sinceStart), cause);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/StatementClientV1.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"StatementClient thread was interrupted\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/auth/external/DesktopBrowserRedirectHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RedirectException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RedirectException(\"Desktop Browser is not available. Make sure your Java process is not in headless mode (-Djava.awt.headless=false)\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/auth/external/DesktopBrowserRedirectHandler.java",
        "error_code": "Failed to redirect",
        "error_code_name": null,
        "error_class_name": "RedirectException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RedirectException(\"Failed to redirect\", e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/auth/external/ExternalAuthentication.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ClientException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ClientException(result.getError());"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/auth/external/ExternalAuthenticator.java",
        "error_code": "format(\"Failed to parse URI for field '%s'\", key)",
        "error_code_name": null,
        "error_class_name": "ClientException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ClientException(format(\"Failed to parse URI for field '%s'\", key), e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/auth/external/HttpTokenPoller.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException((IOException) e.getCause());"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/auth/external/HttpTokenPoller.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException((IOException) e.getCause());"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/auth/external/HttpTokenPoller.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid token URI: \" + tokenUri);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/auth/external/HttpTokenPoller.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(message);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/auth/external/MemoryCachedKnownToken.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/auth/external/SystemOpenRedirectHandler.java",
        "error_code": "format(\"Could not open uri %s\", uri)",
        "error_code_name": null,
        "error_class_name": "RedirectException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RedirectException(format(\"Could not open uri %s\", uri), e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/auth/kerberos/AbstractUnconstrainedContextProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(t);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/auth/kerberos/DelegatedConstrainedContextProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ClientException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ClientException(format(\"Kerberos credential is expired: %s seconds\", gssCredential.getRemainingLifetime()));"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/auth/kerberos/DelegatedUnconstrainedContextProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ClientException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ClientException(\"Invalid Credentials. Multiple Kerberos Credentials found.\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/auth/kerberos/DelegatedUnconstrainedContextProvider.java",
        "error_code": "Unable to refresh the kerberos ticket",
        "error_code_name": null,
        "error_class_name": "ClientException",
        "error_message_template": "{}",
        "error_message_variables": [
            "exception"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ClientException(\"Unable to refresh the kerberos ticket\", exception);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/auth/kerberos/LoginBasedUnconstrainedContextProvider.java",
        "error_code": "format(\"Kerberos login error for [%s]: %s\", principal.orElse(\"not defined\"), e.getMessage())",
        "error_code_name": null,
        "error_class_name": "ClientException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ClientException(format(\"Kerberos login error for [%s]: %s\", principal.orElse(\"not defined\"), e.getMessage()), e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/auth/kerberos/SpnegoHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "LoginException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new LoginException(\"No token generated from GSS context\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/auth/kerberos/SpnegoHandler.java",
        "error_code": "format(\"Kerberos error for [%s]: %s\", servicePrincipal, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "ClientException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ClientException(format(\"Kerberos error for [%s]: %s\", servicePrincipal, e.getMessage()), e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/auth/kerberos/SpnegoHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ClientException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ClientException(\"Fully qualified name of localhost should not resolve to 'localhost'. System configuration error?\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/auth/kerberos/SpnegoHandler.java",
        "error_code": "Failed to resolve host: \" + hostName",
        "error_code_name": null,
        "error_class_name": "ClientException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ClientException(\"Failed to resolve host: \" + hostName, e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/spooling/DataAttribute.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown attribute name: \" + name);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/spooling/DataAttribute.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported class: \" + clazz);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/spooling/SegmentLoader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Could not open segment for streaming, got empty body\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/spooling/SegmentLoader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(format(\"Could not open segment for streaming, got error '%s' with code %d\", response.message(), response.code()));"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/spooling/encoding/Lz4QueryDataDecoder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(format(\"Decompressed size does not match expected segment size, expected %d, got %d\", decompressedSize, output.length));"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/spooling/encoding/QueryDataDecoders.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown encoding: \" + encoding);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/spooling/encoding/ZstdQueryDataDecoder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(format(\"Decompressed size does not match expected segment size, expected %d, got %d\", decompressedSize, output.length));"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/AbstractConnectionProperty.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(format(\"Connection property %s is required\", key));"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/AbstractConnectionProperty.java",
        "error_code": "format(\"Connection property %s value is empty\", key)",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(format(\"Connection property %s value is empty\", key), e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/AbstractConnectionProperty.java",
        "error_code": "format(\"Connection property %s value is invalid: %s\", key, value)",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(format(\"Connection property %s value is invalid: %s\", key, value), e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/AbstractConnectionProperty.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"value must be 'true' or 'false'\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/ConnectionProperties.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unrecognized role type \" + value.getType());"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/ConnectionProperties.java",
        "error_code": "DNS resolver class not found: \" + name",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"DNS resolver class not found: \" + name, e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/HttpClientFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"TLS/SSL is required for authentication with username and password\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/HttpClientFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"TLS/SSL is required for Kerberos authentication\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/HttpClientFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"TLS/SSL required for authentication using an access token\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/HttpClientFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"TLS/SSL required for authentication using external authorization\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/HttpClientFactory.java",
        "error_code": "Unable to instantiate custom DNS resolver \" + resolverClass.getName()",
        "error_code_name": null,
        "error_class_name": "ClientException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ClientException(\"Unable to instantiate custom DNS resolver \" + resolverClass.getName(), e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/TrinoUri.java",
        "error_code": "PropertyName.CATALOG",
        "error_code_name": null,
        "error_class_name": "RestrictedPropertyException",
        "error_message_template": "Catalog cannot be set in the URL",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RestrictedPropertyException(PropertyName.CATALOG, \"Catalog cannot be set in the URL\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/TrinoUri.java",
        "error_code": "PropertyName.SCHEMA",
        "error_code_name": null,
        "error_class_name": "RestrictedPropertyException",
        "error_message_template": "Schema cannot be set in the URL",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RestrictedPropertyException(PropertyName.SCHEMA, \"Schema cannot be set in the URL\");"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/TrinoUri.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(format(\"Connection argument is not a valid connection property: '%s'\", parts.get(0)));"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/TrinoUri.java",
        "error_code": "name",
        "error_code_name": null,
        "error_class_name": "RestrictedPropertyException",
        "error_message_template": "ormat(\"Connection property %s cannot be set in the URL{}",
        "error_message_variables": [
            ", name)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RestrictedPropertyException(name, format(\"Connection property %s cannot be set in the URL\", name));"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/TrinoUri.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(format(\"Connection property %s is in the URL multiple times\", parts.get(0)));"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/TrinoUri.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"No host specified: \" + url);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/TrinoUri.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Invalid port number: \" + url);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/TrinoUri.java",
        "error_code": "Invalid Trino URL: \" + url",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Invalid Trino URL: \" + url, e);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/TrinoUri.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Invalid Trino URL: \" + url);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/TrinoUri.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Empty Trino URL: \" + url);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/TrinoUri.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Path does not start with a slash: \" + uri);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/TrinoUri.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Invalid path segments in URL: \" + uri);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/TrinoUri.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Catalog name is empty: \" + uri);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/TrinoUri.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Schema name is empty: \" + uri);"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/TrinoUri.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(format(\"Connection property %s is passed both by URL and properties\", key));"
    },
    {
        "file_path": "client/trino-client/src/main/java/io/trino/client/uri/TrinoUri.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Provided connection properties are invalid:\\n\" + multipleViolations);"
    },
    {
        "file_path": "client/trino-client/src/main/java/okhttp3/internal/tls/DistinguishedNameParser.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected end of DN: \" + dn);"
    },
    {
        "file_path": "client/trino-client/src/main/java/okhttp3/internal/tls/DistinguishedNameParser.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected end of DN: \" + dn);"
    },
    {
        "file_path": "client/trino-client/src/main/java/okhttp3/internal/tls/DistinguishedNameParser.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected end of DN: \" + dn);"
    },
    {
        "file_path": "client/trino-client/src/main/java/okhttp3/internal/tls/DistinguishedNameParser.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected end of DN: \" + dn);"
    },
    {
        "file_path": "client/trino-client/src/main/java/okhttp3/internal/tls/DistinguishedNameParser.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected end of DN: \" + dn);"
    },
    {
        "file_path": "client/trino-client/src/main/java/okhttp3/internal/tls/DistinguishedNameParser.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected end of DN: \" + dn);"
    },
    {
        "file_path": "client/trino-client/src/main/java/okhttp3/internal/tls/DistinguishedNameParser.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Malformed DN: \" + dn);"
    },
    {
        "file_path": "client/trino-client/src/main/java/okhttp3/internal/tls/DistinguishedNameParser.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Malformed DN: \" + dn);"
    },
    {
        "file_path": "client/trino-client/src/main/java/okhttp3/internal/tls/DistinguishedNameParser.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Malformed DN: \" + dn);"
    },
    {
        "file_path": "client/trino-client/src/main/java/okhttp3/internal/tls/DistinguishedNameParser.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Malformed DN: \" + dn);"
    },
    {
        "file_path": "client/trino-client/src/main/java/okhttp3/internal/tls/DistinguishedNameParser.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Malformed DN: \" + dn);"
    },
    {
        "file_path": "client/trino-client/src/test/java/io/trino/client/auth/external/MockRedirectHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "client/trino-client/src/test/java/io/trino/client/auth/external/MockTokenPoller.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown token URI: \" + tokenUri);"
    },
    {
        "file_path": "client/trino-client/src/test/java/io/trino/client/auth/external/TestExternalAuthentication.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(new IOException(\"polling error\"));"
    },
    {
        "file_path": "client/trino-client/src/test/java/io/trino/client/auth/external/TestExternalAuthenticator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "client/trino-client/src/test/java/io/trino/client/uri/TestConnectionProperties.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Duplicate field name: \" + name);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": "Error fetching results",
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Error fetching results\", e);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Value is not a boolean: \" + value);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Value is not a byte array: \" + value);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": "Expected value to be a date but is: \" + value",
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Expected value to be a date but is: \" + value, e);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": "Invalid time from server: \" + value",
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Invalid time from server: \" + value, e);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": "Invalid time from server: \" + value",
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Invalid time from server: \" + value, e);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Expected column to be a time type but is \" + columnInfo.getColumnTypeName());"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": "Invalid timestamp from server: \" + value",
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Invalid timestamp from server: \" + value, e);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": "Invalid timestamp from server: \" + value",
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Invalid timestamp from server: \" + value, e);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Expected column to be a timestamp type but is \" + columnInfo.getColumnTypeName());"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Value is not a string: \" + value);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getUnicodeStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getUnicodeStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getCursorName\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": "ResultSet",
        "error_code_name": null,
        "error_class_name": "NotImplementedException",
        "error_message_template": "getCharacterStream",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotImplementedException(\"ResultSet\", \"getCharacterStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": "ResultSet",
        "error_code_name": null,
        "error_class_name": "NotImplementedException",
        "error_message_template": "getCharacterStream",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotImplementedException(\"ResultSet\", \"getCharacterStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"isBeforeFirst\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"isAfterLast\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"isFirst\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"isLast\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"beforeFirst\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"afterLast\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"first\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"last\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Current row exceeds limit of 2147483647\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"absolute\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"relative\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"previous\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Fetch direction must be FETCH_FORWARD\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Rows is negative\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"rowUpdated\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"rowInserted\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"rowDeleted\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateNull\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateBoolean\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateByte\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateShort\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateInt\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateLong\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateFloat\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateDouble\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateBigDecimal\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateString\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateBytes\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateDate\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateTime\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateTimestamp\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateAsciiStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateBinaryStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateCharacterStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateObject\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateObject\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateNull\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateBoolean\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateByte\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateShort\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateInt\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateLong\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateFloat\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateDouble\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateBigDecimal\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateString\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateBytes\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateDate\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateTime\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateTimestamp\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateAsciiStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateBinaryStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateCharacterStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateObject\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateObject\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"insertRow\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateRow\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"deleteRow\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"refreshRow\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"cancelRowUpdates\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"moveToInsertRow\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"moveToCurrentRow\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Statement not available\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getObject\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getRef\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getBlob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getObject\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getRef\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getBlob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getURL\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getURL\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateRef\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateRef\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateBlob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateBlob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateArray\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateArray\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getRowId\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getRowId\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateRowId\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateRowId\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateNString\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateNString\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateNClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateNClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getNClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getNClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getSQLXML\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getSQLXML\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateSQLXML\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateSQLXML\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getNString\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getNString\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getNCharacterStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getNCharacterStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateNCharacterStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateNCharacterStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateAsciiStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateBinaryStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateCharacterStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateAsciiStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateBinaryStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateCharacterStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateBlob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateBlob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateNClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateNClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateNCharacterStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateNCharacterStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateAsciiStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateBinaryStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateCharacterStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateAsciiStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateBinaryStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateCharacterStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateBlob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateBlob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateNClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"updateNClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"type is null\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(format(\"Cannot convert from %s to %s\", columnTypeSignature, type));"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"No wrapper for \" + iface);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"ResultSet is closed\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Not on a valid row\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Invalid column index: \" + index);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Invalid column index: \" + index);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Column label is null\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Invalid column label: \" + label);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Value is not a number: \" + value);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid timestamp: \" + value);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid timestamp: \" + value);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid time: \" + value);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid time: \" + value);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid time: \" + value);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid time with time zone: \" + value);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Precision must be <= %s: %s\", MAX_DATETIME_PRECISION, value));"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"value must be >= 0\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AbstractTrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"fromPrecision must be <= toPrecision\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(resultsException(results));"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(new SQLException(\"ResultSet thread was interrupted\", e));"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e.getCause());"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/AsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(new SQLException(\"Interrupted\", e));"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/DriverInfo.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/NonRegisteringTrinoDriver.java",
        "error_code": "e.getMessage()",
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(e.getMessage(), e);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/NonRegisteringTrinoDriver.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"URL is null\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/NonRegisteringTrinoDriver.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException();"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/ObjectCasts.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid boolean value: \" + x);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoArray.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getArray not supported\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoArray.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Index out of bounds\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoArray.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getArray not supported\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoArray.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getResultSet not supported\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoArray.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getResultSet not supported\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoArray.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getResultSet not supported\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoArray.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getResultSet not supported\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": "Connection",
        "error_code_name": null,
        "error_class_name": "NotImplementedException",
        "error_message_template": "prepareCall",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotImplementedException(\"Connection\", \"prepareCall\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Connection is in auto-commit mode\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Connection is in auto-commit mode\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"prepareCall\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getTypeMap\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setTypeMap\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"Changing holdability not supported\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setSavepoint\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setSavepoint\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"rollback\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"releaseSavepoint\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"Auto generated keys must be NO_GENERATED_KEYS\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"prepareStatement\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"prepareStatement\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"createClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"createBlob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"createNClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"createSQLXML\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Timeout is negative\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"createArrayOf\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"createStruct\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Timeout is negative\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"No wrapper for \" + iface);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Connection is closed\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"Result set type must be TYPE_FORWARD_ONLY\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"Result set concurrency must be CONCUR_READ_ONLY\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"Result set holdability must be HOLD_CURSORS_OVER_COMMIT\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Invalid transaction isolation level: \" + level);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(heldException);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoDatabaseMetaData.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"privileges not supported\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoDatabaseMetaData.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"privileges not supported\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoDatabaseMetaData.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"row identifiers not supported\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoDatabaseMetaData.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"version columns not supported\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoDatabaseMetaData.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"exported keys not supported\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoDatabaseMetaData.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"cross reference not supported\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoDatabaseMetaData.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"indexes not supported\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoDatabaseMetaData.java",
        "error_code": "DatabaseMetaData",
        "error_code_name": null,
        "error_class_name": "NotImplementedException",
        "error_message_template": "getFunctions",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotImplementedException(\"DatabaseMetaData\", \"getFunctions\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoDatabaseMetaData.java",
        "error_code": "DatabaseMetaData",
        "error_code_name": null,
        "error_class_name": "NotImplementedException",
        "error_message_template": "getFunctionColumns",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotImplementedException(\"DatabaseMetaData\", \"getFunctionColumns\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoDatabaseMetaData.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"No wrapper for \" + iface);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoDriver.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoDriverUri.java",
        "error_code": "e.getMessage()",
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e.getCause()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(e.getMessage(), e.getCause());"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoDriverUri.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"No host specified: \" + url);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoDriverUri.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Invalid port number: \" + url);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoDriverUri.java",
        "error_code": "Invalid JDBC URL: \" + url",
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Invalid JDBC URL: \" + url, e);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoDriverUri.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Invalid JDBC URL: \" + url);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoDriverUri.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Empty JDBC URL: \" + url);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoParameterMetaData.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(format(\"Invaliad Nullable Value %s\", getParameter(param).getNullable()));"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoParameterMetaData.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"No wrapper for \" + iface);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoParameterMetaData.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(format(\"Invalid column index: %s (only allow between 1 to %s)\", column, parameterInfo.size()));"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Prepared SQL statement is not a query: \" + originalSql);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Prepared SQL is not an update statement: \" + originalSql);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": "PreparedStatement",
        "error_code_name": null,
        "error_class_name": "NotImplementedException",
        "error_message_template": "setAsciiStream",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotImplementedException(\"PreparedStatement\", \"setAsciiStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setUnicodeStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": "PreparedStatement",
        "error_code_name": null,
        "error_class_name": "NotImplementedException",
        "error_message_template": "setBinaryStream",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotImplementedException(\"PreparedStatement\", \"setBinaryStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Unsupported target SQL type: \" + targetSqlType);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Unsupported object type: \" + x.getClass().getName());"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": "PreparedStatement",
        "error_code_name": null,
        "error_class_name": "NotImplementedException",
        "error_message_template": "setCharacterStream",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotImplementedException(\"PreparedStatement\", \"setCharacterStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setRef\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setBlob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setArray\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": "PreparedStatement",
        "error_code_name": null,
        "error_class_name": "NotImplementedException",
        "error_message_template": "setDate",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotImplementedException(\"PreparedStatement\", \"setDate\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": "PreparedStatement",
        "error_code_name": null,
        "error_class_name": "NotImplementedException",
        "error_message_template": "setTime",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotImplementedException(\"PreparedStatement\", \"setTime\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setURL\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setRowId\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setNCharacterStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setNClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setBlob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setNClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setSQLXML\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setObject\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": "PreparedStatement",
        "error_code_name": null,
        "error_class_name": "NotImplementedException",
        "error_message_template": "setAsciiStream",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotImplementedException(\"PreparedStatement\", \"setAsciiStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": "PreparedStatement",
        "error_code_name": null,
        "error_class_name": "NotImplementedException",
        "error_message_template": "setBinaryStream",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotImplementedException(\"PreparedStatement\", \"setBinaryStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": "PreparedStatement",
        "error_code_name": null,
        "error_class_name": "NotImplementedException",
        "error_message_template": "setCharacterStream",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotImplementedException(\"PreparedStatement\", \"setCharacterStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setAsciiStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setBinaryStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setCharacterStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setNCharacterStream\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setBlob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"setNClob\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"This method cannot be called on PreparedStatement\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"This method cannot be called on PreparedStatement\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"This method cannot be called on PreparedStatement\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"This method cannot be called on PreparedStatement\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"This method cannot be called on PreparedStatement\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"This method cannot be called on PreparedStatement\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"This method cannot be called on PreparedStatement\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"This method cannot be called on PreparedStatement\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"This method cannot be called on PreparedStatement\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"This method cannot be called on PreparedStatement\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"This method cannot be called on PreparedStatement\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"This method cannot be called on PreparedStatement\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"This method cannot be called on PreparedStatement\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"This method cannot be called on PreparedStatement\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Parameter index out of bounds: \" + parameterIndex);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"No value specified for parameter \" + (index + 1));"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Batch prepared statement must be executed using executeBatch method\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Unsupported target SQL type: \" + targetSqlType);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(format(\"Query has no columns (#%s)\", results.getId()));"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoResultSetMetaData.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Unhandled nullable type: \" + nullable);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoResultSetMetaData.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"No wrapper for \" + iface);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoResultSetMetaData.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Invalid column index: \" + column);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"SQL statement is not a query: \" + sql);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Max field size must be positive\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Max rows exceeds limit of 2147483647\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Max rows must be positive\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Query timeout seconds must be positive\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoStatement.java",
        "error_code": "e.getMessage()",
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(e.getMessage(), e);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoStatement.java",
        "error_code": "Error executing query: \" + e.getMessage()",
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Error executing query: \" + e.getMessage(), e);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Invalid fetch direction\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Fetch size must be positive\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"Batches not supported\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"Batches not supported\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"Batches not supported\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Invalid argument: \" + current);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"Multiple open results not supported\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLFeatureNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLFeatureNotSupportedException(\"getGeneratedKeys\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"SQL is not an update statement: \" + sql);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"No wrapper for \" + iface);"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Statement is closed\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TrinoStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Connection is closed\");"
    },
    {
        "file_path": "client/trino-jdbc/src/main/java/io/trino/jdbc/TypeConversions.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NoConversionRegisteredException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NoConversionRegisteredException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/BaseTestJdbcResultSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/JdbcDriverIT.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/JdbcDriverIT.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestAsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestAsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestAsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestAsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestAsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestAsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestAsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestAsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestAsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestAsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestAsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestAsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestAsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestAsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestAsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestAsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestAsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestAsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestAsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestAsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestAsyncResultIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestJdbcConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestJdbcConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestJdbcExternalAuthentication.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RedirectException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RedirectException(\"HTTP GET failed with status \" + response.code());"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestJdbcExternalAuthentication.java",
        "error_code": "Redirection failed",
        "error_code_name": null,
        "error_class_name": "RedirectException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RedirectException(\"Redirection failed\", e);"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestJdbcExternalAuthentication.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RedirectException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RedirectException(\"Redirect to uri has failed \" + uri);"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestJdbcExternalAuthentication.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ConcurrentModificationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ConcurrentModificationException(\"polling errors can't be invoked in parallel\");"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestJdbcExternalAuthentication.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ConcurrentModificationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ConcurrentModificationException(\"with WWW-Authenticate header can't be invoked in parallel\");"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestJdbcPreparedStatement.java",
        "error_code": "Failed at \" + i",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Failed at \" + i, e);"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestJdbcPreparedStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestJdbcStatement.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestJdbcVendorCompatibility.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestJdbcVendorCompatibility.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestTrinoDatabaseMetaData.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestTrinoDriver.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Failed to get CURRENT_USER\");"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestTrinoDriver.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnknownHostException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnknownHostException(\"Cannot resolve host: \" + hostname);"
    },
    {
        "file_path": "client/trino-jdbc/src/test/java/io/trino/jdbc/TestTrinoDriverImpersonateUser.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(\"Invalid credentials\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/FullConnectorSession.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unknown session property: %s.%s{}",
        "error_message_variables": [
            ", catalogName, propertyName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, format(\"Unknown session property: %s.%s\", catalogName, propertyName));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/Session.java",
        "error_code": "CATALOG_NOT_FOUND",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Catalog '%s' not found{}",
        "error_message_variables": [
            ".formatted(catalogName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(CATALOG_NOT_FOUND, \"Catalog '%s' not found\".formatted(catalogName));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/SystemSessionProperties.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"%s must be greater than or equal to 2: %s{}",
        "error_message_variables": [
            ", MAX_REORDERED_JOINS, intValue)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, format(\"%s must be greater than or equal to 2: %s\", MAX_REORDERED_JOINS, intValue));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/SystemSessionProperties.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"%s must be in the range [0, 1]: %s{}",
        "error_message_variables": [
            ", DYNAMIC_ROW_FILTERING_SELECTIVITY_THRESHOLD, value)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, format(\"%s must be in the range [0, 1]: %s\", DYNAMIC_ROW_FILTERING_SELECTIVITY_THRESHOLD, value));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/SystemSessionProperties.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"%s cannot be disabled with session property when it was enabled with configuration{}",
        "error_message_variables": [
            ", HIDE_INACCESSIBLE_COLUMNS)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, format(\"%s cannot be disabled with session property when it was enabled with configuration\", HIDE_INACCESSIBLE_COLUMNS));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/SystemSessionProperties.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"%s must be non-null{}",
        "error_message_variables": [
            ", property)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, format(\"%s must be non-null\", property));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/SystemSessionProperties.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"%s must be equal or greater than %s{}",
        "error_message_variables": [
            ", property, lowerBoundIncluded)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, format(\"%s must be equal or greater than %s\", property, lowerBoundIncluded));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/SystemSessionProperties.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"%s must be equal or less than %s{}",
        "error_message_variables": [
            ", property, upperBoundIncluded)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, format(\"%s must be equal or less than %s\", property, upperBoundIncluded));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/SystemSessionProperties.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"%s must be equal or greater than 0{}",
        "error_message_variables": [
            ", property)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, format(\"%s must be equal or greater than 0\", property));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/CatalogServiceProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(message);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/CatalogStoreManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Catalog store factory '%s' is already registered\".formatted(catalogStoreFactory.getName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/CatalogStoreManager.java",
        "error_code": "Failed to read configuration file: \" + catalogStoreFile",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Failed to read configuration file: \" + catalogStoreFile, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/ConnectorServices.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"duplicate argument name: \" + specification.getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/CoordinatorDynamicCatalogManager.java",
        "error_code": "CATALOG_NOT_AVAILABLE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Missing catalogs: {}",
        "error_message_variables": [
            "missingCatalogs"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(CATALOG_NOT_AVAILABLE, \"Missing catalogs: \" + missingCatalogs);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/CoordinatorDynamicCatalogManager.java",
        "error_code": "ALREADY_EXISTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Catalog '%s' already exists{}",
        "error_message_variables": [
            ", catalogName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ALREADY_EXISTS, format(\"Catalog '%s' already exists\", catalogName));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/CoordinatorDynamicCatalogManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Global system catalog already registered\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/CoordinatorDynamicCatalogManager.java",
        "error_code": "CATALOG_NOT_FOUND",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Catalog '%s' not found{}",
        "error_message_variables": [
            ", catalogName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(CATALOG_NOT_FOUND, format(\"Catalog '%s' not found\", catalogName));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/FileCatalogStore.java",
        "error_code": "CATALOG_STORE_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Could not store catalog properties",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(CATALOG_STORE_ERROR, \"Could not store catalog properties\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/FileCatalogStore.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Catalog store is read only",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Catalog store is read only\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/FileCatalogStore.java",
        "error_code": "Error reading catalog property file \" + file",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Error reading catalog property file \" + file, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/StaticCatalogManager.java",
        "error_code": "Error reading catalog property file \" + file",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Error reading catalog property file \" + file, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/StaticCatalogManager.java",
        "error_code": "CATALOG_NOT_AVAILABLE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Missing catalogs: {}",
        "error_message_variables": [
            "missingCatalogs"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(CATALOG_NOT_AVAILABLE, \"Missing catalogs: \" + missingCatalogs);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/StaticCatalogManager.java",
        "error_code": "CATALOG_NOT_FOUND",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "No catalog '%s'{}",
        "error_message_variables": [
            ".formatted(catalogHandle.getCatalogName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(CATALOG_NOT_FOUND, \"No catalog '%s'\".formatted(catalogHandle.getCatalogName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/StaticCatalogManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Global system catalog already registered\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/StaticCatalogManager.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "CREATE CATALOG is not supported by the static catalog store",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"CREATE CATALOG is not supported by the static catalog store\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/StaticCatalogManager.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "DROP CATALOG is not supported by the static catalog store",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"DROP CATALOG is not supported by the static catalog store\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/WorkerDynamicCatalogManager.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error loading catalogs on worker",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Error loading catalogs on worker\", firstError);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/WorkerDynamicCatalogManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Global system catalog already registered\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/informationschema/InformationSchemaMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support versioned tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support versioned tables\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/system/CoordinatorSystemTablesProvider.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Distribution for dynamic system table must be {}",
        "error_message_variables": [
            "SINGLE_COORDINATOR"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Distribution for dynamic system table must be \" + SINGLE_COORDINATOR);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/system/GlobalSystemConnector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/system/KillQueryProcedure.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Target query is not running: {}",
        "error_message_variables": [
            "queryId"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Target query is not running: \" + queryId);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/system/KillQueryProcedure.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Target query is not running: {}",
        "error_message_variables": [
            "queryId"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Target query is not running: \" + queryId);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/system/KillQueryProcedure.java",
        "error_code": "NOT_FOUND",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Target query not found: {}",
        "error_message_variables": [
            "queryId"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_FOUND, \"Target query not found: \" + queryId);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/system/KillQueryProcedure.java",
        "error_code": "INVALID_PROCEDURE_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_PROCEDURE_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/system/SystemPageSourceProvider.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Duplicate column name: {}",
        "error_message_variables": [
            "column.getName()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Duplicate column name: \" + column.getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/system/SystemPageSourceProvider.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Column does not exist: %s.%s{}",
        "error_message_variables": [
            ", tableName, columnName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Column does not exist: %s.%s\", tableName, columnName));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/connector/system/SystemTablesMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support versioned tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support versioned tables\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/cost/ComparisonStatsCalculator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported inequality operator \" + operator);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/cost/ComposableStatsCalculator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Rule pattern must be TypeOfPattern but was: \" + rule.getPattern().getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/cost/CostCalculatorUsingExchanges.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/cost/CostCalculatorWithEstimatedExchanges.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/cost/RuntimeInfoProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"RuntimeInfoProvider is not implemented\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/cost/RuntimeInfoProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"RuntimeInfoProvider is not implemented\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/cost/RuntimeInfoProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"RuntimeInfoProvider is not implemented\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/cost/ScalarStatsCalculator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalStateException(\"Unsupported binary arithmetic operation: \" + function);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/cost/ValuesStatsRule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Expected Row or Constant: \" + row);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/dispatcher/DispatchManager.java",
        "error_code": "QUERY_TEXT_TOO_LARGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Query text length (%s) exceeds the maximum length (%s){}",
        "error_message_variables": [
            ", queryLength, maxQueryLength)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(QUERY_TEXT_TOO_LARGE, format(\"Query text length (%s) exceeds the maximum length (%s)\", queryLength, maxQueryLength));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/dispatcher/LocalDispatchQueryFactory.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported statement type: {}",
        "error_message_variables": [
            "preparedQuery.getStatement().getClass().getSimpleName()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported statement type: \" + preparedQuery.getStatement().getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/dispatcher/QueuedStatementResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "BadRequestException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new BadRequestException(\"SQL statement is empty\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/dispatcher/QueuedStatementResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ForbiddenException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ForbiddenException(\"Internal communication can not be used to start a query\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/dispatcher/QueuedStatementResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotFoundException(\"Query not found\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/dispatcher/QueuedStatementResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "GoneException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new GoneException(\"Invalid token\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/eventlistener/EventListenerManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Event listener factory '%s' is already registered\", eventListenerFactory.getName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/eventlistener/EventListenerManager.java",
        "error_code": "Failed to read configuration file: \" + configFile",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Failed to read configuration file: \" + configFile, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/exchange/ExchangeManagerRegistry.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Exchange manager factory '%s' is already registered\", factory.getName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/exchange/ExchangeManagerRegistry.java",
        "error_code": "EXCHANGE_MANAGER_NOT_CONFIGURED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Exchange manager must be configured for the failure recovery capabilities to be fully functional",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(EXCHANGE_MANAGER_NOT_CONFIGURED, \"Exchange manager must be configured for the failure recovery capabilities to be fully functional\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/exchange/ExchangeManagerRegistry.java",
        "error_code": "Failed to read configuration file: \" + configFile",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Failed to read configuration file: \" + configFile, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/exchange/LazyExchangeDataSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected input: \" + input);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/AddColumnTask.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported type: {}",
        "error_message_variables": [
            "currentType"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported type: \" + currentType);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/AddColumnTask.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ARRAY type should be denoted by 'element' in the path; found '%s'{}",
        "error_message_variables": [
            ".formatted(fieldName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"ARRAY type should be denoted by 'element' in the path; found '%s'\".formatted(fieldName));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/AddColumnTask.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported type: {}",
        "error_message_variables": [
            "type"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported type: \" + type);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/CallTask.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Procedures cannot be called within a transaction (use autocommit mode)",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Procedures cannot be called within a transaction (use autocommit mode)\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/CallTask.java",
        "error_code": "INVALID_PROCEDURE_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Procedure argument cannot be null: {}",
        "error_message_variables": [
            "name"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_PROCEDURE_ARGUMENT, \"Procedure argument cannot be null: \" + name);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/CallTask.java",
        "error_code": "PROCEDURE_CALL_FAILED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "t"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(PROCEDURE_CALL_FAILED, t);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/CreateCatalogTask.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "CREATE CATALOG with AUTHORIZATION is not yet supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"CREATE CATALOG with AUTHORIZATION is not yet supported\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/CreateMaterializedViewTask.java",
        "error_code": "TYPE_MISMATCH",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported grace period type %s, expected %s{}",
        "error_message_variables": [
            ".formatted(type.getDisplayName(), INTERVAL_DAY_TIME.getDisplayName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(TYPE_MISMATCH, \"Unsupported grace period type %s, expected %s\".formatted(type.getDisplayName(), INTERVAL_DAY_TIME.getDisplayName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/CreateTableTask.java",
        "error_code": "Cannot reference columns of table \" + likeTableName",
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(\"Cannot reference columns of table \" + likeTableName, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/CreateTableTask.java",
        "error_code": "Cannot reference properties of table \" + likeTableName",
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(\"Cannot reference properties of table \" + likeTableName, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/CreateTableTask.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid TableElement: {}",
        "error_message_variables": [
            "element.getClass().getName()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Invalid TableElement: \" + element.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/DistributionSnapshot.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Merging of DistributionSnapshot is not supported\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/DropCatalogTask.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "CASCADE is not yet supported for DROP SCHEMA",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"CASCADE is not yet supported for DROP SCHEMA\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/DropColumnTask.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ARRAY type should be denoted by 'element' in the path; found '%s'{}",
        "error_message_variables": [
            ".formatted(fieldName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"ARRAY type should be denoted by 'element' in the path; found '%s'\".formatted(fieldName));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/FailureInjector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"unexpected error type: \" + errorType);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/NodeTaskMap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid negative value: \" + partitionedSplits);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/NoOpFailureInjector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"getRequestTimeout should not be called\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/PrepareTask.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid statement type for prepared statement: {}",
        "error_message_variables": [
            "type"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Invalid statement type for prepared statement: \" + type);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/PrivilegeUtilities.java",
        "error_code": "INVALID_PRIVILEGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Privilege %s is not supported for entity kind %s{}",
        "error_message_variables": [
            ".formatted(privilege, entityKind)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_PRIVILEGE, \"Privilege %s is not supported for entity kind %s\".formatted(privilege, entityKind));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/QueryPreparer.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "EXPLAIN ANALYZE doesn't support statement type: {}",
        "error_message_variables": [
            "innerStatement.getClass().getSimpleName()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"EXPLAIN ANALYZE doesn't support statement type: \" + innerStatement.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/QueryStateMachine.java",
        "error_code": "NOT_FOUND",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Prepared statement not found: {}",
        "error_message_variables": [
            "key"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_FOUND, \"Prepared statement not found: \" + key);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/QueryStateTimer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Start time not set\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/RenameColumnTask.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported type: {}",
        "error_message_variables": [
            "type"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported type: \" + type);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/RenameTableTask.java",
        "error_code": "SYNTAX_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Too many dots in table name: %s{}",
        "error_message_variables": [
            ", target)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(SYNTAX_ERROR, format(\"Too many dots in table name: %s\", target));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/ResetSessionAuthorizationTask.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "RESET SESSION AUTHORIZATION not supported by client",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"RESET SESSION AUTHORIZATION not supported by client\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/ResetSessionAuthorizationTask.java",
        "error_code": "GENERIC_USER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Can't reset authorization user in the middle of a transaction",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_USER_ERROR, \"Can't reset authorization user in the middle of a transaction\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/SetColumnTypeTask.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ARRAY type should be denoted by 'element' in the path; found '%s'{}",
        "error_message_variables": [
            ".formatted(fieldName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"ARRAY type should be denoted by 'element' in the path; found '%s'\".formatted(fieldName));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/SetColumnTypeTask.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported type: {}",
        "error_message_variables": [
            "type"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported type: \" + type);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/SetPathTask.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "SET PATH not supported by client",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"SET PATH not supported by client\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/SetSessionAuthorizationTask.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "SET SESSION AUTHORIZATION not supported by client",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"SET SESSION AUTHORIZATION not supported by client\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/SetSessionAuthorizationTask.java",
        "error_code": "GENERIC_USER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Can't set authorization user in the middle of a transaction",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_USER_ERROR, \"Can't set authorization user in the middle of a transaction\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/SetSessionAuthorizationTask.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported user expression: \" + userExpression.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/SetTimeZoneTask.java",
        "error_code": "TYPE_MISMATCH",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Expected expression of varchar or interval day-time type, but '%s' has %s type{}",
        "error_message_variables": [
            ", expression, type.getDisplayName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(TYPE_MISMATCH, format(\"Expected expression of varchar or interval day-time type, but '%s' has %s type\", expression, type.getDisplayName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/SetTimeZoneTask.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"TIME ZONE expression '%s' not supported\", expression));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/SqlQueryExecution.java",
        "error_code": "STACK_OVERFLOW",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "statement is too large (stack overflow during analysis)",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(STACK_OVERFLOW, \"statement is too large (stack overflow during analysis)\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/SqlQueryExecution.java",
        "error_code": "STACK_OVERFLOW",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "statement is too large (stack overflow during analysis)",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(STACK_OVERFLOW, \"statement is too large (stack overflow during analysis)\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/SqlQueryManager.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Query %s already registered{}",
        "error_message_variables": [
            ", queryExecution.getQueryId())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Query %s already registered\", queryExecution.getQueryId()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/SqlTask.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalStateException(format(\"Invalid state for output buffer destruction: %s\", newState));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/SqlTaskExecution.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Thread must hold a lock on the %s\", getClass().getSimpleName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/SqlTaskExecutionFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/SqlTaskManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/StartTransactionTask.java",
        "error_code": "StandardErrorCode.INCOMPATIBLE_CLIENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Client does not support transactions",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(StandardErrorCode.INCOMPATIBLE_CLIENT, \"Client does not support transactions\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/StartTransactionTask.java",
        "error_code": "StandardErrorCode.NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Nested transactions not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(StandardErrorCode.NOT_SUPPORTED, \"Nested transactions not supported\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/StateMachine.java",
        "error_code": "SERVER_SHUTTING_DOWN",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Server is shutting down",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(SERVER_SHUTTING_DOWN, \"Server is shutting down\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/TableExecuteContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"splitsInfo already set to \" + this.splitsInfo);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/TableExecuteContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"splitsInfo not set yet\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/TableExecuteContextManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"TableExecuteContext already registered for query \" + queryId);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/TableExecuteContextManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"TableExecuteContext not registered for query \" + queryId);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/TaskStateMachine.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalStateException(\"Unhandled terminating state: \" + currentState);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/UseTask.java",
        "error_code": "CATALOG_NOT_FOUND",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Catalog '%s' not found{}",
        "error_message_variables": [
            ".formatted(catalog)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(CATALOG_NOT_FOUND, \"Catalog '%s' not found\".formatted(catalog));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/UseTask.java",
        "error_code": "NOT_FOUND",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Schema does not exist: {}",
        "error_message_variables": [
            "name"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_FOUND, \"Schema does not exist: \" + name);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/UseTask.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(\"Cannot access schema: \" + name);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/LazyOutputBuffer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected output buffers type: \" + newOutputBuffers.getClass());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PageDeserializer.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to create cipher: {}",
        "error_message_variables": [
            "e.getMessage()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Failed to create cipher: \" + e.getMessage(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PageDeserializer.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot decrypt previously encrypted data: {}",
        "error_message_variables": [
            "e.getMessage()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Cannot decrypt previously encrypted data: \" + e.getMessage(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PageDeserializer.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to init cipher: {}",
        "error_message_variables": [
            "e.getMessage()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Failed to init cipher: \" + e.getMessage(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PageDeserializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedEncodingException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedEncodingException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PageDeserializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PageDeserializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PageSerializer.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to create cipher: {}",
        "error_message_variables": [
            "e.getMessage()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Failed to create cipher: \" + e.getMessage(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PageSerializer.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to encrypt data: {}",
        "error_message_variables": [
            "e.getMessage()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Failed to encrypt data: \" + e.getMessage(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PageSerializer.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to init cipher: {}",
        "error_message_variables": [
            "e.getMessage()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Failed to init cipher: \" + e.getMessage(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PageSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PageSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PageSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PageSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PageSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PageSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PageSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PagesSerdeUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "EOFException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new EOFException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PagesSerdeUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PagesSerdeUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "EOFException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new EOFException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PagesSerdeUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PipelinedOutputBuffers.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"newOutputBuffers version is older\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/PipelinedOutputBuffers.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"newOutputBuffers has changed the assignment for task \" + entry.getKey());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/SpoolingExchangeOutputBuffer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/SpoolingExchangeOutputBuffer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/SpoolingExchangeOutputBuffer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/buffer/SpoolingOutputBuffers.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"new outputBuffers version is older\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/resourcegroups/InternalResourceGroup.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported scheduling policy: \" + policy);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/resourcegroups/InternalResourceGroup.java",
        "error_code": "INVALID_RESOURCE_GROUP",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot add queries to %s. It is not a leaf group.{}",
        "error_message_variables": [
            ", id)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_RESOURCE_GROUP, format(\"Cannot add queries to %s. It is not a leaf group.\", id));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/resourcegroups/InternalResourceGroupManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Resource group configuration manager '%s' is already registered\", factory.getName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/resourcegroups/NoOpResourceGroupManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/resourcegroups/NoOpResourceGroupManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/resourcegroups/NoOpResourceGroupManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/resourcegroups/NoOpResourceGroupManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/resourcegroups/StochasticPriorityQueue.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/resourcegroups/WeightedFairQueue.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/FileBasedNetworkTopology.java",
        "error_code": "Could not read topology file",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Could not read topology file\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/NodeSchedulerConfig.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unknown node scheduler policy: \" + nodeSchedulerPolicy);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/PartitionedPipelinedOutputBufferManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected new output buffer \" + newBuffer);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/PartitionedPipelinedOutputBufferManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"newOutputBuffers has changed the assignment for task \" + newBuffer);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/PipelinedQueryScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unexpected retry policy: \" + retryPolicy);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/PipelinedQueryScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unknown blocked reason: \" + result.getBlockedReason().get());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/PipelinedQueryScheduler.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Scheduling is complete, but stage %s is in state %s{}",
        "error_message_variables": [
            ", stageExecution.getStageId(), state)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Scheduling is complete, but stage %s is in state %s\", stageExecution.getStageId(), state));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/ResettableRandomizedIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NoSuchElementException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NoSuchElementException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/SubnetBasedTopology.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Subnet hierarchy should be listed in the order of increasing prefix lengths\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/SubnetBasedTopology.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Subnet mask prefix lengths are invalid\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/TopologyAwareNodeSelector.java",
        "error_code": "NO_NODES_AVAILABLE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "No nodes available to run query",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NO_NODES_AVAILABLE, \"No nodes available to run query\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/UniformNodeSelector.java",
        "error_code": "NO_NODES_AVAILABLE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "No nodes available to run query",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NO_NODES_AVAILABLE, \"No nodes available to run query\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/UniformNodeSelector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported split balancing policy \" + splitsBalancingPolicy);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/faulttolerant/BinPackingNodeAllocatorService.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"unknown status: \" + result.getStatus());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/faulttolerant/BinPackingNodeAllocatorService.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NoSuchElementException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NoSuchElementException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/faulttolerant/BinPackingNodeAllocatorService.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/faulttolerant/BinPackingNodeAllocatorService.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"cannot attach taskId \" + taskId + \"; already attached to \" + this.taskId.get());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/faulttolerant/BinPackingNodeAllocatorService.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Node \" + node + \" already released\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/faulttolerant/EventDrivenFaultTolerantQueryScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"partial cancel is not supported in fault tolerant mode\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/faulttolerant/EventDrivenFaultTolerantQueryScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/faulttolerant/EventDrivenFaultTolerantQueryScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedExecutionException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedExecutionException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/faulttolerant/EventDrivenFaultTolerantQueryScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/faulttolerant/EventDrivenFaultTolerantQueryScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/faulttolerant/EventDrivenFaultTolerantQueryScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/faulttolerant/EventDrivenFaultTolerantQueryScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/faulttolerant/EventDrivenFaultTolerantQueryScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"EventListener no implemented\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/faulttolerant/EventDrivenTaskSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/faulttolerant/EventDrivenTaskSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/faulttolerant/EventDrivenTaskSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/faulttolerant/EventDrivenTaskSourceFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected partitioning: \" + partitioning);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/faulttolerant/TaskDescriptorStorage.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NoSuchElementException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NoSuchElementException(format(\"descriptor not found for key %s/%s\", stageId, partitionId));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/faulttolerant/TaskDescriptorStorage.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NoSuchElementException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NoSuchElementException(format(\"descriptor not found for key %s/%s\", stageId, partitionId));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/execution/scheduler/policy/AllAtOnceExecutionSchedule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented: \" + node.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/CachingResolver.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonEmptySequenceNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonEmptySequenceNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonEmptySequenceNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonEmptySequenceNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonEmptySequenceNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonEmptySequenceNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonEmptySequenceNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonEmptySequenceNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonEmptySequenceNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonEmptySequenceNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonEmptySequenceNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonEmptySequenceNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonEmptySequenceNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonEmptySequenceNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonEmptySequenceNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonEmptySequenceNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonEmptySequenceNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonEmptySequenceNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonEmptySequenceNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonInputErrorNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonInputErrorNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonInputErrorNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonInputErrorNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonInputErrorNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonInputErrorNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonInputErrorNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonInputErrorNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonInputErrorNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonInputErrorNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonInputErrorNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonInputErrorNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonInputErrorNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonInputErrorNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonInputErrorNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonInputErrorNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonInputErrorNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonInputErrorNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/JsonInputErrorNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(\"accessing the last array index with no enclosing array\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(\"accessing current filter item with no enclosing filter\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"JSON path evaluating visitor not implemented for \" + node.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(\"arithmetic binary expression requires singleton operands\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(format(\"invalid operand types to %s operator (%s, %s)\", node.operator().name(), left.getType(), right.getType()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"unexpected type\" + type.getDisplayName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(\"array subscript 'from' value must be singleton numeric\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(\"array subscript 'to' value must be singleton numeric\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(format(\"cannot convert value %s to long\", jsonNode));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"date method is not yet supported\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"unexpected Json node type: \" + ((JsonNode) object).getNodeType());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "PathEvaluationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new PathEvaluationException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathPredicateEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"JSON predicate evaluating visitor applied to a non-predicate node \" + node.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathPredicateEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"JSON predicate evaluating visitor not implemented for \" + node.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/PathPredicateEvaluationVisitor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unexpected comparison operator \" + comparisonOperator);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/ir/SqlJsonLiteralConverter.java",
        "error_code": "jsonNode",
        "error_code_name": null,
        "error_class_name": "JsonLiteralConversionException",
        "error_message_template": "value too big",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonLiteralConversionException(jsonNode, \"value too big\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/json/ir/SqlJsonLiteralConverter.java",
        "error_code": "jsonNode",
        "error_code_name": null,
        "error_class_name": "JsonLiteralConversionException",
        "error_message_template": "precision too big",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonLiteralConversionException(jsonNode, \"precision too big\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/likematcher/DenseDfaMatcher.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException(\"Not supported: \" + item.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/likematcher/FjsMatcher.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case Pattern.Any any -> throw new IllegalArgumentException(\"'any' pattern not supported\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/likematcher/LikeMatcher.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Escape character must be followed by '%', '_' or the escape character itself\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/likematcher/LikeMatcher.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Escape character must be followed by '%', '_' or the escape character itself\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/memory/KillTarget.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"either query or tasks must be set\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/memory/MemoryManagerConfig.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(format(\"Unrecognized value: '%s'\", value));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/memory/MemoryManagerConfig.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(format(\"Unrecognized value: '%s'\", value));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/memory/MemoryPool.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"cancellation is not supported\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/memory/QueryContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"tryReserveMemory is not supported\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/AbstractTypedJacksonModule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/BuiltinFunctionResolver.java",
        "error_code": "operatorType",
        "error_code_name": null,
        "error_class_name": "OperatorNotFoundException",
        "error_message_template": "{}",
        "error_message_variables": [
            "argumentTypes"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new OperatorNotFoundException(operatorType, argumentTypes, cause);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/BuiltinFunctionResolver.java",
        "error_code": "operatorType",
        "error_code_name": null,
        "error_class_name": "OperatorNotFoundException",
        "error_message_template": "{}",
        "error_message_variables": [
            "ImmutableList.of(fromType)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new OperatorNotFoundException(operatorType, ImmutableList.of(fromType), toType.getTypeSignature(), cause);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/Catalog.java",
        "error_code": "CATALOG_UNAVAILABLE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Catalog '%s' failed to initialize and is disabled{}",
        "error_message_variables": [
            ", catalogName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(CATALOG_UNAVAILABLE, format(\"Catalog '%s' failed to initialize and is disabled\", catalogName));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/CatalogManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/CatalogManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/CatalogMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown catalog handle: \" + catalogHandle);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/CatalogMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown catalog handle: \" + catalogHandle);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/CatalogProcedures.java",
        "error_code": "PROCEDURE_NOT_FOUND",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Procedure not registered: {}",
        "error_message_variables": [
            "name"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(PROCEDURE_NOT_FOUND, \"Procedure not registered: \" + name);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/CatalogProcedures.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported argument type: \" + type.getDisplayName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/CatalogTableProcedures.java",
        "error_code": "PROCEDURE_NOT_FOUND",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Table procedure not registered: {}",
        "error_message_variables": [
            "name"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(PROCEDURE_NOT_FOUND, \"Table procedure not registered: \" + name);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/DisabledSystemSecurityMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "System roles are not enabled",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"System roles are not enabled\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/DisabledSystemSecurityMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "System roles are not enabled",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"System roles are not enabled\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/DisabledSystemSecurityMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "System roles are not enabled",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"System roles are not enabled\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/DisabledSystemSecurityMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "System roles are not enabled",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"System roles are not enabled\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/DiscoveryNodeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"INVARIANT: current node not returned from service selector\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/FunctionBinder.java",
        "error_code": "FUNCTION_IMPLEMENTATION_MISSING",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"%s not found{}",
        "error_message_variables": [
            ", signature)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_MISSING, format(\"%s not found\", signature));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/FunctionBinder.java",
        "error_code": "AMBIGUOUS_FUNCTION_CALL",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "errorMessageBuilder.toString()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(AMBIGUOUS_FUNCTION_CALL, errorMessageBuilder.toString());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/FunctionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e.getCause());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/FunctionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e.getCause());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/FunctionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e.getCause());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/FunctionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unknown argument convention: \" + argumentConvention);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/FunctionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unknown return convention: \" + convention.getReturnConvention());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/FunctionManager.java",
        "error_code": "FUNCTION_IMPLEMENTATION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "format(message, args)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_ERROR, format(message, args));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/FunctionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "() -> { throw new UnsupportedOperationException(); },"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/FunctionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "() -> { throw new UnsupportedOperationException(); },"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/FunctionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "() -> { throw new UnsupportedOperationException(); });"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/FunctionResolver.java",
        "error_code": "FUNCTION_NOT_FOUND",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid function name: {}",
        "error_message_variables": [
            "name"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_NOT_FOUND, \"Invalid function name: \" + name);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/HandleResolver.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Handle ID not found: \" + id);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/InternalBlockEncodingSerde.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown type \" + id);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/InternalFunctionBundle.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e.getCause());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/InternalFunctionBundle.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e.getCause());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/InternalFunctionBundle.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e.getCause());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/InternalFunctionDependencies.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UndeclaredDependencyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UndeclaredDependencyException(typeSignature.toString());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/InternalFunctionDependencies.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UndeclaredDependencyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UndeclaredDependencyException(functionKey.toString());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/InternalFunctionDependencies.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UndeclaredDependencyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UndeclaredDependencyException(operatorKey.toString());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/InternalFunctionDependencies.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UndeclaredDependencyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UndeclaredDependencyException(castKey.toString());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/InternalFunctionDependencies.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UndeclaredDependencyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UndeclaredDependencyException(functionKey.toString());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/InternalFunctionDependencies.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UndeclaredDependencyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UndeclaredDependencyException(functionKey.toString());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/InternalFunctionDependencies.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UndeclaredDependencyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UndeclaredDependencyException(operatorKey.toString());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/InternalFunctionDependencies.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UndeclaredDependencyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UndeclaredDependencyException(operatorKey.toString());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/InternalFunctionDependencies.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UndeclaredDependencyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UndeclaredDependencyException(castKey.toString());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/InternalFunctionDependencies.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UndeclaredDependencyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UndeclaredDependencyException(castKey.toString());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/LanguageFunctionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Query already registered: \" + session.getQueryId());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/LanguageFunctionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Query not registered: \" + session.getQueryId());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/LanguageFunctionManager.java",
        "error_code": "FUNCTION_IMPLEMENTATION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Catalog %s returned functions named %s when listing functions named %s{}",
        "error_message_variables": [
            ".formatted(catalogHandle.getCatalogName(), names, name)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_ERROR, \"Catalog %s returned functions named %s when listing functions named %s\".formatted(catalogHandle.getCatalogName(), names, name));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/LanguageFunctionManager.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(functionSpecification)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, extractLocation(functionSpecification), error, null);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/LanguageFunctionManager.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "LanguageFunctionAnalysisException",
        "error_message_template": "{}",
        "error_message_variables": [
            "error"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new LanguageFunctionAnalysisException(NOT_SUPPORTED, error);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/LanguageFunctionManager.java",
        "error_code": "e::getErrorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e.getRawMessage()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(e::getErrorCode, e.getRawMessage(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/LanguageFunctionManager.java",
        "error_code": "FUNCTION_IMPLEMENTATION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error analyzing stored function: {}",
        "error_message_variables": [
            "nameSignature()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_ERROR, \"Error analyzing stored function: \" + nameSignature(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/LanguageFunctionProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"SQL language functions are disabled\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/LanguageFunctionProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"SQL language functions are disabled\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/Metadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/Metadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/Metadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/Metadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataManager.java",
        "error_code": "INVALID_VIEW",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unknown type '%s' for column '%s' in materialized view: %s{}",
        "error_message_variables": [
            ", column.getType(), column.getName(), name)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_VIEW, format(\"Unknown type '%s' for column '%s' in materialized view: %s\", column.getType(), column.getName(), name));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataManager.java",
        "error_code": "INVALID_VIEW",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unknown type '%s' for column '%s' in view: %s{}",
        "error_message_variables": [
            ", column.getType(), column.getName(), name)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_VIEW, format(\"Unknown type '%s' for column '%s' in view: %s\", column.getType(), column.getName(), name));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataManager.java",
        "error_code": "SYNTAX_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot rename tables across catalogs",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(SYNTAX_ERROR, \"Cannot rename tables across catalogs\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataManager.java",
        "error_code": "FUNCTION_IMPLEMENTATION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Type '%s' is not compatible with the supplied type '%s' in getSupportedType{}",
        "error_message_variables": [
            ", type, newType)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_ERROR, format(\"Type '%s' is not compatible with the supplied type '%s' in getSupportedType\", type, newType));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataManager.java",
        "error_code": "SCHEMA_NOT_FOUND",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Schema '%s' does not exist{}",
        "error_message_variables": [
            ", schemaName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(SCHEMA_NOT_FOUND, format(\"Schema '%s' does not exist\", schemaName));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataManager.java",
        "error_code": "SCHEMA_NOT_FOUND",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Schema '%s' does not exist{}",
        "error_message_variables": [
            ", schemaName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(SCHEMA_NOT_FOUND, format(\"Schema '%s' does not exist\", schemaName));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataManager.java",
        "error_code": "INVALID_VIEW",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Run-as identity cannot be set for a run-as invoker view: {}",
        "error_message_variables": [
            "viewName"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_VIEW, \"Run-as identity cannot be set for a run-as invoker view: \" + viewName);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataManager.java",
        "error_code": "INVALID_VIEW",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Run-as identity must be set for a run-as definer view: {}",
        "error_message_variables": [
            "viewName"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_VIEW, \"Run-as identity must be set for a run-as definer view: \" + viewName);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataManager.java",
        "error_code": "SYNTAX_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot rename views across catalogs",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(SYNTAX_ERROR, \"Cannot rename views across catalogs\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataManager.java",
        "error_code": "SYNTAX_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot rename materialized views across catalogs",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(SYNTAX_ERROR, \"Cannot rename materialized views across catalogs\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataManager.java",
        "error_code": "TABLE_REDIRECTION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Table redirected too many times (%d): %s{}",
        "error_message_variables": [
            ", MAX_TABLE_REDIRECTIONS, visitedTableNames)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(TABLE_REDIRECTION_ERROR, format(\"Table redirected too many times (%d): %s\", MAX_TABLE_REDIRECTIONS, visitedTableNames));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataManager.java",
        "error_code": "TABLE_REDIRECTION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Table '%s' redirected to '%s', but the target catalog '%s' does not exist{}",
        "error_message_variables": [
            ", tableName, targetTableName, targetTableName.catalogName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(TABLE_REDIRECTION_ERROR, format(\"Table '%s' redirected to '%s', but the target catalog '%s' does not exist\", tableName, targetTableName, targetTableName.catalogName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataManager.java",
        "error_code": "TABLE_REDIRECTION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Table '%s' redirected to '%s', but the target schema '%s' does not exist{}",
        "error_message_variables": [
            ", tableName, targetTableName, targetTableName.schemaName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(TABLE_REDIRECTION_ERROR, format(\"Table '%s' redirected to '%s', but the target schema '%s' does not exist\", tableName, targetTableName, targetTableName.schemaName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataManager.java",
        "error_code": "TABLE_REDIRECTION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Table '%s' redirected to '%s', but the target table '%s' does not exist{}",
        "error_message_variables": [
            ", tableName, targetTableName, targetTableName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(TABLE_REDIRECTION_ERROR, format(\"Table '%s' redirected to '%s', but the target table '%s' does not exist\", tableName, targetTableName, targetTableName));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": ".ifPresent(variableName -> { throw new IllegalStateException(\"Unbound variable: \" + variableName); });"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataManager.java",
        "error_code": "FUNCTION_IMPLEMENTATION_MISSING",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"%s not found{}",
        "error_message_variables": [
            ", name)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_MISSING, format(\"%s not found\", name));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Function dependencies for SQL functions must be fetched directly from the language manager\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "() -> { throw new UnsupportedOperationException(); },"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "() -> { throw new UnsupportedOperationException(); },"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "() -> { throw new UnsupportedOperationException(); });"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NullPointerException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NullPointerException(format(\"%s is null\", name));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataUtil.java",
        "error_code": "SYNTAX_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Too many dots in table name: %s{}",
        "error_message_variables": [
            ", name)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(SYNTAX_ERROR, format(\"Too many dots in table name: %s\", name));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/MetadataUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case CURRENT_ROLE -> throw new UnsupportedOperationException(\"CURRENT_ROLE is not yet supported\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/PolymorphicScalarFunction.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"two matching methods (\" + matchingMethod.get().method().getName() + \" and \" + candidateMethod.method().getName() + \") for parameter types \" + functionBinding.getBoundSignature().getArgumentTypes());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/PolymorphicScalarFunction.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unknown argument convention: \" + argumentConvention);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/PolymorphicScalarFunction.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"BLOCK_BUILDER return convention is not yet supported\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/PropertyUtil.java",
        "error_code": "errorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "location"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(errorCode, location, message, null);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/PropertyUtil.java",
        "error_code": "errorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "location"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(errorCode, location, message, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/PropertyUtil.java",
        "error_code": "errorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "location"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(errorCode, location, message, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/PropertyUtil.java",
        "error_code": "errorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "location"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(errorCode, location, message, null);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/PropertyUtil.java",
        "error_code": "errorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Property %s for %s cannot have a null value{}",
        "error_message_variables": [
            ".formatted(name, description)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(errorCode, \"Property %s for %s cannot have a null value\".formatted(name, description));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/PropertyUtil.java",
        "error_code": "errorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "No PropertyMetadata for property: {}",
        "error_message_variables": [
            "name"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(errorCode, \"No PropertyMetadata for property: \" + name);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/PropertyUtil.java",
        "error_code": "errorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Property value is null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case null -> throw new TrinoException(errorCode, \"Property value is null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/PropertyUtil.java",
        "error_code": "errorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to convert object of type %s to expression{}",
        "error_message_variables": [
            ".formatted(value.getClass().getName())"
        ],
        "severity_level": "ERROR",
        "original_text": "default -> throw new TrinoException(errorCode, \"Failed to convert object of type %s to expression\".formatted(value.getClass().getName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SessionPropertyManager.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"%s is invalid: %s{}",
        "error_message_variables": [
            ", fullPropertyName, propertyValue)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, format(\"%s is invalid: %s\", fullPropertyName, propertyValue), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SessionPropertyManager.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Session property value must not be null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, \"Session property value must not be null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SessionPropertyManager.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Session property cannot be null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, \"Session property cannot be null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SessionPropertyManager.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Session property type %s is not supported{}",
        "error_message_variables": [
            ", type)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, format(\"Session property type %s is not supported\", type));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SessionPropertyManager.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Session property cannot be null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, \"Session property cannot be null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SessionPropertyManager.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Session property type %s is not supported{}",
        "error_message_variables": [
            ", type)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, format(\"Session property type %s is not supported\", type));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SessionPropertyManager.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Session property type %s is not supported{}",
        "error_message_variables": [
            ", type)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, format(\"Session property type %s is not supported\", type));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SessionPropertyManager.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Session property map key type %s is not supported{}",
        "error_message_variables": [
            ", type)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, format(\"Session property map key type %s is not supported\", type));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SignatureBinder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Literal parameters may not be shared across different types\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SignatureBinder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unknown parameter kind: \" + parameter.getKind());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SignatureBinder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unknown parameter kind: \" + parameter.getKind());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SignatureBinder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "VerifyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new VerifyException(format(\"SignatureBinder.iterativeSolve does not converge after %d iterations.\", SOLVE_ITERATION_LIMIT));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SignatureBinder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "VerifyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new VerifyException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SignatureBinder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"unknown status\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SignatureBinder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unknown parameter kind: \" + parameter.getKind());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SqlAggregationFunction.java",
        "error_code": "Invalid aggregation class \" + aggregationDefinition.getSimpleName()",
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid aggregation class \" + aggregationDefinition.getSimpleName(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SqlAggregationFunction.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SqlScalarFunction.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SystemSecurityMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SystemSecurityMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SystemSecurityMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SystemSecurityMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/SystemSecurityMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/TypeRegistry.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e.getCause());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/TypeRegistry.java",
        "error_code": "sqlType",
        "error_code_name": null,
        "error_class_name": "TypeNotFoundException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TypeNotFoundException(sqlType, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/TypeRegistry.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TypeNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TypeNotFoundException(signature);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/TypeRegistry.java",
        "error_code": "signature",
        "error_code_name": null,
        "error_class_name": "TypeNotFoundException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TypeNotFoundException(signature, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/metadata/TypeRegistry.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(Joiner.on(\", \").join(messages));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/BigintGroupByHash.java",
        "error_code": "GENERIC_INSUFFICIENT_RESOURCES",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Size of hash table cannot exceed 1 billion entries",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INSUFFICIENT_RESOURCES, \"Size of hash table cannot exceed 1 billion entries\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/BigintGroupByHash.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/BigintGroupByHash.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/BigintGroupByHash.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/DeduplicatingDirectExchangeBuffer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(failure);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/DeduplicatingDirectExchangeBuffer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/DeduplicatingDirectExchangeBuffer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/DeduplicatingDirectExchangeBuffer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/DeduplicatingDirectExchangeBuffer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/DeduplicatingDirectExchangeBuffer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/DeduplicatingDirectExchangeBuffer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/DeduplicatingDirectExchangeBuffer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/DeleteAndInsertMergeProcessor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case UPDATE_INSERT_OPERATION_NUMBER, UPDATE_DELETE_OPERATION_NUMBER -> throw new IllegalArgumentException(\"Unexpected operator number: \" + operation);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/DeleteAndInsertMergeProcessor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unknown operator number: \" + operation);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/DirectExchangeClientFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case TASK -> throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/Driver.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/Driver.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(inFlightException);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/DynamicFilterSourceOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/EnforceSingleRowOperator.java",
        "error_code": "SUBQUERY_MULTIPLE_ROWS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Scalar sub-query has returned multiple rows",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(SUBQUERY_MULTIPLE_ROWS, \"Scalar sub-query has returned multiple rows\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/ExchangeOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName() + \" cannot take input\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/ExplainAnalyzeOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/FinishedOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/FlatGroupByHash.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/FlatGroupByHash.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/FlatGroupByHash.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/FlatGroupByHash.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/FlatHash.java",
        "error_code": "GENERIC_INSUFFICIENT_RESOURCES",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Size of hash table cannot exceed 1 billion entries",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INSUFFICIENT_RESOURCES, \"Size of hash table cannot exceed 1 billion entries\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/FlatHash.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/FlatHashStrategyCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/FlatSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/FlatSet.java",
        "error_code": "GENERIC_INSUFFICIENT_RESOURCES",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Size of hash table cannot exceed 1 billion entries",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INSUFFICIENT_RESOURCES, \"Size of hash table cannot exceed 1 billion entries\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/FlatSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/FlatSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/FlatSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/HashAggregationOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/HttpPageBufferClient.java",
        "error_code": "REMOTE_TASK_FAILED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Remote task failed: %s{}",
        "error_message_variables": [
            ", remoteTaskId)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(REMOTE_TASK_FAILED, format(\"Remote task failed: %s\", remoteTaskId));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/HttpPageBufferClient.java",
        "error_code": "fromUri(uri)",
        "error_code_name": null,
        "error_class_name": "PageTransportErrorException",
        "error_message_template": "ormat(\"Expected response code to be 200, but was %s:%n%s{}",
        "error_message_variables": [
            ", response.getStatusCode(), body)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new PageTransportErrorException(fromUri(uri), format(\"Expected response code to be 200, but was %s:%n%s\", response.getStatusCode(), body));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/HttpPageBufferClient.java",
        "error_code": "fromUri(uri)",
        "error_code_name": null,
        "error_class_name": "PageTransportErrorException",
        "error_message_template": "ormat(\"%s header is not set: %s{}",
        "error_message_variables": [
            ", CONTENT_TYPE, response)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new PageTransportErrorException(fromUri(uri), format(\"%s header is not set: %s\", CONTENT_TYPE, response));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/HttpPageBufferClient.java",
        "error_code": "fromUri(uri)",
        "error_code_name": null,
        "error_class_name": "PageTransportErrorException",
        "error_message_template": "ormat(\"Expected %s response from server but got %s{}",
        "error_message_variables": [
            ", TRINO_PAGES_TYPE, contentType)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new PageTransportErrorException(fromUri(uri), format(\"Expected %s response from server but got %s\", TRINO_PAGES_TYPE, contentType));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/HttpPageBufferClient.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Invalid stream header, expected 0x%08x, but was 0x%08x\", SERIALIZED_PAGES_MAGIC, magic));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/HttpPageBufferClient.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/HttpPageBufferClient.java",
        "error_code": "fromUri(uri)",
        "error_code_name": null,
        "error_class_name": "PageTransportErrorException",
        "error_message_template": "ormat(\"Error fetching %s: %s{}",
        "error_message_variables": [
            ", request.getUri().toASCIIString(), e.getMessage())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new PageTransportErrorException(fromUri(uri), format(\"Error fetching %s: %s\", request.getUri().toASCIIString(), e.getMessage()), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/HttpPageBufferClient.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ChecksumVerificationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ChecksumVerificationException(format(\"Data corruption, read checksum: 0x%08x, calculated checksum: 0x%08x\", readChecksum, calculatedChecksum));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/HttpPageBufferClient.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ChecksumVerificationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ChecksumVerificationException(format(\"Expected checksum to be NO_CHECKSUM (0x%08x) but is 0x%08x\", NO_CHECKSUM, readChecksum));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/HttpPageBufferClient.java",
        "error_code": "fromUri(uri)",
        "error_code_name": null,
        "error_class_name": "PageTransportErrorException",
        "error_message_template": "ormat(\"Expected %s header{}",
        "error_message_variables": [
            ", TRINO_TASK_INSTANCE_ID)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new PageTransportErrorException(fromUri(uri), format(\"Expected %s header\", TRINO_TASK_INSTANCE_ID));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/HttpPageBufferClient.java",
        "error_code": "fromUri(uri)",
        "error_code_name": null,
        "error_class_name": "PageTransportErrorException",
        "error_message_template": "ormat(\"Expected %s header{}",
        "error_message_variables": [
            ", TRINO_PAGE_TOKEN)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new PageTransportErrorException(fromUri(uri), format(\"Expected %s header\", TRINO_PAGE_TOKEN));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/HttpPageBufferClient.java",
        "error_code": "fromUri(uri)",
        "error_code_name": null,
        "error_class_name": "PageTransportErrorException",
        "error_message_template": "ormat(\"Expected %s header{}",
        "error_message_variables": [
            ", TRINO_PAGE_NEXT_TOKEN)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new PageTransportErrorException(fromUri(uri), format(\"Expected %s header\", TRINO_PAGE_NEXT_TOKEN));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/HttpPageBufferClient.java",
        "error_code": "fromUri(uri)",
        "error_code_name": null,
        "error_class_name": "PageTransportErrorException",
        "error_message_template": "ormat(\"Expected %s header{}",
        "error_message_variables": [
            ", TRINO_BUFFER_COMPLETE)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new PageTransportErrorException(fromUri(uri), format(\"Expected %s header\", TRINO_BUFFER_COMPLETE));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/HttpPageBufferClient.java",
        "error_code": "fromUri(uri)",
        "error_code_name": null,
        "error_class_name": "PageTransportErrorException",
        "error_message_template": "ormat(\"Expected %s header{}",
        "error_message_variables": [
            ", TRINO_TASK_FAILED)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new PageTransportErrorException(fromUri(uri), format(\"Expected %s header\", TRINO_TASK_FAILED));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/InterpretedHashGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/JoinDomainBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "VerifyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case LazyBlock _ -> throw new VerifyException(\"Did not expect LazyBlock after loading \" + block.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/JoinDomainBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/JoinDomainBuilder.java",
        "error_code": "GENERIC_INSUFFICIENT_RESOURCES",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Size of hash table cannot exceed 1 billion entries",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INSUFFICIENT_RESOURCES, \"Size of hash table cannot exceed 1 billion entries\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/JoinDomainBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/JoinDomainBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/JoinDomainBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/JoinDomainBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/JoinDomainBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/JoinDomainBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/JoinDomainBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/LeafTableFunctionOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName() + \" does not take input\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/LeafTableFunctionOperator.java",
        "error_code": "FUNCTION_IMPLEMENTATION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid state, as no input has been provided: {}",
        "error_message_variables": [
            "state"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_ERROR, \"Invalid state, as no input has been provided: \" + state);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/MergeOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName() + \" cannot take input\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/MergeOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/NoChannelGroupByHash.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"NoChannelGroupByHash does not support appendValuesTo\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/NoChannelGroupByHash.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"NoChannelGroupByHash does not support getHashCollisions\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/OperatorContext.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Operator %s has non-zero user memory (%d bytes) after destroy(){}",
        "error_message_variables": [
            ", this, operatorMemoryContext.getUserMemory())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Operator %s has non-zero user memory (%d bytes) after destroy()\", this, operatorMemoryContext.getUserMemory()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/OperatorContext.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Operator %s has non-zero revocable memory (%d bytes) after destroy(){}",
        "error_message_variables": [
            ", this, operatorMemoryContext.getRevocableMemory())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Operator %s has non-zero revocable memory (%d bytes) after destroy()\", this, operatorMemoryContext.getRevocableMemory()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/OperatorContext.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Exception while running the listener",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Exception while running the listener\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/OperatorContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"%s should not be closed directly\", getClass()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/OperatorContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Called close on unclosable local memory context\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/OperatorContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Called close on unclosable aggregated memory context\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/OutputSpoolingController.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case BUFFER -> throw new IllegalStateException(\"Current mode can be either STREAM or SPOOL\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/OutputSpoolingOperatorFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/PagesIndex.java",
        "error_code": "GENERIC_INSUFFICIENT_RESOURCES",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Size of pages index cannot exceed 2 billion entries",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INSUFFICIENT_RESOURCES, \"Size of pages index cannot exceed 2 billion entries\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/PagesIndex.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ConcurrentModificationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ConcurrentModificationException(\"PagesIndex mutated during iteration: %s != %s\".formatted(startingModificationCount, modificationCount));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/PagesIndex.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ConcurrentModificationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ConcurrentModificationException(\"PagesIndex mutated during iteration: %s != %s\".formatted(startingModificationCount, modificationCount));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/PageSourceOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/PageSourceOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/PagesSpatialIndex.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/PagesSpatialIndex.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/PipelineContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown driver \" + driverContext);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/RefreshMaterializedViewOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/ScanFilterAndProjectOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/SimpleChannelComparator.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "throwable"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/SimplePagesIndexComparator.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "throwable"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/SimplePageWithPositionComparator.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "throwable"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/SimpleTableExecuteOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/SourceOperatorFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Source operator factories cannot be duplicated\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/SpatialIndexBuilderOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Spatial index build cannot be duplicated\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/StreamingDirectExchangeBuffer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(failure);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/TableMutationOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/TableScanOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/TableScanOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName() + \" cannot take input\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/TableWriterOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unhandled target type: \" + target.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/TopNRankingOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/ValuesOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/WorkProcessorSourceOperatorAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/WorkProcessorUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Cannot iterate over blocking WorkProcessor\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/AbstractMapAggregationState.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/AbstractMapAggregationState.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/AbstractMapAggregationState.java",
        "error_code": "GENERIC_INSUFFICIENT_RESOURCES",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Size of hash table cannot exceed 1 billion entries",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INSUFFICIENT_RESOURCES, \"Size of hash table cannot exceed 1 billion entries\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/AbstractMapAggregationState.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/AbstractMapAggregationState.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/AbstractMapAggregationState.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/AccumulatorCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/AccumulatorCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/AccumulatorCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/AccumulatorCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(format(\"Window accumulator class %s does not have a constructor with a single List argument or a no-argument constructor\", windowAccumulator.getName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/AggregationFromAnnotationsParser.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/AggregationLoopBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/AggregationMaskCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/CompiledAccumulatorFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/CompiledAccumulatorFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/CompiledAccumulatorFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/CompiledAccumulatorFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/CompiledAccumulatorFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/DecimalAverageAggregation.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ArithmeticException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ArithmeticException(\"Decimal overflow\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/DecimalSumAggregation.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/DecimalSumAggregation.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/DistinctAccumulatorFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Distinct aggregation function state can not be copied\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/DistinctAccumulatorFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/DistinctAccumulatorFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/DistinctAccumulatorFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/DistinctAccumulatorFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/LegacyApproximateLongPercentileAggregations.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Percentile accuracy must be strictly between 0 and 1",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Percentile accuracy must be strictly between 0 and 1\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/OrderedAccumulatorFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Ordered aggregation function state can not be copied\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/OrderedAccumulatorFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/OrderedAccumulatorFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/OrderedAccumulatorFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/OrderedAccumulatorFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/ParametricAggregation.java",
        "error_code": "AMBIGUOUS_FUNCTION_CALL",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Ambiguous function call (%s) for %s{}",
        "error_message_variables": [
            ", boundSignature, getFunctionMetadata().getSignature())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(AMBIGUOUS_FUNCTION_CALL, format(\"Ambiguous function call (%s) for %s\", boundSignature, getFunctionMetadata().getSignature()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/ParametricAggregation.java",
        "error_code": "FUNCTION_IMPLEMENTATION_MISSING",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unsupported type parameters (%s) for %s{}",
        "error_message_variables": [
            ", boundSignature, getFunctionMetadata().getSignature())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_MISSING, format(\"Unsupported type parameters (%s) for %s\", boundSignature, getFunctionMetadata().getSignature()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/ParametricAggregationImplementation.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "VerifyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new VerifyException(\"Unhandled annotation: \" + baseTypeAnnotation);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/ParametricAggregationImplementation.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(methodName + \" contains a parameter with @NullablePosition that is not @BlockPosition\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/ReduceAggregationFunction.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"State type not supported for %s: %s{}",
        "error_message_variables": [
            ", NAME, stateType.getDisplayName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, format(\"State type not supported for %s: %s\", NAME, stateType.getDisplayName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/TypeSignatureMapping.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported dependency \" + dependency);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/arrayagg/FlatArrayBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/arrayagg/FlatArrayBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/builder/InMemoryHashAggregationBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"startMemoryRevoke not supported for InMemoryHashAggregationBuilder\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/builder/InMemoryHashAggregationBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"finishMemoryRevoke not supported for InMemoryHashAggregationBuilder\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/builder/SpillableHashAggregationBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/histogram/TypedHistogram.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/histogram/TypedHistogram.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/histogram/TypedHistogram.java",
        "error_code": "GENERIC_INSUFFICIENT_RESOURCES",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Size of hash table cannot exceed 1 billion entries",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INSUFFICIENT_RESOURCES, \"Size of hash table cannot exceed 1 billion entries\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/histogram/TypedHistogram.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/histogram/TypedHistogram.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/histogram/TypedHistogram.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/listagg/AbstractListaggAggregationState.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Overflow filler length %d exceeds maximum length %d{}",
        "error_message_variables": [
            ", overflowFiller.length(), MAX_OVERFLOW_FILLER_LENGTH)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"Overflow filler length %d exceeds maximum length %d\", overflowFiller.length(), MAX_OVERFLOW_FILLER_LENGTH));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/listagg/AbstractListaggAggregationState.java",
        "error_code": "EXCEEDED_FUNCTION_MEMORY_LIMIT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Concatenated string has the length in bytes larger than the maximum output length %d{}",
        "error_message_variables": [
            ", maxOutputLength)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(EXCEEDED_FUNCTION_MEMORY_LIMIT, format(\"Concatenated string has the length in bytes larger than the maximum output length %d\", maxOutputLength));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/listagg/ListaggArrayAggregationState.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/minmaxbyn/TypedKeyValueHeap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/minmaxbyn/TypedKeyValueHeap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/minmaxbyn/TypedKeyValueHeap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/minmaxbyn/TypedKeyValueHeap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/minmaxbyn/TypedKeyValueHeap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/minmaxbyn/TypedKeyValueHeap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/minmaxn/TypedHeap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/minmaxn/TypedHeap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/minmaxn/TypedHeap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/minmaxn/TypedHeap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/multimapagg/AbstractMultimapAggregationState.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/multimapagg/AbstractMultimapAggregationState.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/multimapagg/AbstractMultimapAggregationState.java",
        "error_code": "GENERIC_INSUFFICIENT_RESOURCES",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Size of hash table cannot exceed 1 billion entries",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INSUFFICIENT_RESOURCES, \"Size of hash table cannot exceed 1 billion entries\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/multimapagg/AbstractMultimapAggregationState.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/multimapagg/AbstractMultimapAggregationState.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/multimapagg/AbstractMultimapAggregationState.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/partial/SkipAggregationBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"startMemoryRevoke not supported for SkipAggregationBuilder\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/partial/SkipAggregationBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"finishMemoryRevoke not supported for SkipAggregationBuilder\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/state/StateCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported bigArrayType: \" + bigArrayType.getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/state/StateCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/state/StateCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/state/StateCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/state/StateCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/state/StateCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/state/StateCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/state/StateCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Cannot generate implementation for method: \" + method.getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/aggregation/state/StateCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported initial value type: \" + initialValue.getClass());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/annotations/FunctionsParserHelper.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Operator dependency on \" + operator + \" is not allowed\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/annotations/FunctionsParserHelper.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/annotations/ImplementationDependency.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported annotation \" + annotation);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/annotations/ScalarImplementationDependency.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(getClass().getSimpleName() + \" does not support instance functions\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/exchange/LocalExchange.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported local exchange partitioning \" + partitioning);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/exchange/LocalExchange.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported local exchange partitioning \" + partitioning);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/exchange/LocalExchangeSourceOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Source operator factories cannot be duplicated\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/exchange/LocalExchangeSourceOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/exchange/LocalMergeSourceOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Source operator factories cannot be duplicated\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/exchange/LocalMergeSourceOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/function/EmptyTableFunctionPartition.java",
        "error_code": "FUNCTION_IMPLEMENTATION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "When function got no input, it should either produce output or return Blocked state",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_ERROR, \"When function got no input, it should either produce output or return Blocked state\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/function/RegularTableFunctionPartition.java",
        "error_code": "FUNCTION_IMPLEMENTATION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "When function got no input, it should either produce output or return Blocked state",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_ERROR, \"When function got no input, it should either produce output or return Blocked state\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/function/RegularTableFunctionPartition.java",
        "error_code": "FUNCTION_IMPLEMENTATION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Index of a pass-through row: %s out of processed portion of partition [0, %s]{}",
        "error_message_variables": [
            ", index, end)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_ERROR, format(\"Index of a pass-through row: %s out of processed portion of partition [0, %s]\", index, end));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/function/RegularTableFunctionPartition.java",
        "error_code": "FUNCTION_IMPLEMENTATION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Index of a pass-through row must be null when no input data from the partition was processed. Actual: {}",
        "error_message_variables": [
            "index"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_ERROR, \"Index of a pass-through row must be null when no input data from the partition was processed. Actual: \" + index);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/index/FieldSetFilteringRecordSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(t);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/index/FieldSetFilteringRecordSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/index/IndexLoader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/index/IndexLoader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/index/IndexLookupSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/index/IndexLookupSourceFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/index/IndexLookupSourceFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/index/IndexSourceOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName() + \" cannot take input\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/index/IndexSplit.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/index/IndexSplit.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/index/IndexSplit.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/DefaultPageJoiner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Partition %s is already spilled\", currentRowPartition));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/HashBuilderOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Parallel hash build cannot be duplicated\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/HashBuilderOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"State %s cannot have revocable memory, but has %s revocable bytes\", state, operatorContext.getReservedRevocableBytes()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/HashBuilderOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unhandled state: \" + state);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/HashBuilderOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/LookupOuterOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Source operator factories cannot be duplicated\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/LookupOuterOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/LookupSourceFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/LookupSourceFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/LookupSourceFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/NestedLoopJoinBridge.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/NestedLoopJoinOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NoSuchElementException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NoSuchElementException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/NestedLoopJoinOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NoSuchElementException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NoSuchElementException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/PartitionedLookupSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/PartitionedLookupSourceFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/PartitionedLookupSourceFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/PartitionedLookupSourceFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/PartitionedLookupSourceFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/PartitionedLookupSourceFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/PartitionedLookupSourceFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/PartitionedLookupSourceFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/PartitionedLookupSourceFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/SpillingJoinProcessor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/TrackingLookupSourceSupplier.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/unspilled/HashBuilderOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Parallel hash build cannot be duplicated\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/unspilled/HashBuilderOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unhandled state: \" + state);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/unspilled/LookupJoinOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/join/unspilled/PartitionedLookupSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/output/PagePartitionerPool.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/output/PositionsAppenderUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Cannot grow array beyond '%s'\", MAX_ARRAY_SIZE));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/output/UnnestingPositionsAppender.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case LazyBlock ignore -> throw new IllegalArgumentException(\"Unsupported block type: \" + source.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/output/UnnestingPositionsAppender.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case LazyBlock ignore -> throw new IllegalArgumentException(\"Unsupported block type: \" + source.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/project/DictionaryAwarePageProjection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"unexpected block type \" + block.getClass());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/project/GeneratedPageProjection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ArrayCombinationsFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Number of combinations too large for array of size %s and combination length %s{}",
        "error_message_variables": [
            ", arrayLength, combinationLength)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"Number of combinations too large for array of size %s and combination length %s\", arrayLength, combinationLength));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ArrayConcatFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "There must be two or more arguments to {}",
        "error_message_variables": [
            "FUNCTION_NAME"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"There must be two or more arguments to \" + FUNCTION_NAME);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ArrayContains.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "contains does not support arrays with elements that are null or contain null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"contains does not support arrays with elements that are null or contain null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ArrayElementAtFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "SQL array indices start at 1",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"SQL array indices start at 1\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ArrayJoin.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error casting array element to VARCHAR",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Error casting array element to VARCHAR\", throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ArrayPositionFunction.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "array_position does not support arrays with elements that are null or contain null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"array_position does not support arrays with elements that are null or contain null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ArrayRemoveFunction.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "array_remove does not support arrays with elements that are null or contain null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"array_remove does not support arrays with elements that are null or contain null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ArraySortComparatorFunction.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ArraySortComparatorFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Lambda comparator violates the comparator contract",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Lambda comparator violates the comparator contract\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ArraySubscriptOperator.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Array subscript must be less than or equal to array length: %s > %s{}",
        "error_message_variables": [
            ", index, array.getPositionCount())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"Array subscript must be less than or equal to array length: %s > %s\", index, array.getPositionCount()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ArraySubscriptOperator.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "SQL array indices start at 1",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"SQL array indices start at 1\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ArraySubscriptOperator.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Array subscript is negative: {}",
        "error_message_variables": [
            "index"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Array subscript is negative: \" + index);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ArrayToJsonCast.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ArrayTransformFunction.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/BitwiseFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Bits specified in bit_count must be between 2 and 64, got {}",
        "error_message_variables": [
            "bits"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Bits specified in bit_count must be between 2 and 64, got \" + bits);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/BitwiseFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Number must be representable with the bits specified. {}\" cannot be represented with {}\" bits",
        "error_message_variables": [
            "num",
            "bits"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Number must be representable with the bits specified. \" + num + \" cannot be represented with \" + bits + \" bits\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/CastFromUnknownOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"value of unknown type should always be null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ColorFunctions.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid color index: {}",
        "error_message_variables": [
            "index"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Invalid color index: \" + index);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ColorFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Invalid color: '%s'{}",
        "error_message_variables": [
            ", color.toStringUtf8())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"Invalid color: '%s'\", color.toStringUtf8()), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ConcatFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "There must be two or more concatenation arguments",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"There must be two or more concatenation arguments\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ConcatFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Concatenated string is too large",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Concatenated string is too large\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ConcatWsFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "There must be two or more arguments",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"There must be two or more arguments\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ConcatWsFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Concatenated string is too large",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Concatenated string is too large\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/DataSizeFunctions.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Value out of range: '%s' ('%sB'){}",
        "error_message_variables": [
            ", dataSize, bytes)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, format(\"Value out of range: '%s' ('%sB')\", dataSize, bytes));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/DateTimeFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/DateTimeFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/DateTimeFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/DateTimeFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/DateTimeFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/DateTimeFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/DateTimeFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "'{}\"' is not a valid DATE field",
        "error_message_variables": [
            "unit.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"'\" + unit.toStringUtf8() + \"' is not a valid DATE field\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/DateTimeFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "'{}\"' is not a valid TIMESTAMP field",
        "error_message_variables": [
            "unit.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"'\" + unit.toStringUtf8() + \"' is not a valid TIMESTAMP field\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/DateTimeFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/DateTimeFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/DateTimeFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/DateTimeFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/DateTimeFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"%%%s not supported in date format string{}",
        "error_message_variables": [
            ", character)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"%%%s not supported in date format string\", character));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/DateTimeFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/DateTimeFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/FailureFunction.java",
        "error_code": "StandardErrorCode.GENERIC_USER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "failureInfo.toException()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(StandardErrorCode.GENERIC_USER_ERROR, failureInfo.toException());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/FailureFunction.java",
        "error_code": "StandardErrorCode.GENERIC_USER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "message.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(StandardErrorCode.GENERIC_USER_ERROR, message.toStringUtf8());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/FailureFunction.java",
        "error_code": "standardErrorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "message.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(standardErrorCode, message.toStringUtf8());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/FailureFunction.java",
        "error_code": "StandardErrorCode.GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unable to find error for code: {}",
        "error_message_variables": [
            "errorCode"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(StandardErrorCode.GENERIC_INTERNAL_ERROR, \"Unable to find error for code: \" + errorCode);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/FormatFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Invalid format string: %s (%s){}",
        "error_message_variables": [
            ", format, message)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"Invalid format string: %s (%s)\", format, message), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/IpAddressFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid CIDR",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Invalid CIDR\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/IpAddressFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid network IP address",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Invalid network IP address\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/IpAddressFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid prefix length",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Invalid prefix length\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/IpAddressFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid CIDR",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Invalid CIDR\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/IpAddressFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid CIDR",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Invalid CIDR\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JoniRegexpCasts.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JoniRegexpFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Illegal replacement sequence: {}",
        "error_message_variables": [
            "replacement.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Illegal replacement sequence: \" + replacement.toStringUtf8());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JoniRegexpFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Illegal replacement sequence: unknown group { {}\" }",
        "error_message_variables": [
            "new String(groupName, StandardCharsets.UTF_8)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Illegal replacement sequence: unknown group { \" + new String(groupName, StandardCharsets.UTF_8) + \" }\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JoniRegexpFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Illegal replacement sequence: {}",
        "error_message_variables": [
            "replacement.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Illegal replacement sequence: \" + replacement.toStringUtf8());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JoniRegexpFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Illegal replacement sequence: unknown group {}",
        "error_message_variables": [
            "backref"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Illegal replacement sequence: unknown group \" + backref);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JoniRegexpFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Illegal replacement sequence: {}",
        "error_message_variables": [
            "replacement.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Illegal replacement sequence: \" + replacement.toStringUtf8());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JoniRegexpFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Group cannot be negative",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Group cannot be negative\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JoniRegexpFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Pattern has %d groups. Cannot access group %d{}",
        "error_message_variables": [
            ", region.numRegs - 1, group)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"Pattern has %d groups. Cannot access group %d\", region.numRegs - 1, group));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JoniRegexpFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "start position cannot be smaller than 1",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"start position cannot be smaller than 1\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JoniRegexpFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "occurrence cannot be smaller than 1",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"occurrence cannot be smaller than 1\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonExtract.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonExtract.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonExtract.java",
        "error_code": "jsonParser",
        "error_code_name": null,
        "error_class_name": "JsonParseException",
        "error_message_template": "Expected a JSON object or array",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonParseException(jsonParser, \"Expected a JSON object or array\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonExtract.java",
        "error_code": "jsonParser",
        "error_code_name": null,
        "error_class_name": "JsonParseException",
        "error_message_template": "Unexpected end of object",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonParseException(jsonParser, \"Unexpected end of object\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonExtract.java",
        "error_code": "jsonParser",
        "error_code_name": null,
        "error_class_name": "JsonParseException",
        "error_message_template": "Unexpected end of array",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonParseException(jsonParser, \"Unexpected end of array\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonExtract.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Index out of bounds",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Index out of bounds\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonExtract.java",
        "error_code": "jsonParser",
        "error_code_name": null,
        "error_class_name": "JsonParseException",
        "error_message_template": "Unexpected end of value",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonParseException(jsonParser, \"Unexpected end of value\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonExtract.java",
        "error_code": "jsonParser",
        "error_code_name": null,
        "error_class_name": "JsonParseException",
        "error_message_template": "Unexpected end of value",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonParseException(jsonParser, \"Unexpected end of value\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonExtract.java",
        "error_code": "jsonParser",
        "error_code_name": null,
        "error_class_name": "JsonParseException",
        "error_message_template": "Unexpected end of value",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonParseException(jsonParser, \"Unexpected end of value\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid JSON value: {}",
        "error_message_variables": [
            "truncateIfNecessaryForErrorMessage(json)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Invalid JSON value: \" + truncateIfNecessaryForErrorMessage(json));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid JSON value: {}",
        "error_message_variables": [
            "truncateIfNecessaryForErrorMessage(json)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Invalid JSON value: \" + truncateIfNecessaryForErrorMessage(json));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid JSON value: {}",
        "error_message_variables": [
            "truncateIfNecessaryForErrorMessage(json)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Invalid JSON value: \" + truncateIfNecessaryForErrorMessage(json));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid JSON value: {}",
        "error_message_variables": [
            "truncateIfNecessaryForErrorMessage(json)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Invalid JSON value: \" + truncateIfNecessaryForErrorMessage(json));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to %s{}",
        "error_message_variables": [
            ", json.toStringUtf8(), VARCHAR)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to %s\", json.toStringUtf8(), VARCHAR), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to %s{}",
        "error_message_variables": [
            ", json.toStringUtf8(), BIGINT)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to %s\", json.toStringUtf8(), BIGINT), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to %s{}",
        "error_message_variables": [
            ", json.toStringUtf8(), INTEGER)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to %s\", json.toStringUtf8(), INTEGER), e.getCause());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to %s{}",
        "error_message_variables": [
            ", json.toStringUtf8(), INTEGER)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to %s\", json.toStringUtf8(), INTEGER), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to %s{}",
        "error_message_variables": [
            ", json.toStringUtf8(), INTEGER)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to %s\", json.toStringUtf8(), INTEGER), e.getCause());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to %s{}",
        "error_message_variables": [
            ", json.toStringUtf8(), SMALLINT)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to %s\", json.toStringUtf8(), SMALLINT), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to %s{}",
        "error_message_variables": [
            ", json.toStringUtf8(), INTEGER)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to %s\", json.toStringUtf8(), INTEGER), e.getCause());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to %s{}",
        "error_message_variables": [
            ", json.toStringUtf8(), TINYINT)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to %s\", json.toStringUtf8(), TINYINT), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to %s{}",
        "error_message_variables": [
            ", json.toStringUtf8(), DOUBLE)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to %s\", json.toStringUtf8(), DOUBLE), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to %s{}",
        "error_message_variables": [
            ", json.toStringUtf8(), REAL)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to %s\", json.toStringUtf8(), REAL), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to %s{}",
        "error_message_variables": [
            ", json.toStringUtf8(), BOOLEAN)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to %s\", json.toStringUtf8(), BOOLEAN), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to %s{}",
        "error_message_variables": [
            ", value.toStringUtf8(), JSON)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to %s\", value.toStringUtf8(), JSON));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to %s{}",
        "error_message_variables": [
            ", value, JSON)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to %s\", value, JSON));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to %s{}",
        "error_message_variables": [
            ", value, JSON)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to %s\", value, JSON));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to %s{}",
        "error_message_variables": [
            ", value, JSON)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to %s\", value, JSON));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to %s{}",
        "error_message_variables": [
            ", value, JSON)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to %s\", value, JSON));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to %s{}",
        "error_message_variables": [
            ", value, JSON)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to %s\", value, JSON));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonPathTokenizer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "VerifyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new VerifyException(\"Should be handled by loop condition\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonStringArrayExtractScalar.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast to %s. %s\\n%s{}",
        "error_message_variables": [
            ", ARRAY_TYPE, e.getMessage(), truncateIfNecessaryForErrorMessage(json))"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast to %s. %s\\n%s\", ARRAY_TYPE, e.getMessage(), truncateIfNecessaryForErrorMessage(json)), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonStringArrayExtractScalar.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast to %s.\\n%s{}",
        "error_message_variables": [
            ", ARRAY_TYPE, truncateIfNecessaryForErrorMessage(json))"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast to %s.\\n%s\", ARRAY_TYPE, truncateIfNecessaryForErrorMessage(json)), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonStringArrayExtractScalar.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonCastException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonCastException(format(\"Expected a json array, but got %s\", parser.getText()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonToArrayCast.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonCastException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonCastException(format(\"Unexpected trailing token: %s\", jsonParser.getText()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonToArrayCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast to %s. %s\\n%s{}",
        "error_message_variables": [
            ", arrayType, e.getMessage(), truncateIfNecessaryForErrorMessage(json))"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast to %s. %s\\n%s\", arrayType, e.getMessage(), truncateIfNecessaryForErrorMessage(json)), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonToArrayCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast to %s.\\n%s{}",
        "error_message_variables": [
            ", arrayType, truncateIfNecessaryForErrorMessage(json))"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast to %s.\\n%s\", arrayType, truncateIfNecessaryForErrorMessage(json)), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonToMapCast.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonCastException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonCastException(format(\"Unexpected trailing token: %s\", jsonParser.getText()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonToMapCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast to %s. %s\\n%s{}",
        "error_message_variables": [
            ", mapType, e.getMessage(), truncateIfNecessaryForErrorMessage(json))"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast to %s. %s\\n%s\", mapType, e.getMessage(), truncateIfNecessaryForErrorMessage(json)), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonToMapCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast to %s.\\n%s{}",
        "error_message_variables": [
            ", mapType, truncateIfNecessaryForErrorMessage(json))"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast to %s.\\n%s\", mapType, truncateIfNecessaryForErrorMessage(json)), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonToRowCast.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonCastException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonCastException(format(\"Unexpected trailing token: %s\", jsonParser.getText()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonToRowCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast to %s. %s\\n%s{}",
        "error_message_variables": [
            ", rowType, e.getMessage(), truncateIfNecessaryForErrorMessage(json))"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast to %s. %s\\n%s\", rowType, e.getMessage(), truncateIfNecessaryForErrorMessage(json)), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/JsonToRowCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast to %s.\\n%s{}",
        "error_message_variables": [
            ", rowType, truncateIfNecessaryForErrorMessage(json))"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast to %s.\\n%s\", rowType, truncateIfNecessaryForErrorMessage(json)), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MapConcatFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "There must be two or more concatenation arguments to {}",
        "error_message_variables": [
            "FUNCTION_NAME"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"There must be two or more concatenation arguments to \" + FUNCTION_NAME);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MapConstructor.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "map key cannot be null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"map key cannot be null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MapConstructor.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "map key cannot be indeterminate: {}",
        "error_message_variables": [
            "mapType.getKeyType().getObjectValue(session, keyBlock, i)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"map key cannot be indeterminate: \" + mapType.getKeyType().getObjectValue(session, keyBlock, i));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MapFromEntriesFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "map entry cannot be null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"map entry cannot be null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MapFromEntriesFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "map key cannot be null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"map key cannot be null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MapToJsonCast.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MapToMapCast.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown java type \" + javaType);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MapToMapCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "map key is null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"map key is null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MapToMapCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "map key is null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"map key is null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MapToMapCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "map key is null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"map key is null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MapToMapCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "map key is null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"map key is null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MapToMapCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "map key is null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"map key is null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MapToMapCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "duplicate keys",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"duplicate keys\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MapToMapCast.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown java type \" + javaType + \" from type \" + type);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MathFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "degrees of freedom must be greater than or equal to 1",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"degrees of freedom must be greater than or equal to 1\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MathFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "degrees of freedom must be greater than or equal to 1",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"degrees of freedom must be greater than or equal to 1\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MathFunctions.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Out of range for tinyint: {}",
        "error_message_variables": [
            "rounded"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Out of range for tinyint: \" + rounded, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MathFunctions.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Out of range for smallint: {}",
        "error_message_variables": [
            "rounded"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Out of range for smallint: \" + rounded, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MathFunctions.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Out of range for integer: {}",
        "error_message_variables": [
            "rounded"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Out of range for integer: \" + rounded, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MathFunctions.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "numerical overflow: {}",
        "error_message_variables": [
            "num"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"numerical overflow: \" + num, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MathFunctions.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "decimal overflow: {}",
        "error_message_variables": [
            "num"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"decimal overflow: \" + num);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MathFunctions.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "decimal overflow: {}",
        "error_message_variables": [
            "num"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"decimal overflow: \" + num, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MathFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Not a valid base-%d number: %s{}",
        "error_message_variables": [
            ", radix, value.toStringUtf8())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"Not a valid base-%d number: %s\", radix, value.toStringUtf8()), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MathFunctions.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Bucket for value %s is out of range{}",
        "error_message_variables": [
            ", operand)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, format(\"Bucket for value %s is out of range\", operand));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MathFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Bin values are not sorted in ascending order",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Bin values are not sorted in ascending order\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MathFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Bin value must be finite, got {}",
        "error_message_variables": [
            "bin"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Bin value must be finite, got \" + bin);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MultimapFromEntriesFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "map entry cannot be null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"map entry cannot be null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/MultimapFromEntriesFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "map key cannot be null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"map key cannot be null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ParametricScalar.java",
        "error_code": "FUNCTION_IMPLEMENTATION_MISSING",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unsupported binding %s for signature %s{}",
        "error_message_variables": [
            ", boundSignature, getFunctionMetadata().getSignature())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_MISSING, format(\"Unsupported binding %s for signature %s\", boundSignature, getFunctionMetadata().getSignature()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/Re2JCastToRegexpFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/Re2JRegexpFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "start position cannot be smaller than 1",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"start position cannot be smaller than 1\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/Re2JRegexpFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "occurrence cannot be smaller than 1",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"occurrence cannot be smaller than 1\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/RowToJsonCast.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/RowToRowCast.java",
        "error_code": "StandardErrorCode.INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "the size of fromType and toType must match",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(StandardErrorCode.INVALID_FUNCTION_ARGUMENT, \"the size of fromType and toType must match\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/ScalarHeader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Only Classes and Methods are supported as annotated elements.\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/SplitToMapFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Key-value delimiter must appear exactly once in each entry. Bad input: '{}\"'",
        "error_message_variables": [
            "keyValuePair.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Key-value delimiter must appear exactly once in each entry. Bad input: '\" + keyValuePair.toStringUtf8() + \"'\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/SplitToMapFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Duplicate keys (%s) are not allowed{}",
        "error_message_variables": [
            ", key.toStringUtf8())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"Duplicate keys (%s) are not allowed\", key.toStringUtf8()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/SplitToMapFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Key-value delimiter must appear exactly once in each entry. Bad input: '{}\"'",
        "error_message_variables": [
            "keyValuePair.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Key-value delimiter must appear exactly once in each entry. Bad input: '\" + keyValuePair.toStringUtf8() + \"'\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/SplitToMultimapFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Key-value delimiter must appear exactly once in each entry. Bad input: {}",
        "error_message_variables": [
            "keyValuePair.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Key-value delimiter must appear exactly once in each entry. Bad input: \" + keyValuePair.toStringUtf8());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/SplitToMultimapFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Key-value delimiter must appear exactly once in each entry. Bad input: {}",
        "error_message_variables": [
            "keyValuePair.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Key-value delimiter must appear exactly once in each entry. Bad input: \" + keyValuePair.toStringUtf8());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/StringFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Not a valid Unicode code point: {}",
        "error_message_variables": [
            "codepoint"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Not a valid Unicode code point: \" + codepoint, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/StringFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "'instance' must be a positive or negative number.",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"'instance' must be a positive or negative number.\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/StringFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "'instance' must be a positive or negative number.",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"'instance' must be a positive or negative number.\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/StringFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid UTF-8 encoding",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Invalid UTF-8 encoding\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/StringFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid UTF-8 encoding in characters: {}",
        "error_message_variables": [
            "slice.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Invalid UTF-8 encoding in characters: \" + slice.toStringUtf8());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/StringFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Normalization form must be one of [NFD, NFC, NFKD, NFKC]",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Normalization form must be one of [NFD, NFC, NFKD, NFKC]\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/StringFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Replacement character string must empty or a single character",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Replacement character string must empty or a single character\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/StringFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid replacement character",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Invalid replacement character\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/StringFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid replacement character",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Invalid replacement character\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/StringFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/UrlFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/VarbinaryFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/VarbinaryFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/VarbinaryFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/VarbinaryFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/VarbinaryFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e.getCause().getMessage()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e.getCause().getMessage(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/VarbinaryFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/VarbinaryFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "invalid input length {}",
        "error_message_variables": [
            "slice.length()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"invalid input length \" + slice.length());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/VarbinaryFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e.getMessage()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e.getMessage());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/VarbinaryFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "expected 8-byte input, but got instead: {}",
        "error_message_variables": [
            "slice.length()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"expected 8-byte input, but got instead: \" + slice.length());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/VarbinaryFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "expected 4-byte input, but got instead: {}",
        "error_message_variables": [
            "slice.length()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"expected 4-byte input, but got instead: \" + slice.length());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/WordStemFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unknown stemmer language: {}",
        "error_message_variables": [
            "language.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Unknown stemmer language: \" + language.toStringUtf8());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/annotations/ParametricScalarImplementation.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"unknown argument convention: \" + argumentConvention);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/json/JsonInputFunctions.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonInputConversionException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonInputConversionException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/json/JsonInputFunctions.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/json/JsonObjectFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "null value passed for JSON object key to JSON_OBJECT function",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"null value passed for JSON object key to JSON_OBJECT function\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/json/JsonObjectFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "duplicate key passed to JSON_OBJECT function",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"duplicate key passed to JSON_OBJECT function\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/json/JsonObjectFunction.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "cannot construct a JSON object with duplicate key",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"cannot construct a JSON object with duplicate key\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/json/JsonOutputFunctions.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonOutputConversionException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonOutputConversionException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/json/JsonOutputFunctions.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"unexpected behavior\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/json/JsonOutputFunctions.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/json/JsonQueryFunction.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"unexpected array wrapper behavior\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/time/TimeFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "'{}\"' is not a valid TIME field",
        "error_message_variables": [
            "unitString"
        ],
        "severity_level": "ERROR",
        "original_text": "default -> throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"'\" + unitString + \"' is not a valid TIME field\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/time/TimeFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "'{}\"' is not a valid TIME field",
        "error_message_variables": [
            "unitString"
        ],
        "severity_level": "ERROR",
        "original_text": "default -> throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"'\" + unitString + \"' is not a valid TIME field\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/time/TimeFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "'{}\"' is not a valid TIME field",
        "error_message_variables": [
            "unitString"
        ],
        "severity_level": "ERROR",
        "original_text": "default -> throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"'\" + unitString + \"' is not a valid TIME field\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/time/TimeOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Value cannot be cast to time: {}",
        "error_message_variables": [
            "value.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to time: \" + value.toStringUtf8(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/time/TimeOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid precision: \" + precision);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamp/DateAdd.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e.getMessage()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e.getMessage());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamp/FormatDateTime.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "format_datetime for TIMESTAMP type, cannot use 'Z' nor 'z' in format, as this type does not contain TZ information",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"format_datetime for TIMESTAMP type, cannot use 'Z' nor 'z' in format, as this type does not contain TZ information\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamp/FormatDateTime.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamp/HumanReadableSeconds.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Invalid argument found: %s{}",
        "error_message_variables": [
            ", inputSeconds)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"Invalid argument found: %s\", inputSeconds));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamp/TimestampToJsonCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to %s{}",
        "error_message_variables": [
            ", formatted, JSON)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to %s\", formatted, JSON));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamp/TimestampToTimestampWithTimeZoneCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Out of range for timestamp with time zone: {}",
        "error_message_variables": [
            "epochMillis"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Out of range for timestamp with time zone: \" + epochMillis, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamp/VarcharToTimestampCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Value cannot be cast to timestamp: {}",
        "error_message_variables": [
            "value.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to timestamp: \" + value.toStringUtf8(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamp/VarcharToTimestampCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Value cannot be cast to timestamp: {}",
        "error_message_variables": [
            "value.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to timestamp: \" + value.toStringUtf8(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamp/VarcharToTimestampCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Value cannot be cast to timestamp: {}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to timestamp: \" + value);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamp/VarcharToTimestampCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Value cannot be cast to timestamp: {}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to timestamp: \" + value, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamp/VarcharToTimestampCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Value cannot be cast to timestamp: {}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to timestamp: \" + value);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamp/VarcharToTimestampCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Value cannot be cast to timestamp: {}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to timestamp: \" + value, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamp/WithTimeZone.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"'%s' is not a valid time zone{}",
        "error_message_variables": [
            ", zoneId.toStringUtf8())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"'%s' is not a valid time zone\", zoneId.toStringUtf8()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamp/WithTimeZone.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"'%s' is not a valid time zone{}",
        "error_message_variables": [
            ", zoneId.toStringUtf8())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"'%s' is not a valid time zone\", zoneId.toStringUtf8()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamptz/AtTimeZone.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"'%s' is not a valid time zone{}",
        "error_message_variables": [
            ", zoneId.toStringUtf8())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"'%s' is not a valid time zone\", zoneId.toStringUtf8()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamptz/AtTimeZone.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"'%s' is not a valid time zone{}",
        "error_message_variables": [
            ", zoneId.toStringUtf8())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"'%s' is not a valid time zone\", zoneId.toStringUtf8()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamptz/DateAdd.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e.getMessage()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e.getMessage());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamptz/DateAdd.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e.getMessage()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e.getMessage());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamptz/FormatDateTime.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamptz/ToIso8601.java",
        "error_code": "INVALID_ARGUMENTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Timezone with non-zero seconds offset cannot be rendered as ISO8601: {}",
        "error_message_variables": [
            "offset.getId()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_ARGUMENTS, \"Timezone with non-zero seconds offset cannot be rendered as ISO8601: \" + offset.getId());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamptz/VarcharToTimestampWithTimeZoneCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Value cannot be cast to timestamp: {}",
        "error_message_variables": [
            "value.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to timestamp: \" + value.toStringUtf8(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamptz/VarcharToTimestampWithTimeZoneCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Value cannot be cast to timestamp: {}",
        "error_message_variables": [
            "value.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to timestamp: \" + value.toStringUtf8(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamptz/VarcharToTimestampWithTimeZoneCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Value cannot be cast to timestamp: {}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to timestamp: \" + value);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamptz/VarcharToTimestampWithTimeZoneCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Value cannot be cast to timestamp: {}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to timestamp: \" + value, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamptz/VarcharToTimestampWithTimeZoneCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Value cannot be cast to timestamp: {}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to timestamp: \" + value);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timestamptz/VarcharToTimestampWithTimeZoneCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Value cannot be cast to timestamp: {}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to timestamp: \" + value, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timetz/AtTimeZone.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"'%s' is not a valid time zone{}",
        "error_message_variables": [
            ", zoneId)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"'%s' is not a valid time zone\", zoneId));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timetz/AtTimeZone.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"'%s' is not a valid time zone{}",
        "error_message_variables": [
            ", zoneId)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"'%s' is not a valid time zone\", zoneId));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timetz/DateAdd.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "'{}\"' is not a valid TIME field",
        "error_message_variables": [
            "unitString"
        ],
        "severity_level": "ERROR",
        "original_text": "default -> throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"'\" + unitString + \"' is not a valid TIME field\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timetz/DateDiff.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "'{}\"' is not a valid TIME field",
        "error_message_variables": [
            "unitString"
        ],
        "severity_level": "ERROR",
        "original_text": "default -> throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"'\" + unitString + \"' is not a valid TIME field\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timetz/DateDiff.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "'{}\"' is not a valid TIME field",
        "error_message_variables": [
            "unitString"
        ],
        "severity_level": "ERROR",
        "original_text": "default -> throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"'\" + unitString + \"' is not a valid TIME field\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timetz/DateTrunc.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "'{}\"' is not a valid TIME field",
        "error_message_variables": [
            "unitString"
        ],
        "severity_level": "ERROR",
        "original_text": "default -> throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"'\" + unitString + \"' is not a valid TIME field\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timetz/VarcharToTimeWithTimeZoneCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Value cannot be cast to time with time zone: {}",
        "error_message_variables": [
            "value.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to time with time zone: \" + value.toStringUtf8());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timetz/VarcharToTimeWithTimeZoneCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Value cannot be cast to time with time zone: {}",
        "error_message_variables": [
            "value.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to time with time zone: \" + value.toStringUtf8(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timetz/VarcharToTimeWithTimeZoneCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Value cannot be cast to time with time zone: {}",
        "error_message_variables": [
            "value.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to time with time zone: \" + value.toStringUtf8());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timetz/VarcharToTimeWithTimeZoneCast.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Value cannot be cast to time with time zone: {}",
        "error_message_variables": [
            "value.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to time with time zone: \" + value.toStringUtf8(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timetz/VarcharToTimeWithTimeZoneCast.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid time\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timetz/VarcharToTimeWithTimeZoneCast.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid time\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/scalar/timetz/VarcharToTimeWithTimeZoneCast.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid time\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/table/ExcludeColumnsFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "COLUMNS descriptor is null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"COLUMNS descriptor is null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/table/ExcludeColumnsFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "COLUMNS descriptor contains types",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"COLUMNS descriptor contains types\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/table/ExcludeColumnsFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Excluded columns: %s not present in the table{}",
        "error_message_variables": [
            ", missingColumns)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"Excluded columns: %s not present in the table\", missingColumns));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/table/ExcludeColumnsFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "All columns are excluded",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"All columns are excluded\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/table/SequenceFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Start is null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Start is null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/table/SequenceFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Stop is null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Stop is null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/table/SequenceFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Step is null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Step is null\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/table/SequenceFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Step must be positive for sequence [%s, %s]{}",
        "error_message_variables": [
            ", start, stop)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"Step must be positive for sequence [%s, %s]\", start, stop));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/table/SequenceFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Step must be negative for sequence [%s, %s]{}",
        "error_message_variables": [
            ", start, stop)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"Step must be negative for sequence [%s, %s]\", start, stop));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/table/json/execution/ExecutionPlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/table/json/execution/ExecutionPlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/table/json/execution/JsonTableProcessingFragment.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"not the root fragment\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/table/json/execution/QueryColumn.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/table/json/execution/ValueColumn.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/unnest/UnnestOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Cannot unnest type: \" + nestedType);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/window/GroupsFraming.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported frame start type: \" + startType);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/window/GroupsFraming.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported frame end type: \" + endType);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/window/PatternRecognitionPartition.java",
        "error_code": "StandardErrorCode.GENERIC_USER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "AFTER MATCH SKIP failed: pattern variable is not present in match",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(StandardErrorCode.GENERIC_USER_ERROR, \"AFTER MATCH SKIP failed: pattern variable is not present in match\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/window/PatternRecognitionPartition.java",
        "error_code": "StandardErrorCode.GENERIC_USER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "AFTER MATCH SKIP failed: cannot skip to first row of match",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(StandardErrorCode.GENERIC_USER_ERROR, \"AFTER MATCH SKIP failed: cannot skip to first row of match\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/window/PatternRecognitionPartition.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"unexpected SKIP TO position: \" + skipToPosition);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/window/ReflectionWindowFunctionSupplier.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/window/RegularWindowPartition.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/window/matcher/IrRowPatternToProgramRewriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"unsupported node type: \" + node.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/window/matcher/Matcher.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/operator/window/pattern/MatchAggregation.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"aggregate function %s does not support copying{}",
        "error_message_variables": [
            ", boundSignature.getName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, format(\"aggregate function %s does not support copying\", boundSignature.getName()), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/security/AccessControlManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Access control '%s' is already registered\", accessControlFactory.getName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/security/AccessControlManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"connectorAccessControlProvider already set\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/security/AccessControlManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/security/AccessControlManager.java",
        "error_code": "Failed to read configuration file: \" + configFile",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Failed to read configuration file: \" + configFile, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/security/AccessControlManager.java",
        "error_code": "INVALID_COLUMN_MASK",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Multiple masks for the same column found",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_COLUMN_MASK, \"Multiple masks for the same column found\", exception);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/security/AccessControlManager.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Catalog %s does not support catalog roles{}",
        "error_message_variables": [
            ", catalogName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, format(\"Catalog %s does not support catalog roles\", catalogName));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/security/AccessControlManager.java",
        "error_code": "SERVER_STARTING_UP",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Trino server is still initializing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(SERVER_STARTING_UP, \"Trino server is still initializing\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/security/GroupProviderManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Group provider '%s' is already registered\", groupProviderFactory.getName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/security/InjectedConnectorAccessControl.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Row filtering not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Row filtering not supported\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/security/InjectedConnectorAccessControl.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Column masking not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Column masking not supported\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/security/InjectedConnectorAccessControl.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Column masking not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Column masking not supported\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/security/ViewAccessControl.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/security/ViewAccessControl.java",
        "error_code": "View owner does not have sufficient privileges: \" + msg",
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(\"View owner does not have sufficient privileges: \" + msg, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/DynamicFilterService.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"getDynamicFiltersProducedInPlanNode called with neither JoinNode nor SemiJoinNode\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/GracefulShutdownHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Cannot shutdown coordinator\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/HttpRequestSessionContextFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "BadRequestException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new BadRequestException(e.getMessage());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/HttpRequestSessionContextFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "BadRequestException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new BadRequestException(format(\"Invalid %s header\", protocolHeaders.requestSession()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/HttpRequestSessionContextFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "BadRequestException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new BadRequestException(e.getMessage());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/HttpRequestSessionContextFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "BadRequestException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new BadRequestException(format(\"Invalid %s header\", protocolHeaders.requestRole()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/HttpRequestSessionContextFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "BadRequestException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new BadRequestException(format(\"Invalid %s header: %s\", headerName, e));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/HttpRequestSessionContextFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "BadRequestException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new BadRequestException(format(\"Unsupported resource name %s\", name));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/HttpRequestSessionContextFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "BadRequestException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new BadRequestException(format(\"Unsupported format for resource estimate '%s': %s\", value, e));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/HttpRequestSessionContextFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "BadRequestException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new BadRequestException(format(format, args));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/HttpRequestSessionContextFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "BadRequestException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new BadRequestException(format(\"Invalid %s header: %s\", protocolHeaders.requestPreparedStatement(), e.getMessage()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/HttpRequestSessionContextFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "BadRequestException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new BadRequestException(format(\"Invalid %s header: %s\", protocolHeaders.requestPreparedStatement(), e.getMessage()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/HttpRequestSessionContextFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "BadRequestException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new BadRequestException(e.getMessage());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/InternalAuthenticationManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Shared secret (internal-communication.shared-secret) is required when internal communications uses HTTPS\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/InternalAuthenticationManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Shared secret (internal-communication.shared-secret) is required when authentication is enabled\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/InternalAuthenticationManager.java",
        "error_code": "Authentication error",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Authentication error\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/InternalCommunicationModule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/InternalCommunicationModule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/NoOpSessionSupplier.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/PagesResponseWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/QueryResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "GoneException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new GoneException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/QueryResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ForbiddenException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ForbiddenException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/QueryResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ForbiddenException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ForbiddenException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/QueryResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ForbiddenException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ForbiddenException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/QueryResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "GoneException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new GoneException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/QueryStateInfoResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ForbiddenException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ForbiddenException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/QueryStateInfoResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotFoundException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/ResourceGroupStateInfoResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotFoundException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/ServerInfoResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "BadRequestException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case ACTIVE, INACTIVE -> throw new BadRequestException(format(\"Invalid state transition to %s\", state));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/ServerInfoResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotFoundException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/ServerPluginsProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/ServerPluginsProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/SessionPropertyDefaults.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Session property configuration manager '%s' is already registered\", sessionConfigFactory.getName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/TaskResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"unexpected failure type: \" + failure.getInjectedFailureType());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/WorkerModule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/ExecutingStatementResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotFoundException(\"Query not found\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/ExecutingStatementResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotFoundException(\"Query not found\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/ExecutingStatementResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotFoundException(\"Query not found\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/ExecutingStatementResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotFoundException(\"Query not found\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/ExecutingStatementResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotFoundException(\"Query not found\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/ExecutingStatementResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotFoundException(\"Query not found\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/OutputColumn.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"sourcePageChannel is negative\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/ProtocolUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported parameter type: \" + parameter.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/ProtocolUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported kind: \" + parameter.getKind());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/Query.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "GoneException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new GoneException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/Query.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotFoundException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/Query.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotFoundException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/QueryInfoUrlFactory.java",
        "error_code": "Invalid query info URL template: \" + template",
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid query info URL template: \" + template, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/spooling/QueryDataEncoders.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown encoding: \" + encoding);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/spooling/QueryDataJacksonModule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported QueryData implementation: \" + value.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/spooling/QueryDataJacksonModule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/spooling/SpoolingManagerBridge.java",
        "error_code": "CONFIGURATION_INVALID",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Direct storage access is enabled but not supported by {}",
        "error_message_variables": [
            "delegate().getClass().getSimpleName()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(CONFIGURATION_INVALID, \"Direct storage access is enabled but not supported by \" + delegate().getClass().getSimpleName(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/spooling/SpoolingManagerBridge.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case DirectLocation _ -> throw new IllegalArgumentException(\"Cannot convert direct location to handle\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/spooling/SpoolingManagerBridge.java",
        "error_code": "Could not encode segment identifier to URI",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Could not encode segment identifier to URI\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/spooling/SpoolingManagerBridge.java",
        "error_code": "Could not decode segment identifier from URI",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Could not decode segment identifier from URI\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/spooling/SpoolingManagerRegistry.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Spooling manager factory '%s' is already registered\", factory.getName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/spooling/SpoolingManagerRegistry.java",
        "error_code": "Failed to read spooling manager configuration file: \" + CONFIG_FILE",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Failed to read spooling manager configuration file: \" + CONFIG_FILE, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/protocol/spooling/encoding/JsonQueryDataEncoder.java",
        "error_code": "Could not serialize to JSON",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Could not serialize to JSON\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/remotetask/RequestErrorTracker.java",
        "error_code": "REMOTE_TASK_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "reason"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(REMOTE_TASK_ERROR, reason);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/AbstractBearerAuthenticator.java",
        "error_code": "Authentication error",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Authentication error\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/AbstractBearerAuthenticator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Multiple %s headers detected: %s, where only single %s header is supported\", AUTHORIZATION, headers, AUTHORIZATION));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/AuthenticationFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ForbiddenException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ForbiddenException(\"Authentication over HTTP is not enabled\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/BasicAuthCredentials.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AuthenticationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AuthenticationException(\"Malformed credentials: user is empty\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/BasicAuthCredentials.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AuthenticationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AuthenticationException(\"Invalid base64 encoded credentials\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/CertificateAuthenticator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AuthenticationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AuthenticationException(null);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/CertificateAuthenticator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AuthenticationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AuthenticationException(null);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/CertificateAuthenticator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AuthenticationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AuthenticationException(e.getMessage());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/CertificateAuthenticator.java",
        "error_code": "Authentication error",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Authentication error\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/HeaderAuthenticator.java",
        "error_code": "Authentication error",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Authentication error\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/HeaderAuthenticatorManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/InsecureAuthenticator.java",
        "error_code": "Password not allowed for insecure authentication",
        "error_code_name": null,
        "error_class_name": "AuthenticationException",
        "error_message_template": "{}",
        "error_message_variables": [
            "BasicAuthCredentials.AUTHENTICATE_HEADER"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new AuthenticationException(\"Password not allowed for insecure authentication\", BasicAuthCredentials.AUTHENTICATE_HEADER);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/InsecureAuthenticator.java",
        "error_code": "Basic authentication or \" + TRINO_HEADERS.requestOriginalUser() + \" or \" + TRINO_HEADERS.requestUser() + \" must be sent",
        "error_code_name": null,
        "error_class_name": "AuthenticationException",
        "error_message_template": "{}",
        "error_message_variables": [
            "BasicAuthCredentials.AUTHENTICATE_HEADER"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new AuthenticationException(\"Basic authentication or \" + TRINO_HEADERS.requestOriginalUser() + \" or \" + TRINO_HEADERS.requestUser() + \" must be sent\", BasicAuthCredentials.AUTHENTICATE_HEADER);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/InsecureAuthenticator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AuthenticationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AuthenticationException(e.getMessage());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/KerberosAuthenticator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/KerberosAuthenticator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/KerberosAuthenticator.java",
        "error_code": "Invalid Token",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Invalid Token\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/KerberosAuthenticator.java",
        "error_code": "Invalid Token",
        "error_code_name": null,
        "error_class_name": "AuthenticationException",
        "error_message_template": "{}",
        "error_message_variables": [
            "NEGOTIATE_SCHEME"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new AuthenticationException(\"Invalid Token\", NEGOTIATE_SCHEME);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/KerberosAuthenticator.java",
        "error_code": "null",
        "error_code_name": null,
        "error_class_name": "AuthenticationException",
        "error_message_template": "{}",
        "error_message_variables": [
            "NEGOTIATE_SCHEME"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new AuthenticationException(null, NEGOTIATE_SCHEME);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/KerberosAuthenticator.java",
        "error_code": "e.getMessage()",
        "error_code_name": null,
        "error_class_name": "AuthenticationException",
        "error_message_template": "{}",
        "error_message_variables": [
            "NEGOTIATE_SCHEME"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new AuthenticationException(e.getMessage(), NEGOTIATE_SCHEME);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/KerberosAuthenticator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/KerberosAuthenticator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/KerberosNameType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/KerberosNameType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/PasswordAuthenticator.java",
        "error_code": "Authentication error",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Authentication error\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/PasswordAuthenticatorManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/PasswordAuthenticatorManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"authenticators already loaded\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/ResourceAccessType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Trino resource is not annotated with @\" + ResourceSecurity.class.getSimpleName() + \": \" + resourceInfo.getResourceMethod());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/ResourceSecurityDynamicFeature.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown mode: \" + accessType);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/ResourceSecurityDynamicFeature.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ForbiddenException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ForbiddenException(\"Management only resource\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/ResourceSecurityDynamicFeature.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ServiceUnavailableException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ServiceUnavailableException(e.getMessage());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/ResourceSecurityDynamicFeature.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ForbiddenException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ForbiddenException(\"Internal only resource\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/ServerSecurityModule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Unknown authenticator type: \" + type);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/UserMapping.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UserMappingException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UserMappingException(\"No user mapping patterns match the principal\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/UserMapping.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UserMappingException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UserMappingException(\"Principal is not allowed\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/UserMapping.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UserMappingException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UserMappingException(\"Principal matched, but mapped user is empty\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/jwt/FileSigningKeyLocator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedJwtException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedJwtException(\"Cannot locate key for header: %s\".formatted(header.getType()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/jwt/FileSigningKeyLocator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SecurityException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SecurityException(\"Unknown signing key ID\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/jwt/FileSigningKeyLocator.java",
        "error_code": "Unable to read signing key",
        "error_code_name": null,
        "error_class_name": "SecurityException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new SecurityException(\"Unable to read signing key\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/jwt/FileSigningKeyLocator.java",
        "error_code": "Unable to decode PEM signing key id",
        "error_code_name": null,
        "error_class_name": "SecurityException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new SecurityException(\"Unable to decode PEM signing key id\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/jwt/FileSigningKeyLocator.java",
        "error_code": "Unable to decode HMAC signing key",
        "error_code_name": null,
        "error_class_name": "SecurityException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new SecurityException(\"Unable to decode HMAC signing key\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/jwt/FileSigningKeyLocator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedJwtException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedJwtException(format(\"JWT is signed with %s, but no HMAC key is configured\", algorithm));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/jwt/FileSigningKeyLocator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedJwtException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedJwtException(format(\"JWT is signed with %s, but no key is configured\", algorithm));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/jwt/JwkDecoder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/jwt/JwkDecoder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/jwt/JwkService.java",
        "error_code": "Error stopping JWK service",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Error stopping JWK service\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/jwt/JwkService.java",
        "error_code": "Error reading JWK keys from \" + address",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Error reading JWK keys from \" + address, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/jwt/JwkService.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Unexpected response code \" + response.getStatusCode() + \" from JWK service at \" + address);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/jwt/JwkService.java",
        "error_code": "Unable to decode JWK response from \" + address",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Unable to decode JWK response from \" + address, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/jwt/JwkSigningKeyLocator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedJwtException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedJwtException(\"Cannot locate key for header: %s\".formatted(header.getType()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/jwt/JwkSigningKeyLocator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SecurityException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SecurityException(\"Key ID is required\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/jwt/JwtAuthenticator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InvalidClaimException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidClaimException(format(\"Expected %s claim to be: %s, but was not present in the JWT claims.\", AUDIENCE, requiredAudience.get()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/jwt/JwtAuthenticator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InvalidClaimException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidClaimException(format(\"Invalid Audience: %s. Allowed audiences: %s\", tokenAudience, requiredAudience.get()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/jwt/JwtAuthenticator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InvalidClaimException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidClaimException(format(\"Invalid Audience: %s. Allowed audiences: %s\", tokenAudience, requiredAudience.get()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/jwt/JwtAuthenticator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InvalidClaimException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidClaimException(format(\"Invalid Audience: %s\", tokenAudience));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/oauth2/JweTokenSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"%s field is missing\", principalField));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/oauth2/JweTokenSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/oauth2/JweTokenSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/oauth2/JweTokenSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Secret key size must be either 16, 24 or 32 bytes but was %d\".formatted(keyLength));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/oauth2/JweTokenSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/oauth2/JweTokenSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/oauth2/NimbusAirliftHttpClient.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/oauth2/NimbusAirliftHttpClient.java",
        "error_code": "format(\"Unable to parse response status=[%d], body=[%s]\", stringResponse.getStatusCode(), stringResponse.getBody())",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(format(\"Unable to parse response status=[%d], body=[%s]\", stringResponse.getStatusCode(), stringResponse.getBody()), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/oauth2/NimbusOAuth2Client.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/oauth2/NimbusOAuth2Client.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ChallengeFailedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ChallengeFailedException(\"Missing nonce\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/oauth2/NimbusOAuth2Client.java",
        "error_code": "Cannot validate tokens",
        "error_code_name": null,
        "error_class_name": "ChallengeFailedException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ChallengeFailedException(\"Cannot validate tokens\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/oauth2/NimbusOAuth2Client.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ChallengeFailedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ChallengeFailedException(\"Error while fetching access token: \" + tokenResponse.toErrorResponse().toHTTPResponse().getBody());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/oauth2/NimbusOAuth2Client.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ChallengeFailedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ChallengeFailedException(\"no valid expiration date\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/oauth2/OAuth2Service.java",
        "error_code": "State validation failed",
        "error_code_name": null,
        "error_class_name": "ChallengeFailedException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ChallengeFailedException(\"State validation failed\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/oauth2/OAuth2TokenExchangeResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "BadRequestException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new BadRequestException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/oauth2/OAuth2TokenExchangeResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "VerifyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new VerifyException(\"invalid TokenPoll state\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/oauth2/OAuth2TokenExchangeResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "BadRequestException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new BadRequestException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/oauth2/OidcDiscovery.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Invalid response from OpenID Metadata endpoint: \" + statusCode);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/oauth2/OidcDiscovery.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Invalid response from OpenID Metadata endpoint. Expected response code to be %s, but was %s\", OK.code(), statusCode));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/oauth2/OidcDiscovery.java",
        "error_code": "Invalid JSON value",
        "error_code_name": null,
        "error_class_name": "ParseException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ParseException(\"Invalid JSON value\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/security/oauth2/ZstdCodec.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/testing/TestingTrinoServer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/ui/FormWebUiAuthenticationFilter.java",
        "error_code": "Authentication error",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Authentication error\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/ui/NoWebUiAuthenticationFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotFoundException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/ui/UiQueryResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ForbiddenException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ForbiddenException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/ui/UiQueryResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "GoneException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new GoneException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/ui/UiQueryResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ForbiddenException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ForbiddenException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/ui/UiQueryResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "GoneException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new GoneException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/ui/WebUiStaticResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotFoundException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/ui/WorkerResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ForbiddenException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ForbiddenException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/ui/WorkerResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "GoneException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new GoneException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/ui/WorkerResource.java",
        "error_code": "Request to worker failed",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "exception"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Request to worker failed\", exception);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/ui/WorkerResource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Response received was not of type \" + APPLICATION_JSON);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/server/ui/WorkerResource.java",
        "error_code": "Unable to read response from worker",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Unable to read response from worker\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/spiller/FileHolder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/spiller/FileSingleStreamSpiller.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to create spill file",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Failed to create spill file\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/spiller/FileSingleStreamSpiller.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to spill pages",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Failed to spill pages\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/spiller/FileSingleStreamSpiller.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to read spilled pages",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Failed to read spilled pages\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/spiller/FileSingleStreamSpiller.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to close spiller",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Failed to close spiller\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/spiller/FileSingleStreamSpiller.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/spiller/FileSingleStreamSpillerFactory.java",
        "error_code": "format(\"could not create spill path %s; adjust %s config property or filesystem permissions\", path, SPILLER_SPILL_PATH)",
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"could not create spill path %s; adjust %s config property or filesystem permissions\", path, SPILLER_SPILL_PATH), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/spiller/FileSingleStreamSpillerFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"spill path %s is not accessible, it must be +rwx; adjust %s config property or filesystem permissions\", path, SPILLER_SPILL_PATH));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/spiller/FileSingleStreamSpillerFactory.java",
        "error_code": "OUT_OF_SPILL_SPACE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "No spill paths configured",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(OUT_OF_SPILL_SPACE, \"No spill paths configured\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/spiller/FileSingleStreamSpillerFactory.java",
        "error_code": "OUT_OF_SPILL_SPACE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "No free or healthy space available for spill",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(OUT_OF_SPILL_SPACE, \"No free or healthy space available for spill\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/spiller/FileSingleStreamSpillerFactory.java",
        "error_code": "OUT_OF_SPILL_SPACE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot determine free space for spill",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(OUT_OF_SPILL_SPACE, \"Cannot determine free space for spill\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/spiller/GenericSpiller.java",
        "error_code": "could not close some single stream spillers",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"could not close some single stream spillers\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/spiller/PartitioningSpillerFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/spiller/SingleStreamSpillerFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/split/SampledSplitSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Cannot use SampledSplitSource with SplitSource which returns non-empty TableExecuteSplitsInfo=\" + splitInfo);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/DynamicFilters.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported dynamic filtering comparison operator: \" + operator);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/DynamicFilters.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/DynamicFilters.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/DynamicFilters.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/DynamicFilters.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/DynamicFilters.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/DynamicFilters.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/DynamicFilters.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/DynamicFilters.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/InterpretedFunctionInvoker.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/AggregationAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"aggregation analysis not yet implemented for: \" + node.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/ExpressionAnalyzer.java",
        "error_code": "e::getErrorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(node)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(e::getErrorCode, extractLocation(node), e.getMessage(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/ExpressionAnalyzer.java",
        "error_code": "e::getErrorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(node)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(e::getErrorCode, extractLocation(node), e.getMessage(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/ExpressionAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalStateException(\"unexpected pattern recognition function \" + name);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/ExpressionAnalyzer.java",
        "error_code": "e::getErrorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(node)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(e::getErrorCode, extractLocation(node), e.getMessage(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/ExpressionAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NullPointerException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NullPointerException(format(\"Type '%s' not found\", signature.getArgumentTypes().get(i)));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/ExpressionAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalStateException(\"Unexpected navigation anchor: \" + name);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/ExpressionAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unknown field: \" + field);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/ExpressionAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected value list type for InPredicate: \" + node.getValueList().getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/ExpressionAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Unexpected comparison type: %s\", node.getOperator()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/ExpressionAnalyzer.java",
        "error_code": "e::getErrorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(node)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(e::getErrorCode, extractLocation(node), e.getMessage(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/ExpressionAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"error default specified without error behavior specified\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/ExpressionAnalyzer.java",
        "error_code": "e::getErrorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(node)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(e::getErrorCode, extractLocation(node), e.getMessage(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/ExpressionAnalyzer.java",
        "error_code": "e::getErrorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(node)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(e::getErrorCode, extractLocation(node), e.getMessage(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/ExpressionAnalyzer.java",
        "error_code": "TYPE_MISMATCH",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(node)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(TYPE_MISMATCH, extractLocation(node), format(\"Cannot read input of type %s as JSON using formatting %s\", type, format), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/ExpressionAnalyzer.java",
        "error_code": "TYPE_MISMATCH",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(node)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(TYPE_MISMATCH, extractLocation(node), format(\"Cannot output JSON value as %s using formatting %s\", type, format), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/ExpressionAnalyzer.java",
        "error_code": "e::getErrorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(node)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(e::getErrorCode, extractLocation(node), e.getMessage(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/ExpressionAnalyzer.java",
        "error_code": "e::getErrorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(node)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(e::getErrorCode, extractLocation(node), e.getMessage(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/ExpressionAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Cannot access preanalyzed types\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/ExpressionAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Cannot access resolved windows\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/JsonPathAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not supported JSON path node: \" + node.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/LiteralInterpreter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unhandled literal type: \" + node);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/QueryExplainer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unhandled plan type: \" + planType);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/QueryExplainer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unhandled plan type: \" + planType);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/QueryExplainer.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unsupported explain plan type %s for JSON format{}",
        "error_message_variables": [
            ", planType)"
        ],
        "severity_level": "ERROR",
        "original_text": "default -> throw new TrinoException(NOT_SUPPORTED, format(\"Unsupported explain plan type %s for JSON format\", planType));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/SemanticExceptions.java",
        "error_code": "code",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(node)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(code, extractLocation(node), format(format, args), cause);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unsupported node type: \" + node.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "INSERT must write all distribution columns: {}",
        "error_message_variables": [
            "layout.getPartitionColumns()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"INSERT must write all distribution columns: \" + layout.getPartitionColumns());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": "format(\"Cannot ANALYZE (missing insert privilege) table %s\", tableName)",
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "{}",
        "error_message_variables": [
            "exception"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot ANALYZE (missing insert privilege) table %s\", tableName), exception);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "INSERT must write all distribution columns: {}",
        "error_message_variables": [
            "layout.getPartitionColumns()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"INSERT must write all distribution columns: \" + layout.getPartitionColumns());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot unnest type: {}",
        "error_message_variables": [
            "expressionType"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Cannot unnest type: \" + expressionType);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": "FUNCTION_IMPLEMENTATION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "A table function with ONLY_PASS_THROUGH return type must have a table argument with pass-through columns.",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_ERROR, \"A table function with ONLY_PASS_THROUGH return type must have a table argument with pass-through columns.\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": "FUNCTION_IMPLEMENTATION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Table function %s specifies required columns from table argument %s which cannot be found{}",
        "error_message_variables": [
            ", node.getName(), name)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_ERROR, format(\"Table function %s specifies required columns from table argument %s which cannot be found\", node.getName(), name));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": "FUNCTION_IMPLEMENTATION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Table function %s specifies empty list of required columns from table argument %s{}",
        "error_message_variables": [
            ", node.getName(), name)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_ERROR, format(\"Table function %s specifies empty list of required columns from table argument %s\", node.getName(), name));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": "FUNCTION_IMPLEMENTATION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Invalid index: %s of required column from table argument %s{}",
        "error_message_variables": [
            ", column, name)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_ERROR, format(\"Invalid index: %s of required column from table argument %s\", column, name));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": "FUNCTION_IMPLEMENTATION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Table function %s does not specify required input columns from table argument %s{}",
        "error_message_variables": [
            ", node.getName(), input)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_ERROR, format(\"Table function %s does not specify required input columns from table argument %s\", node.getName(), input));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Duplicate argument specification for name: \" + argumentSpecification.getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected argument specification: \" + argumentSpecification.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalStateException(\"Unexpected partitionBy expression: \" + expression);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalStateException(\"Unexpected orderBy expression: \" + expression);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected argument specification: \" + argumentSpecification.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"relation name should be unqualified or fully qualified\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Redirection of materialized view storage table '%s' to '%s' is not supported{}",
        "error_message_variables": [
            ", source, name)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, format(\"Redirection of materialized view storage table '%s' to '%s' is not supported\", source, name));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported join criteria: \" + criteria.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"unexpected type of JSON_TABLE column: \" + column.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"unexpected JSON_TABLE plan node: \" + plan.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ArithmeticException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ArithmeticException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported grouping element type: \" + element.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported SelectItem type: \" + item.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported SelectItem type: \" + item.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": "INVALID_ROW_FILTER",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(table)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_ROW_FILTER, extractLocation(table), format(\"Row filter for '%s' is recursive\", name), null);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": "INVALID_ROW_FILTER",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(table)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_ROW_FILTER, extractLocation(table), format(\"Invalid row filter for '%s': %s\", name, e.getErrorMessage()), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": "e::getErrorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(table)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(e::getErrorCode, extractLocation(table), format(\"Invalid row filter for '%s': %s\", name, e.getRawMessage()), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": "TYPE_MISMATCH",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(table)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(TYPE_MISMATCH, extractLocation(table), format(\"Expected row filter for '%s' to be of type BOOLEAN, but was %s\", name, actualType), null);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": "INVALID_CHECK_CONSTRAINT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(table)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CHECK_CONSTRAINT, extractLocation(table), format(\"Invalid check constraint for '%s': %s\", name, e.getErrorMessage()), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": "e::getErrorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(table)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(e::getErrorCode, extractLocation(table), format(\"Invalid check constraint for '%s': %s\", name, e.getRawMessage()), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": "TYPE_MISMATCH",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(table)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(TYPE_MISMATCH, extractLocation(table), format(\"Expected check constraint for '%s' to be of type BOOLEAN, but was %s\", name, actualType), null);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": "INVALID_ROW_FILTER",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(table)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_ROW_FILTER, extractLocation(table), format(\"Column mask for '%s.%s' is recursive\", tableName, column), null);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": "INVALID_ROW_FILTER",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(table)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_ROW_FILTER, extractLocation(table), format(\"Invalid column mask for '%s.%s': %s\", tableName, column, e.getErrorMessage()), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": "e::getErrorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(table)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(e::getErrorCode, extractLocation(table), format(\"Invalid column mask for '%s.%s': %s\", tableName, column, e.getRawMessage()), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/StatementAnalyzer.java",
        "error_code": "TYPE_MISMATCH",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "extractLocation(table)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(TYPE_MISMATCH, extractLocation(table), format(\"Expected column mask for '%s.%s' to be of type %s, but was %s\", tableName, column, columnSchema.getType(), actualType), null);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/TypeSignatureTranslator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException(\"Unsupported type parameter kind: \" + parameter.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/TypeSignatureTranslator.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"INTERVAL %s TO %s type not supported{}",
        "error_message_variables": [
            ", type.getFrom(), type.getTo())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, format(\"INTERVAL %s TO %s type not supported\", type.getFrom(), type.getTo()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/TypeSignatureTranslator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Parameter to datetime type must be either a number or a type variable\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/analyzer/TypeSignatureTranslator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException(\"Unsupported parameter kind\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/BytecodeUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented: \" + unboxedType);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/BytecodeUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Simple method invocation can not be used with functions that require an instance factory\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/BytecodeUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"Unsupported argument convention type: %s\", invocationConvention.getArgumentConvention(realParameterIndex)));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/BytecodeUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented: \" + type);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/CursorProcessorCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/CursorProcessorCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/CursorProcessorCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/CursorProcessorCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/CursorProcessorCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/ExpressionCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/InCodeGenerator.java",
        "error_code": "Error processing IN statement: error calculating hash code for \" + object",
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "{}",
        "error_message_variables": [
            "throwable"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Error processing IN statement: error calculating hash code for \" + object, throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/InCodeGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Not supported switch generation case: \" + switchGenerationCase);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/InCodeGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Not supported switch generation case: \" + switchGenerationCase);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/InCodeGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(t);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/InputReferenceCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/InputReferenceCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/InputReferenceCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/InputReferenceCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/InputReferenceCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/IsolatedClass.java",
        "error_code": "format(\"Could not obtain byte code for class %s\", clazz.getName())",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(format(\"Could not obtain byte code for class %s\", clazz.getName()), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/JoinCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/JoinCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/JoinCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/JoinCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/JoinFilterFunctionCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/JoinFilterFunctionCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/LambdaBytecodeGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "VerifyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new VerifyException(\"lambda should be generated as class annotated with FunctionalInterface\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/LambdaBytecodeGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/LambdaBytecodeGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/LambdaBytecodeGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/LambdaBytecodeGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/LambdaBytecodeGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/LambdaCapture.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/LambdaCapture.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/LambdaMetafactoryGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(interfaceType.getSimpleName() + \"  does not have a single abstract method\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/PageFunctionCompiler.java",
        "error_code": "COMPILER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(COMPILER_ERROR, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/PageFunctionCompiler.java",
        "error_code": "COMPILER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "filter.toString()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(COMPILER_ERROR, filter.toString(), e.getCause());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/PageFunctionCompiler.java",
        "error_code": "COMPILER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(COMPILER_ERROR, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/RowConstructorCodeGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Not a row type: \" + rowType);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/RowConstructorCodeGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"builder must only contain a single position, found: %s positions\", fieldBlocks[i].getPositionCount()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/RowExpressionCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalStateException(\"Cannot compile special form: \" + specialForm.form());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/RowExpressionCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "VerifyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new VerifyException(\"lambda should be generated as class annotated with FunctionalInterface\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/columnar/CallColumnarFilterGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Call expression with unsupported argument: \" + rowExpression);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/columnar/CallColumnarFilterGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Call expressions with null constant are not supported\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/columnar/CallColumnarFilterGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Functions with lambda arguments are not supported\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/columnar/CallColumnarFilterGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Simple method invocation can not be used with functions that require an instance factory\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/columnar/CallColumnarFilterGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"CallExpression %s is not supported\", callExpression));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/columnar/CallColumnarFilterGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"CallExpression %s is not supported\", callExpression));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/columnar/ColumnarFilterCompiler.java",
        "error_code": "COMPILER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e.getCause()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(COMPILER_ERROR, e.getCause());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/columnar/ColumnarFilterCompiler.java",
        "error_code": "COMPILER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(COMPILER_ERROR, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/columnar/InColumnarFilterGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"IN clause columnar evaluation is supported only on input references\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/columnar/InColumnarFilterGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"IN clause columnar evaluation is supported only on input reference against constants\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/columnar/InColumnarFilterGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(t);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/columnar/InColumnarFilterGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Structural type not supported\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/columnar/InColumnarFilterGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"IN clause columnar evaluation is supported only on input reference against constants\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/columnar/IsNotNullColumnarFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"NOT(IS_NULL) columnar evaluation is supported only for InputReferenceExpression\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/gen/columnar/IsNullColumnarFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"IS_NULL columnar evaluation is supported only for InputReferenceExpression\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/ir/Comparison.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported comparison: \" + this);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/ir/Constant.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Improper Java type (%s) for type '%s'\".formatted(value.getClass().getName(), type));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/ir/ExpressionFormatter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented: %s.visit%s\".formatted(getClass().getName(), node.getClass().getSimpleName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/ir/ExpressionTreeRewriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"visit() not implemented for \" + node.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/ir/FieldReference.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Expected 'row' type but found '%s' for expression: %s\".formatted(base.type(), base));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/ir/optimizer/rule/EvaluateComparison.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalStateException(\"Unexpected value for boolean expression\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/ConnectorExpressionTranslator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected type %s for argument %s of type %s of %s\".formatted(argumentType, formalType, i, functionName));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/DomainCoercer.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "throwable"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/DomainTranslator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Case should not be reachable\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/DomainTranslator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unhandled operator: \" + comparisonOperator);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/DomainTranslator.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "throwable"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/GroupingOperationRewriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unexpected type for GROUPING operation: \" + type);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/GroupingOperationRewriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unexpected type for GROUPING operation: \" + type);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/JsonPathTranslator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"rewrite not implemented for \" + node.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/JsonPathTranslator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"datetime method is not yet supported. The query should have failed in JsonPathAnalyzer.\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/JsonPathTranslator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"like_regex predicate is not yet supported. The query should have failed in JsonPathAnalyzer.\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/LocalExecutionPlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Unexpected node: TableFunctionNode (%s)\", node.getName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/LocalExecutionPlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented: \" + node);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/LocalExecutionPlanner.java",
        "error_code": "COMPILER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(COMPILER_ERROR, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/LocalExecutionPlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "VerifyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new VerifyException(\"No valid spatial relationship found for spatial join\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/LocalExecutionPlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected expression for radius: \" + expression);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/LocalExecutionPlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported comparison operator: \" + comparisonOperator.get());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/LocalExecutionPlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported spatial function: \" + functionName);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/LocalExecutionPlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Union node should not be present in a local execution plan\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/LocalExecutionPlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/LocalExecutionPlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/LogicalPlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NullPointerException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NullPointerException(optimizer.getClass().getName() + \" returned a null plan\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/LogicalPlanner.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "CREATE TABLE IF NOT EXISTS is not supported in this context {}",
        "error_message_variables": [
            "statement.getClass().getSimpleName()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"CREATE TABLE IF NOT EXISTS is not supported in this context \" + statement.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/LogicalPlanner.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported statement type {}",
        "error_message_variables": [
            "statement.getClass().getSimpleName()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported statement type \" + statement.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/MergePartitioningHandle.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Insert and update layout have mismatched BucketNodeMap",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Insert and update layout have mismatched BucketNodeMap\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/MergePartitioningHandle.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Insert and update layout have mismatched BucketNodeMap",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Insert and update layout have mismatched BucketNodeMap\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/MergePartitioningHandle.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "VerifyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new VerifyException(\"Invalid merge operation number: \" + operation);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/NodePartitioningManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported plan distribution \" + partitioning);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/NodePartitioningManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"System distribution does not support source splits\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/OptimizerStatsMBeanExporter.java",
        "error_code": "format(\"Failed to export MBean with name '%s'\", getName(entry.getKey()))",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(format(\"Failed to export MBean with name '%s'\", getName(entry.getKey())), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/OptimizerStatsMBeanExporter.java",
        "error_code": "format(\"Failed to export MBean with for rule '%s'\", entry.getKey().getSimpleName())",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(format(\"Failed to export MBean with for rule '%s'\", entry.getKey().getSimpleName()), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/PlanCopier.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"plan copying not implemented for \" + node.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/PlanFragmenter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Unexpected node: TableFunctionNode (%s)\", node.getName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/PlanFragmenter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Cannot overwrite distribution with %s (currently set to %s)\", distribution, currentPartitioning));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/QueryPlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unrecognized MergeCase: \" + mergeCase);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/QueryPlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"unexpected window frame type: \" + window.getFrame().get().getType());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/QueryPlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"unexpected type: \" + type);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/RelationPlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unsupported node type: \" + node.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/RelationPlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"unexpected column definition: \" + columnDefinition.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/SplitSourceFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented: \" + node.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/StatisticsAggregationPlanner.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Table-wide statistic type not supported: {}",
        "error_message_variables": [
            "type"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Table-wide statistic type not supported: \" + type);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/SubqueryPlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Unexpected quantified comparison: '%s %s'\", operator.getValue(), quantifier));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/SubqueryPlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case IS_DISTINCT_FROM -> throw new IllegalArgumentException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/Symbol.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected expression: \" + expression);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/SystemPartitioningHandle.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/SystemPartitioningHandle.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/TranslationMap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported expression (%s): %s\".formatted(expr.getClass().getName(), expr));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/TranslationMap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unexpected type for IntervalLiteral: %s\" + type);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/TranslationMap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown boolean literal: \" + expression);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/TranslationMap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected type: \" + valueType);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/GroupReference.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/GroupReference.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/IterativeOptimizer.java",
        "error_code": "OPTIMIZER_TIMEOUT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "message"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(OPTIMIZER_TIMEOUT, message);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/Lookup.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/RuleIndex.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected Pattern: \" + pattern);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/AdaptiveReorderPartitionedJoin.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unexpected plan node: \" + node.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/ApplyTableScanRedirection.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Further redirection of destination table '%s' to '%s' is not supported{}",
        "error_message_variables": [
            ", destinationObjectName, name)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, format(\"Further redirection of destination table '%s' to '%s' is not supported\", destinationObjectName, name));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/ApplyTableScanRedirection.java",
        "error_code": "COLUMN_NOT_FOUND",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Did not find mapping for source column %s in table scan redirection{}",
        "error_message_variables": [
            ", assignment.getValue())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(COLUMN_NOT_FOUND, format(\"Did not find mapping for source column %s in table scan redirection\", assignment.getValue()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/ApplyTableScanRedirection.java",
        "error_code": "COLUMN_NOT_FOUND",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Did not find handle for column %s in destination table %s{}",
        "error_message_variables": [
            ", destinationColumn, destinationTable)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(COLUMN_NOT_FOUND, format(\"Did not find handle for column %s in destination table %s\", destinationColumn, destinationTable));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/ApplyTableScanRedirection.java",
        "error_code": "COLUMN_NOT_FOUND",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Did not find mapping for destination column %s in table scan redirection{}",
        "error_message_variables": [
            ", destinationColumn)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(COLUMN_NOT_FOUND, format(\"Did not find mapping for destination column %s in table scan redirection\", destinationColumn));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/ApplyTableScanRedirection.java",
        "error_code": "COLUMN_NOT_FOUND",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Did not find handle for column %s in destination table %s{}",
        "error_message_variables": [
            ", destinationColumn, destinationTable)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(COLUMN_NOT_FOUND, format(\"Did not find handle for column %s in destination table %s\", destinationColumn, destinationTable));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/CanonicalizeExpressionRewriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unexpected operator: \" + function);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/DecorrelateInnerUnnestWithGlobalAggregation.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"unexpected node: \" + root);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/DecorrelateLeftUnnestWithGlobalAggregation.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"unexpected node: \" + root);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/DecorrelateUnnest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected node type: \" + node.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/ExtractSpatialJoins.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/ExtractSpatialJoins.java",
        "error_code": "INVALID_SPATIAL_PARTITIONING",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "format(message, arguments)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SPATIAL_PARTITIONING, format(message, arguments));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/ExtractSpatialJoins.java",
        "error_code": "INVALID_SPATIAL_PARTITIONING",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Invalid name: %s{}",
        "error_message_variables": [
            ", name)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SPATIAL_PARTITIONING, format(\"Invalid name: %s\", name));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/NormalizeOrExpressionRewriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected expression: \" + expression);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/PushDownDereferenceThroughJoin.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Unexpected symbol %s in projectNode\", baseSymbol));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/SetOperationMerge.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"unexpected node type: \" + node.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/UnwrapCastInComparison.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Not yet implemented: \" + operator);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/UnwrapCastInComparison.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/UnwrapCastInComparison.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "throwable"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/UnwrapDateTruncInComparison.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case HOUR, DAY -> throw new UnsupportedOperationException(\"Unsupported type and unit: %s, %s\".formatted(type, rangeUnit));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/UnwrapDateTruncInComparison.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported type: \" + type);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/UnwrapDateTruncInComparison.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "throwable"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/UnwrapYearInComparison.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported type: \" + type);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/iterative/rule/UnwrapYearInComparison.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported type: \" + type);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/AddExchanges.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Unexpected node: TableFunctionNode (%s)\", node.getName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/AddExchanges.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected node: LimitNode with ties\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/AddExchanges.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"both unpartitionedChildren partitionedChildren are empty\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/AddExchanges.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected node: \" + node.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/AddExchanges.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected node: \" + node.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/AddLocalExchanges.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected node: \" + node.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/AddLocalExchanges.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected node: \" + node.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/AddLocalExchanges.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected node: LimitNode with ties\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/AddLocalExchanges.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Unexpected node: TableFunctionNode (%s)\", node.getName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/BeginTableWrite.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid child for TableCommitNode: \" + node.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/BeginTableWrite.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unhandled target type: \" + target.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/BeginTableWrite.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Expected to find exactly one update target TableScanNode in plan but found: \" + tableScanNodes);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/BeginTableWrite.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Expected to find zero or one update target TableScanNode in plan but found: \" + tableScanNodes);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/IndexJoinOptimizer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown type: \" + node.getType());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/IndexJoinOptimizer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Should not be trying to generate an Index on something that has already been determined to use an Index\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/IndexJoinOptimizer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Node not expected to be part of Index pipeline: \" + node);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/PlanNodeSearcher.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unable to remove first node when a node has multiple children, use removeAll instead\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/PlanNodeSearcher.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unable to replace first node when a node has multiple children, use replaceAll instead\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/PredicatePushDown.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException(\"Unsupported join type: \" + node.getType());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/PredicatePushDown.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported spatial join type: \" + node.getType());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/PropertyDerivations.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented: \" + node.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/PropertyDerivations.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected node: \" + node.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/PropertyDerivations.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected node: \" + node.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/PropertyDerivations.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Unexpected node: TableFunctionNode (%s)\", node.getName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/StreamPropertyDerivations.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented: \" + node.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/StreamPropertyDerivations.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Unexpected node: TableFunctionNode (%s)\", node.getName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/StreamPropertyDerivations.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected node: \" + node.getClass());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/StreamPropertyDerivations.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected node: \" + node.getClass());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/TransformQuantifiedComparisonApplyToCorrelatedJoin.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported quantified comparison: \" + quantifiedComparison);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/TransformQuantifiedComparisonApplyToCorrelatedJoin.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unexpected value: \" + mapOperator(quantifiedComparison));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/TransformQuantifiedComparisonApplyToCorrelatedJoin.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unexpected value: \" + mapOperator(quantifiedComparison));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/optimizations/UnaliasSymbolReferences.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported plan node \" + node.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/plan/Assignments.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Symbol %s already has assignment %s, while adding %s\".formatted(symbol.name(), replaced, expression));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/plan/SpatialJoinNode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported spatial join type: \" + joinNodeType);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/planprinter/CounterBasedAnonymizer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Anonymization is not supported for WriterTarget type: \" + target.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/planprinter/CounterBasedAnonymizer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Anonymization is not supported for WriterTarget type: \" + target.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/planprinter/GraphvizPrinter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"Node %s does not have a Graphviz visitor\", node.getClass().getName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/planprinter/IoPlanPrinter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"%s should not appear in final plan\", writerTarget.getClass().getSimpleName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/planprinter/IoPlanPrinter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Unknown WriterTarget subclass %s\", writerTarget.getClass().getSimpleName()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/planprinter/IoPlanPrinter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unreachable AllOrNone consumer\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/planprinter/PlanPrinter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"unexpected rowsPer match value: \" + rowsPerMatch.name());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/planprinter/PlanPrinter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented: \" + node.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/rowpattern/IrPatternAlternationOptimizer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"unsupported node type: \" + node.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/rowpattern/IrRowPatternFlattener.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"unsupported node type: \" + node.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/rowpattern/RowPatternToIrRewriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"unsupported pattern quantifier type: \" + quantifier.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/sanity/TableExecuteStructureValidator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected \" + node.getClass().getSimpleName() + \" found in plan; probably connector was not able to handle provided WHERE expression\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/sanity/ValidateDependenciesChecker.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented: \" + node.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/sanity/VerifyNoFilteredAggregations.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Generated plan contains unimplemented filtered aggregations\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/planner/sanity/VerifyUseConnectorNodePartitioningSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"TableScanNode (%s) doesn't have useConnectorNodePartitioning set\", scan));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/relational/SpecialForm.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Expected operator: \" + operator);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/relational/SpecialForm.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Expected cast: \" + boundSignature);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/relational/SqlToRowExpressionTranslator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented: expression translator for \" + node.getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/relational/SqlToRowExpressionTranslator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/relational/StandardFunctionResolution.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalStateException(\"Unsupported comparison operator type: \" + operator);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/rewrite/ShowQueriesRewrite.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case TABLE -> throw new IllegalArgumentException(\"Unexpected function kind: \" + kind);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/rewrite/ShowStatsRewrite.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Expected either TableSubquery or Table as relation\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/rewrite/ShowStatsRewrite.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected type: \" + type);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/routine/SqlRoutineAnalyzer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Analysis not yet implemented: \" + node);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/routine/SqlRoutineCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "VerifyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new VerifyException(\"Unsupported node: \" + node.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/routine/SqlRoutineCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/routine/SqlRoutineCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/routine/SqlRoutineCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/routine/SqlRoutineCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/routine/SqlRoutineCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/sql/routine/SqlRoutinePlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Not implemented: \" + node);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/testing/DirectTrinoClient.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Thread interrupted",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Thread interrupted\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/testing/DirectTrinoClient.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error processing query",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Error processing query\", e.getCause());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/testing/MaterializedResult.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported type \" + type);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/testing/PlanTester.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/testing/PlanTester.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/testing/StandaloneQueryRunner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/testing/TestingConnectorSession.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unknown session property {}",
        "error_message_variables": [
            "name"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, \"Unknown session property \" + name);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/testing/TestingDirectTrinoClient.java",
        "error_code": "queryInfo.getQueryId()",
        "error_code_name": null,
        "error_class_name": "QueryFailedException",
        "error_message_template": "Query failed without failure info",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new QueryFailedException(queryInfo.getQueryId(), \"Query failed without failure info\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/testing/TestingDirectTrinoClient.java",
        "error_code": "queryInfo.getQueryId()",
        "error_code_name": null,
        "error_class_name": "QueryFailedException",
        "error_message_template": "{}",
        "error_message_variables": [
            "Optional.ofNullable(remoteException.getMessage()).orElseGet(remoteException::toString)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new QueryFailedException(queryInfo.getQueryId(), Optional.ofNullable(remoteException.getMessage()).orElseGet(remoteException::toString), remoteException);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/testing/TestingMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support versioned tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support versioned tables\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/testing/TestingMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Target table already exists: \" + newTableName);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/testing/TestingMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support replacing tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support replacing tables\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/testing/TestingMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Target table already exists: \" + tableMetadata.getTable());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/testing/TestingMetadata.java",
        "error_code": "ALREADY_EXISTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "View already exists: {}",
        "error_message_variables": [
            "viewName"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ALREADY_EXISTS, \"View already exists: \" + viewName);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/testing/TestingMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ViewNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ViewNotFoundException(viewName);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/testing/TestingMetadata.java",
        "error_code": "ALREADY_EXISTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Materialized view already exists: {}",
        "error_message_variables": [
            "viewName"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ALREADY_EXISTS, \"Materialized view already exists: \" + viewName);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/testing/TestingMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Target materialized view already exists: \" + target);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/testing/TestingMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "MaterializedViewNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new MaterializedViewNotFoundException(viewName);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/InMemoryTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NotInTransactionException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotInTransactionException(transactionId);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/InMemoryTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current transaction already committed\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/InMemoryTransactionManager.java",
        "error_code": "TRANSACTION_ALREADY_ABORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Current transaction is aborted, commands ignored until end of transaction block",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(TRANSACTION_ALREADY_ABORTED, \"Current transaction is aborted, commands ignored until end of transaction block\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/InMemoryTransactionManager.java",
        "error_code": "READ_ONLY_VIOLATION",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot execute write in a read-only transaction",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(READ_ONLY_VIOLATION, \"Cannot execute write in a read-only transaction\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/InMemoryTransactionManager.java",
        "error_code": "MULTI_CATALOG_WRITE_CONFLICT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Multi-catalog writes not supported in a single transaction. Already wrote to catalog {}",
        "error_message_variables": [
            "writtenCatalogName"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(MULTI_CATALOG_WRITE_CONFLICT, \"Multi-catalog writes not supported in a single transaction. Already wrote to catalog \" + writtenCatalogName);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/InMemoryTransactionManager.java",
        "error_code": "AUTOCOMMIT_WRITE_CONFLICT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Catalog only supports writes using autocommit: {}",
        "error_message_variables": [
            "catalogMetadata.getCatalogName()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(AUTOCOMMIT_WRITE_CONFLICT, \"Catalog only supports writes using autocommit: \" + catalogMetadata.getCatalogName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/InMemoryTransactionManager.java",
        "error_code": "ADMINISTRATIVELY_KILLED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "commitBlockedReason"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ADMINISTRATIVELY_KILLED, commitBlockedReason);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/InternalConnector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/transaction/NoOpTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/BigintOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"bigint addition overflow: %s + %s{}",
        "error_message_variables": [
            ", left, right)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, format(\"bigint addition overflow: %s + %s\", left, right), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/BigintOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"bigint subtraction overflow: %s - %s{}",
        "error_message_variables": [
            ", left, right)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, format(\"bigint subtraction overflow: %s - %s\", left, right), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/BigintOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"bigint multiplication overflow: %s * %s{}",
        "error_message_variables": [
            ", left, right)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, format(\"bigint multiplication overflow: %s * %s\", left, right), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/BigintOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"bigint division overflow: %s / %s{}",
        "error_message_variables": [
            ", left, right)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, format(\"bigint division overflow: %s / %s\", left, right));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/BigintOperators.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Division by zero",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"Division by zero\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/BigintOperators.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Division by zero",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"Division by zero\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/BigintOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "bigint negation overflow: {}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"bigint negation overflow: \" + value, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/BigintOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Out of range for integer: {}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Out of range for integer: \" + value, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/BigintOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Out of range for smallint: {}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Out of range for smallint: \" + value, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/BigintOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Out of range for tinyint: {}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Out of range for tinyint: \" + value, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/BigintOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Value %s cannot be represented as varchar(%s){}",
        "error_message_variables": [
            ", value, x)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Value %s cannot be represented as varchar(%s)\", value, x));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/BlockTypeOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e.getCause());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/CharParametricType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Expected at most one parameter for CHAR\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/CharParametricType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"CHAR length must be a number\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/CharParametricType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid CHAR length \" + length);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Value %s cannot be represented as varchar(%s){}",
        "error_message_variables": [
            ", stringValue, x)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Value %s cannot be represented as varchar(%s)\", stringValue, x));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Value cannot be cast to date: {}",
        "error_message_variables": [
            "value.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Value cannot be cast to date: \" + value.toStringUtf8(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimeOperators.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot add hour, minutes or seconds to a date",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Cannot add hour, minutes or seconds to a date\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimeOperators.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot subtract hour, minutes or seconds from a date",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Cannot subtract hour, minutes or seconds from a date\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimes.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"fromPrecision must be <= toPrecision\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimes.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Invalid TIMESTAMP '%s'\", value));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimes.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Invalid TIMESTAMP '%s'\", value));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimes.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid TIMESTAMP: \" + value);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimes.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Cannot parse '%s' as short timestamp. Max allowed precision = %s\", value, MAX_SHORT_PRECISION));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimes.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid TIMESTAMP: \" + value);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimes.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Cannot parse '%s' as long timestamp. Precision must be in the range [%s, %s]\", value, MAX_SHORT_PRECISION + 1, TimestampType.MAX_PRECISION));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimes.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid TIMESTAMP WITH TIME ZONE: \" + value);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimes.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Cannot parse '%s' as short timestamp. Max allowed precision = %s\", value, MAX_SHORT_PRECISION));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimes.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid TIMESTAMP: \" + value);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimes.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Cannot parse '%s' as long timestamp. Precision must be in the range [%s, %s]\", value, TimestampWithTimeZoneType.MAX_SHORT_PRECISION + 1, TimestampWithTimeZoneType.MAX_PRECISION));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimes.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid TIMESTAMP due to daylight savings transition\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimes.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Invalid TIME '%s'\", value));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimes.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Invalid TIME '%s'\", value));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimes.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid TIME: \" + value);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimes.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid TIME: \" + value);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimes.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid TIME: \" + value);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimes.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid TIME WITH TIME ZONE: \" + value);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimes.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid TIME WITH TIME ZONE: \" + value);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimes.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid TIME WITH TIME ZONE: \" + value);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DateTimes.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid TIME WITH TIME ZONE: \" + value);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to BIGINT{}",
        "error_message_variables": [
            ", Decimals.toString(decimal, DecimalConversions.intScale(scale)))"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to BIGINT\", Decimals.toString(decimal, DecimalConversions.intScale(scale))));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast BIGINT '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", value, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast BIGINT '%s' to DECIMAL(%s, %s)\", value, precision, scale));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast BIGINT '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", value, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast BIGINT '%s' to DECIMAL(%s, %s)\", value, precision, scale));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast BIGINT '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", value, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast BIGINT '%s' to DECIMAL(%s, %s)\", value, precision, scale));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast BIGINT '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", value, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast BIGINT '%s' to DECIMAL(%s, %s)\", value, precision, scale));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to INTEGER{}",
        "error_message_variables": [
            ", longResult)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to INTEGER\", longResult));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to INTEGER{}",
        "error_message_variables": [
            ", Decimals.toString(decimal, DecimalConversions.intScale(scale)))"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to INTEGER\", Decimals.toString(decimal, DecimalConversions.intScale(scale))));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast INTEGER '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", value, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast INTEGER '%s' to DECIMAL(%s, %s)\", value, precision, scale));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast INTEGER '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", value, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast INTEGER '%s' to DECIMAL(%s, %s)\", value, precision, scale));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast INTEGER '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", value, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast INTEGER '%s' to DECIMAL(%s, %s)\", value, precision, scale));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast INTEGER '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", value, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast INTEGER '%s' to DECIMAL(%s, %s)\", value, precision, scale));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to SMALLINT{}",
        "error_message_variables": [
            ", longResult)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to SMALLINT\", longResult));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to SMALLINT{}",
        "error_message_variables": [
            ", Decimals.toString(decimal, DecimalConversions.intScale(scale)))"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to SMALLINT\", Decimals.toString(decimal, DecimalConversions.intScale(scale))));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast SMALLINT '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", value, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast SMALLINT '%s' to DECIMAL(%s, %s)\", value, precision, scale));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast SMALLINT '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", value, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast SMALLINT '%s' to DECIMAL(%s, %s)\", value, precision, scale));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast SMALLINT '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", value, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast SMALLINT '%s' to DECIMAL(%s, %s)\", value, precision, scale));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast SMALLINT '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", value, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast SMALLINT '%s' to DECIMAL(%s, %s)\", value, precision, scale));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to TINYINT{}",
        "error_message_variables": [
            ", longResult)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to TINYINT\", longResult));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to TINYINT{}",
        "error_message_variables": [
            ", Decimals.toString(decimal, DecimalConversions.intScale(scale)))"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to TINYINT\", Decimals.toString(decimal, DecimalConversions.intScale(scale))));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast TINYINT '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", value, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast TINYINT '%s' to DECIMAL(%s, %s)\", value, precision, scale));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast TINYINT '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", value, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast TINYINT '%s' to DECIMAL(%s, %s)\", value, precision, scale));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast TINYINT '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", value, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast TINYINT '%s' to DECIMAL(%s, %s)\", value, precision, scale));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast TINYINT '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", value, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast TINYINT '%s' to DECIMAL(%s, %s)\", value, precision, scale));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Value %s cannot be represented as varchar(%s){}",
        "error_message_variables": [
            ", stringValue, varcharLength)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Value %s cannot be represented as varchar(%s)\", stringValue, varcharLength));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Value %s cannot be represented as varchar(%s){}",
        "error_message_variables": [
            ", stringValue, varcharLength)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Value %s cannot be represented as varchar(%s)\", stringValue, varcharLength));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast VARCHAR '%s' to DECIMAL(%s, %s). Value is not a number.{}",
        "error_message_variables": [
            ", stringValue, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast VARCHAR '%s' to DECIMAL(%s, %s). Value is not a number.\", stringValue, precision, scale));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast VARCHAR '%s' to DECIMAL(%s, %s). Value too large.{}",
        "error_message_variables": [
            ", stringValue, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast VARCHAR '%s' to DECIMAL(%s, %s). Value too large.\", stringValue, precision, scale));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast VARCHAR '%s' to DECIMAL(%s, %s). Value is not a number.{}",
        "error_message_variables": [
            ", stringValue, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast VARCHAR '%s' to DECIMAL(%s, %s). Value is not a number.\", stringValue, precision, scale));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast VARCHAR '%s' to DECIMAL(%s, %s). Value too large.{}",
        "error_message_variables": [
            ", stringValue, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast VARCHAR '%s' to DECIMAL(%s, %s). Value too large.\", stringValue, precision, scale));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%f' to %s{}",
        "error_message_variables": [
            ", bigDecimal, StandardTypes.JSON)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%f' to %s\", bigDecimal, StandardTypes.JSON));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to DECIMAL(%s,%s){}",
        "error_message_variables": [
            ", json.toStringUtf8(), precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to DECIMAL(%s,%s)\", json.toStringUtf8(), precision, scale), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalCasts.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to DECIMAL(%s,%s){}",
        "error_message_variables": [
            ", json.toStringUtf8(), precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to DECIMAL(%s,%s)\", json.toStringUtf8(), precision, scale), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Division by zero",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"Division by zero\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Division by zero",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"Division by zero\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Division by zero",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"Division by zero\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Division by zero",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"Division by zero\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Division by zero",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"Division by zero\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Division by zero",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"Division by zero\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Division by zero",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"Division by zero\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Division by zero",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"Division by zero\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Division by zero",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"Division by zero\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Division by zero",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"Division by zero\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Division by zero",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"Division by zero\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Division by zero",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"Division by zero\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Division by zero",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"Division by zero\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DecimalParametricType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Expected 0, 1 or 2 parameters for DECIMAL type constructor.\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DoubleOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot cast double NaN to integer",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Cannot cast double NaN to integer\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DoubleOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Out of range for integer: {}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Out of range for integer: \" + value, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DoubleOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot cast double NaN to smallint",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Cannot cast double NaN to smallint\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DoubleOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Out of range for smallint: {}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Out of range for smallint: \" + value, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DoubleOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot cast double NaN to tinyint",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Cannot cast double NaN to tinyint\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DoubleOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Out of range for tinyint: {}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Out of range for tinyint: \" + value, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DoubleOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unable to cast %s to bigint{}",
        "error_message_variables": [
            ", value)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Unable to cast %s to bigint\", value), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DoubleOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Value %s (%s) cannot be represented as varchar(%s){}",
        "error_message_variables": [
            ", value, stringValue, x)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Value %s (%s) cannot be represented as varchar(%s)\", value, stringValue, x));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/DoubleOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unable to cast double %s to %s{}",
        "error_message_variables": [
            ", value, targetType)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Unable to cast double %s to %s\", value, targetType), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/FunctionType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getTypeSignature() + \" type does not have a Java type\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/FunctionType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getTypeSignature() + \" type does not have a ValueBlock type\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/FunctionType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/FunctionType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/FunctionType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/FunctionType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/FunctionType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/FunctionType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/FunctionType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/FunctionType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/FunctionType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/FunctionType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/FunctionType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/FunctionType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/FunctionType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/FunctionType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/FunctionType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/FunctionType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/FunctionType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/FunctionType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/FunctionType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/IntegerOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"integer addition overflow: %s + %s{}",
        "error_message_variables": [
            ", left, right)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, format(\"integer addition overflow: %s + %s\", left, right), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/IntegerOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"integer subtraction overflow: %s - %s{}",
        "error_message_variables": [
            ", left, right)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, format(\"integer subtraction overflow: %s - %s\", left, right), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/IntegerOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"integer multiplication overflow: %s * %s{}",
        "error_message_variables": [
            ", left, right)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, format(\"integer multiplication overflow: %s * %s\", left, right), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/IntegerOperators.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Division by zero",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"Division by zero\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/IntegerOperators.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Division by zero",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"Division by zero\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/IntegerOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "integer negation overflow: {}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"integer negation overflow: \" + value, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/IntegerOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Out of range for smallint: {}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Out of range for smallint: \" + value, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/IntegerOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Out of range for tinyint: {}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Out of range for tinyint: \" + value, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/IntegerOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Value %s cannot be represented as varchar(%s){}",
        "error_message_variables": [
            ", value, x)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Value %s cannot be represented as varchar(%s)\", value, x));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/IntervalDayTimeOperators.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot multiply by double NaN",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Cannot multiply by double NaN\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/IntervalDayTimeOperators.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot multiply by double NaN",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Cannot multiply by double NaN\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/IntervalDayTimeOperators.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot divide by double %s{}",
        "error_message_variables": [
            ", right)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"Cannot divide by double %s\", right));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/IntervalYearMonthOperators.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot multiply by double NaN",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Cannot multiply by double NaN\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/IntervalYearMonthOperators.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot multiply by double NaN",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Cannot multiply by double NaN\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/IntervalYearMonthOperators.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot divide by double %s{}",
        "error_message_variables": [
            ", right)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"Cannot divide by double %s\", right));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/IpAddressOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot cast value to IPADDRESS: {}",
        "error_message_variables": [
            "slice.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Cannot cast value to IPADDRESS: \" + slice.toStringUtf8());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/IpAddressOperators.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid InetAddress length: {}",
        "error_message_variables": [
            "address.length"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Invalid InetAddress length: \" + address.length);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/IpAddressOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid IP address binary length: {}",
        "error_message_variables": [
            "slice.length()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Invalid IP address binary length: \" + slice.length(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/IpAddressOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid IP address binary length: {}",
        "error_message_variables": [
            "slice.length()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Invalid IP address binary length: \" + slice.length());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/IpAddressType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/IpAddressType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Expected entry size to be exactly \" + INT128_BYTES + \" but was \" + length);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/Json2016Type.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonInputConversionException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonInputConversionException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/Json2016Type.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonOutputConversionException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonOutputConversionException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/LikeFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/LikeFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Escape string must be a single character",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Escape string must be a single character\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/Re2JRegexp.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Illegal replacement sequence: {}",
        "error_message_variables": [
            "replacement.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Illegal replacement sequence: \" + replacement.toStringUtf8());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/Re2JRegexp.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Group cannot be negative",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Group cannot be negative\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/Re2JRegexp.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Pattern has %d groups. Cannot access group %d{}",
        "error_message_variables": [
            ", groupCount, group)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"Pattern has %d groups. Cannot access group %d\", groupCount, group));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/Re2JRegexpType.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/RealOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Value %s (%s) cannot be represented as varchar(%s){}",
        "error_message_variables": [
            ", floatValue, stringValue, x)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Value %s (%s) cannot be represented as varchar(%s)\", floatValue, stringValue, x));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/RealOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot cast real NaN to bigint",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Cannot cast real NaN to bigint\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/RealOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot cast real NaN to integer",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Cannot cast real NaN to integer\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/RealOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Out of range for integer: {}",
        "error_message_variables": [
            "floatValue"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Out of range for integer: \" + floatValue, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/RealOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot cast real NaN to smallint",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Cannot cast real NaN to smallint\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/RealOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Out of range for smallint: {}",
        "error_message_variables": [
            "floatValue"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Out of range for smallint: \" + floatValue, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/RealOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot cast real NaN to tinyint",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Cannot cast real NaN to tinyint\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/RealOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Out of range for tinyint: {}",
        "error_message_variables": [
            "floatValue"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Out of range for tinyint: \" + floatValue, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/RealOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unable to cast real %s to %s{}",
        "error_message_variables": [
            ", value, targetType)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Unable to cast real %s to %s\", value, targetType), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/SmallintOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"smallint addition overflow: %s + %s{}",
        "error_message_variables": [
            ", left, right)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, format(\"smallint addition overflow: %s + %s\", left, right), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/SmallintOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"smallint subtraction overflow: %s - %s{}",
        "error_message_variables": [
            ", left, right)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, format(\"smallint subtraction overflow: %s - %s\", left, right), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/SmallintOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"smallint multiplication overflow: %s * %s{}",
        "error_message_variables": [
            ", left, right)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, format(\"smallint multiplication overflow: %s * %s\", left, right), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/SmallintOperators.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Division by zero",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"Division by zero\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/SmallintOperators.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Division by zero",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"Division by zero\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/SmallintOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "smallint negation overflow: {}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"smallint negation overflow: \" + value, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/SmallintOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Out of range for tinyint: {}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Out of range for tinyint: \" + value, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/SmallintOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Value %s cannot be represented as varchar(%s){}",
        "error_message_variables": [
            ", value, x)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Value %s cannot be represented as varchar(%s)\", value, x));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/TinyintOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"tinyint addition overflow: %s + %s{}",
        "error_message_variables": [
            ", left, right)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, format(\"tinyint addition overflow: %s + %s\", left, right), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/TinyintOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"tinyint subtraction overflow: %s - %s{}",
        "error_message_variables": [
            ", left, right)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, format(\"tinyint subtraction overflow: %s - %s\", left, right), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/TinyintOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"tinyint multiplication overflow: %s * %s{}",
        "error_message_variables": [
            ", left, right)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, format(\"tinyint multiplication overflow: %s * %s\", left, right), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/TinyintOperators.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Division by zero",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"Division by zero\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/TinyintOperators.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Division by zero",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"Division by zero\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/TinyintOperators.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "tinyint negation overflow: {}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"tinyint negation overflow: \" + value, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/TinyintOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Value %s cannot be represented as varchar(%s){}",
        "error_message_variables": [
            ", value, x)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Value %s cannot be represented as varchar(%s)\", value, x));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/TypeOperatorsCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e.getCause());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/TypeUtils.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "errorMsg"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, errorMsg);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/UuidOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid UUID string length: {}",
        "error_message_variables": [
            "slice.length()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Invalid UUID string length: \" + slice.length());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/UuidOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot cast value to UUID: {}",
        "error_message_variables": [
            "slice.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Cannot cast value to UUID: \" + slice.toStringUtf8());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/UuidOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid UUID binary length: {}",
        "error_message_variables": [
            "slice.length()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Invalid UUID binary length: \" + slice.length());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/VarcharOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to BOOLEAN{}",
        "error_message_variables": [
            ", value.toStringUtf8())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to BOOLEAN\", value.toStringUtf8()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/VarcharOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to DOUBLE{}",
        "error_message_variables": [
            ", slice.toStringUtf8())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to DOUBLE\", slice.toStringUtf8()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/VarcharOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to REAL{}",
        "error_message_variables": [
            ", slice.toStringUtf8())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to REAL\", slice.toStringUtf8()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/VarcharOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to BIGINT{}",
        "error_message_variables": [
            ", slice.toStringUtf8())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to BIGINT\", slice.toStringUtf8()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/VarcharOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to INT{}",
        "error_message_variables": [
            ", slice.toStringUtf8())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to INT\", slice.toStringUtf8()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/VarcharOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to SMALLINT{}",
        "error_message_variables": [
            ", slice.toStringUtf8())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to SMALLINT\", slice.toStringUtf8()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/VarcharOperators.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast '%s' to TINYINT{}",
        "error_message_variables": [
            ", slice.toStringUtf8())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast '%s' to TINYINT\", slice.toStringUtf8()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/VarcharParametricType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Expected exactly one parameter for VARCHAR\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/VarcharParametricType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"VARCHAR length must be a number\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/VarcharParametricType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid VARCHAR length \" + length);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/type/setdigest/SetDigest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/Ciphers.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to generate new secret key: {}",
        "error_message_variables": [
            "e.getMessage()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Failed to generate new secret key: \" + e.getMessage(), e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/DateTimeUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid day second interval qualifier: \" + startField + \" to \" + end);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/DateTimeUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid year month interval qualifier: \" + startField + \" to \" + end);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/DateTimeUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid interval qualifier: \" + startField + \" to \" + endField);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/EmbedVersion.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/EmbedVersion.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/Executors.java",
        "error_code": "Interrupted",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Interrupted\", e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/Failures.java",
        "error_code": "errorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "errorMessage.get()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(errorCode, errorMessage.get());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/FastutilSetHelper.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported native type in set: \" + type.getJavaType() + \" with type \" + type.getTypeSignature());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/FastutilSetHelper.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e.getCause());"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/FinalizerService.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Finalizer service has been destroyed\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/JsonUtil.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unsupported type: %s{}",
        "error_message_variables": [
            ", type)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"Unsupported type: %s\", type));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/JsonUtil.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unsupported type: %s{}",
        "error_message_variables": [
            ", type)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"Unsupported type: %s\", type));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/JsonUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonCastException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new JsonCastException(format(\"Unexpected token when cast to %s: %s\", StandardTypes.VARCHAR, parser.getText()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/JsonUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonCastException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new JsonCastException(format(\"Unexpected token when cast to %s: %s\", StandardTypes.BIGINT, parser.getText()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/JsonUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonCastException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new JsonCastException(format(\"Unexpected token when cast to %s: %s\", StandardTypes.INTEGER, parser.getText()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/JsonUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonCastException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new JsonCastException(format(\"Unexpected token when cast to %s: %s\", StandardTypes.SMALLINT, parser.getText()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/JsonUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonCastException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new JsonCastException(format(\"Unexpected token when cast to %s: %s\", StandardTypes.TINYINT, parser.getText()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/JsonUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonCastException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new JsonCastException(format(\"Unexpected token when cast to %s: %s\", StandardTypes.DOUBLE, parser.getText()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/JsonUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonCastException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new JsonCastException(format(\"Unexpected token when cast to %s: %s\", StandardTypes.REAL, parser.getText()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/JsonUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonCastException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new JsonCastException(format(\"Unexpected token when cast to %s: %s\", StandardTypes.BOOLEAN, parser.getText()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/JsonUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonCastException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonCastException(format(\"Unexpected token when cast to DECIMAL(%s,%s): %s\", precision, scale, parser.getText()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/JsonUtil.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast input json to DECIMAL(%s,%s){}",
        "error_message_variables": [
            ", precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast input json to DECIMAL(%s,%s)\", precision, scale));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/JsonUtil.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unsupported type: %s{}",
        "error_message_variables": [
            ", type)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"Unsupported type: %s\", type));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/JsonUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonCastException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonCastException(format(\"Expected a json array, but got %s\", parser.getText()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/JsonUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonCastException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonCastException(format(\"Expected a json object, but got %s\", parser.getText()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/JsonUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonCastException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonCastException(\"Duplicate keys are not allowed\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/JsonUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonCastException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonCastException(format(\"Expected a json array or object, but got %s\", parser.getText()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/JsonUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonCastException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonCastException(format(\"Expected json array ending, but got %s\", parser.getText()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/JsonUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonCastException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonCastException(\"Cannot cast a JSON object to anonymous row type. Input must be a JSON array.\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/JsonUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonCastException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonCastException(format(\"Expected a json field name, but got %s\", parser.getText()));"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/JsonUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "JsonCastException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new JsonCastException(\"Duplicate field: \" + fieldName);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/Long2LongOpenBigHashMap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Load factor must be greater than 0 and smaller than or equal to 1\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/Long2LongOpenBigHashMap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"The expected number of elements must be nonnegative\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/Long2LongOpenBigHashMap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NoSuchElementException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NoSuchElementException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/Long2LongOpenBigHashMap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/LongBigArrayFIFOQueue.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Initial capacity (\" + capacity + \") is negative\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/LongBigArrayFIFOQueue.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NoSuchElementException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NoSuchElementException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/LongBigArrayFIFOQueue.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NoSuchElementException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NoSuchElementException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/LongBigArrayFIFOQueue.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NoSuchElementException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NoSuchElementException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/LongBigArrayFIFOQueue.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NoSuchElementException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NoSuchElementException();"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/LongLong2LongOpenCustomBigHashMap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Load factor must be greater than 0 and smaller than or equal to 1\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/LongLong2LongOpenCustomBigHashMap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"The expected number of elements must be nonnegative\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/MoreMath.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"All values are NaN\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/Reflection.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/Reflection.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/Reflection.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/Reflection.java",
        "error_code": "errorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(errorCode, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/Reflection.java",
        "error_code": "errorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(errorCode, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/Reflection.java",
        "error_code": "errorCode",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(errorCode, e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/SingleAccessMethodCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/SingleAccessMethodCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(interfaceType.getSimpleName() + \"  does not have a single abstract method\");"
    },
    {
        "file_path": "core/trino-main/src/main/java/io/trino/util/StatementUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "VerifyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new VerifyException(format(\"%s does not implement %s\", taskType.getSimpleName(), DataDefinitionTask.class.getName()));"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/BenchmarkPagesIndexPageSorter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported type: \" + type);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/BenchmarkPagesIndexPageSorter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported type: \" + sortChannelType);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/SequencePageBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unsupported type \" + type);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/SequencePageBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unsupported type \" + type);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/block/AbstractTestBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Unknown type encountered: %s\", type));"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/block/AbstractTestBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(t);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/block/BlockAssertions.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"type %s is not supported.\", type));"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/block/BlockAssertions.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/block/TestArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported type: \" + expectedValue.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/block/TestRowBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/block/TestRowBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/block/TestRowBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/connector/AllowAllGrants.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Grant operation is not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Grant operation is not supported\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/connector/AllowAllGrants.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Revoke operation is not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Revoke operation is not supported\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/connector/MockConnector.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support versioned tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support versioned tables\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/connector/MockConnector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"The deprecated listTableColumns is not supported because streamTableColumns is implemented instead\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/connector/MockConnector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/connector/MockConnector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/connector/MockConnector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/connector/MockConnectorAccessControl.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/connector/MockConnectorAccessControl.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/connector/TestCatalogStoreManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/connector/TestCatalogStoreManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/connector/TestCatalogStoreManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/connector/TestCatalogStoreManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/connector/TestCatalogStoreManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/connector/TestingLocalCatalogPruneTask.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"No services to select\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/connector/TestingLocalCatalogPruneTask.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"No pool\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/connector/TestingLocalCatalogPruneTask.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Testing Locl Catalog Prune Task does not make http calls\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/dispatcher/TestLocalDispatchQuery.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "() -> { throw new UnsupportedOperationException(); },"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/dispatcher/TestLocalDispatchQuery.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "() -> { throw new UnsupportedOperationException(); },"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/dispatcher/TestLocalDispatchQuery.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "() -> { throw new UnsupportedOperationException(); }),"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/dispatcher/TestLocalDispatchQuery.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/dispatcher/TestLocalDispatchQuery.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/eventlistener/TestEventListenerManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/exchange/TestLazyExchangeDataSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/exchange/TestLazyExchangeDataSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/BaseDataDefinitionTaskTest.java",
        "error_code": "DIVISION_BY_ZERO",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "TEST create schema fail: {}",
        "error_message_variables": [
            "schema"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DIVISION_BY_ZERO, \"TEST create schema fail: \" + schema);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/BaseDataDefinitionTaskTest.java",
        "error_code": "ALREADY_EXISTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Schema already exists",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ALREADY_EXISTS, \"Schema already exists\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/BaseTestSqlTaskManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/BaseTestSqlTaskManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/BaseTestSqlTaskManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/BenchmarkNodeScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/MockRemoteTaskFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/TaskTestUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/TaskTestUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/TaskTestUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/TestCreateCatalogTask.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"TEST create catalog fail: \" + catalogName);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/TestCreateMaterializedViewTask.java",
        "error_code": "ALREADY_EXISTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Materialized view already exists",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ALREADY_EXISTS, \"Materialized view already exists\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/TestCreateTableTask.java",
        "error_code": "ALREADY_EXISTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Table already exists",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ALREADY_EXISTS, \"Table already exists\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/TestingRemoteTaskFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/TestSetSessionTask.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "MUST_BE_POSITIVE"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, MUST_BE_POSITIVE);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/TestSqlTaskExecution.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/TestSqlTaskExecution.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName() + \" cannot take input\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/TestSqlTaskManagerRaceWithCatalogPrune.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Only implement what is needed by worker catalog manager\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/TestSqlTaskManagerRaceWithCatalogPrune.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/TestSqlTaskManagerRaceWithCatalogPrune.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/TestTaskExecutorStuckSplits.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/TestTaskExecutorStuckSplits.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/buffer/BenchmarkBlockSerde.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Size of types and values must have the same size\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/buffer/BenchmarkBlockSerde.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported type \" + type);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/buffer/BenchmarkDataGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(String.format(\"The %s is not supported\", type));"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/buffer/BenchmarkPagesSerde.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/buffer/BenchmarkPagesSerde.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/buffer/TestPagesSerde.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"not implemented\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/buffer/TestPagesSerde.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"not implemented\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/buffer/TestSpoolingExchangeOutputBuffer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/executor/scheduler/TestFairScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/executor/scheduler/TestFairScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/executor/timesharing/TestTimeSharingTaskExecutor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestingNodeSelectorFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestingNodeSelectorFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestingNodeSelectorFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestScaledWriterScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestScaledWriterScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestScaledWriterScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestScaledWriterScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestScaledWriterScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestScaledWriterScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestScaledWriterScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestScaledWriterScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestScaledWriterScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestScaledWriterScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestScaledWriterScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestScaledWriterScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestScaledWriterScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestScaledWriterScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestScaledWriterScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestScaledWriterScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestScaledWriterScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestScaledWriterScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/TestScaledWriterScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/faulttolerant/TestBinPackingNodeAllocator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/faulttolerant/TestEventDrivenTaskSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/faulttolerant/TestEventDrivenTaskSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/faulttolerant/TestEventDrivenTaskSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/faulttolerant/TestEventDrivenTaskSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/faulttolerant/TestEventDrivenTaskSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/faulttolerant/TestEventDrivenTaskSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/faulttolerant/TestEventDrivenTaskSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/faulttolerant/TestExponentialGrowthPartitionMemoryEstimator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"should not be used\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/faulttolerant/TestNoMemoryAwarePartitionMemoryEstimator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"not implemented\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/faulttolerant/TestNoMemoryAwarePartitionMemoryEstimator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"not implemented\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/faulttolerant/TestNoMemoryAwarePartitionMemoryEstimator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"not implemented\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/policy/TestPhasedExecutionSchedule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/policy/TestPhasedExecutionSchedule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/policy/TestPhasedExecutionSchedule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/policy/TestPhasedExecutionSchedule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/policy/TestPhasedExecutionSchedule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/policy/TestPhasedExecutionSchedule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/policy/TestPhasedExecutionSchedule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/policy/TestPhasedExecutionSchedule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/policy/TestPhasedExecutionSchedule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/policy/TestPhasedExecutionSchedule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/policy/TestPhasedExecutionSchedule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/policy/TestPhasedExecutionSchedule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/policy/TestPhasedExecutionSchedule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/policy/TestPhasedExecutionSchedule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/execution/scheduler/policy/TestPhasedExecutionSchedule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/memory/TestMemoryPools.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": "FUNCTION_NOT_FOUND",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}\"( Joiner.on(\", {}\")",
        "error_message_variables": [
            "name",
            ").join(parameterTypes)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_NOT_FOUND, name + \"(\" + Joiner.on(\", \").join(parameterTypes) + \")\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/AbstractMockMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/TestDiscoveryNodeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/TestGlobalFunctionCatalog.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "() -> { throw new UnsupportedOperationException(); },"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/TestGlobalFunctionCatalog.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "() -> { throw new UnsupportedOperationException(); },"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/TestGlobalFunctionCatalog.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "() -> { throw new UnsupportedOperationException(); });"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/TestGlobalFunctionCatalog.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "() -> { throw new UnsupportedOperationException(); },"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/TestGlobalFunctionCatalog.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "() -> { throw new UnsupportedOperationException(); },"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/TestGlobalFunctionCatalog.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "() -> { throw new UnsupportedOperationException(); });"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/metadata/TestSignatureBinder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"argument is of type %s. It should be Type or TypeSignatureProvider\", argument.getClass()));"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/BenchmarkDynamicFilterSourceOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/BenchmarkGroupByHash.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException(\"Unsupported dataType\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/BenchmarkGroupedTopNRankBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Work did not complete\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/BenchmarkGroupedTopNRankBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Work did not complete\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/BenchmarkGroupedTopNRowNumberBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Work did not complete\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/BenchmarkGroupedTopNRowNumberBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Work did not complete\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/BenchmarkHashAndStreamingAggregationOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/BenchmarkHashAndStreamingAggregationOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/BenchmarkHashAndStreamingAggregationOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/BenchmarkScanFilterAndProjectOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"filter not supported for type : \" + type);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/CyclingGroupByHash.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Not yet supported\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/CyclingGroupByHash.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Not yet supported\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/CyclingGroupByHash.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Not yet supported\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/OperatorAssertion.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/OperatorAssertion.java",
        "error_code": "interrupted",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"interrupted\", e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/OperatorAssertion.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e.getCause());"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/TestDriver.java",
        "error_code": "Interrupted",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Interrupted\", e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/TestDriver.java",
        "error_code": "Interrupted",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Interrupted\", e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/TestFlatHashStrategy.java",
        "error_code": "Error hashing field \" + type",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Error hashing field \" + type, e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/TestGroupedTopNRankBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/TestGroupedTopNRankBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/TestGroupedTopNRankBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/TestGroupedTopNRowNumberBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/TestHttpPageBufferClient.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Foo\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/TestHttpPageBufferClient.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/TestHttpPageBufferClient.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/TestMarkDistinctOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/TestOperatorAssertion.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/aggregation/BenchmarkAggregationMaskBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/aggregation/BenchmarkArrayAggregation.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/aggregation/BenchmarkArrayAggregation.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/aggregation/TestAggregationMaskCompiler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/aggregation/groupby/GroupByAggregationTestUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"util class only\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/join/BenchmarkHashBuildAndJoinOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"Unknown hashColumns value [%s]\", hashColumns));"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/join/BenchmarkHashBuildAndJoinOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"Unknown outputColumns value [%s]\", hashColumns));"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/join/JoinTestUtils.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unspill failed",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Unspill failed\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/join/TestHashJoinOperator.java",
        "error_code": "exception.getMessage()",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "exception"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(exception.getMessage(), exception);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/join/TestLookupJoinPageBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/join/TestLookupJoinPageBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/join/TestLookupJoinPageBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/join/TestLookupJoinPageBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/join/TestLookupJoinPageBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/join/TestLookupJoinPageBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/join/TestLookupJoinPageBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/join/TestLookupJoinPageBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/join/unspilled/BenchmarkHashBuildAndJoinOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"Unknown hashColumns value [%s]\", hashColumns));"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/join/unspilled/BenchmarkHashBuildAndJoinOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"Unknown outputColumns value [%s]\", hashColumns));"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/join/unspilled/TestLookupJoinPageBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/join/unspilled/TestLookupJoinPageBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/join/unspilled/TestLookupJoinPageBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/join/unspilled/TestLookupJoinPageBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/join/unspilled/TestLookupJoinPageBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/join/unspilled/TestLookupJoinPageBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/join/unspilled/TestLookupJoinPageBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/output/BenchmarkPartitionedOutputOperator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/output/TestPagePartitionerPool.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/output/TestPagePartitionerPool.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/output/TestPagePartitionerPool.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/output/TestPagePartitionerPool.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/output/TestPagePartitionerPool.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/output/TestPagePartitionerPool.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/output/TestPagePartitionerPool.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/output/TestPagePartitionerPool.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/output/TestPagePartitionerPool.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/output/TestPagePartitionerPool.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/output/TestPagePartitionerPool.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/output/TestPagePartitionerPool.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/output/TestPagePartitionerPool.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/output/TestPagePartitionerPool.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/output/TestPagePartitionerPool.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/output/TestPagePartitionerPool.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/project/BenchmarkDictionaryBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unrecognized value type: \" + valueType);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/project/TestDictionaryAwarePageFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"value is negative: \" + value);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/project/TestDictionaryAwarePageFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NegativeValueException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NegativeValueException(value);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/project/TestDictionaryAwarePageProjection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NegativeValueException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NegativeValueException(value);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkArrayDistinct.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkArrayDotProduct.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkArrayFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkArrayFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(t);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkArrayFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(t);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkArrayIntersect.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkArrayIntersect.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkArraySort.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkArraysOverlap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkArraysOverlap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkArraySubscript.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkArrayTransform.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkDateTimeFunctions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "'{}\"' is not a valid TIMESTAMP field",
        "error_message_variables": [
            "unitString"
        ],
        "severity_level": "ERROR",
        "original_text": "default -> throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"'\" + unitString + \"' is not a valid TIMESTAMP field\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkJsonToArrayCast.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkJsonToArrayCast.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkJsonToMapCast.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkJsonToMapCast.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkMapConcat.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkMapSubscript.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkMapSubscript.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkRegexpFunctions.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"pattern: \" + patternString + \" not supported\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkRowToRowCast.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkTransformKey.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkTransformKey.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkTransformValue.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/BenchmarkTransformValue.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/TestTryFunction.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "internal error, should not be suppressed by {}",
        "error_message_variables": [
            "TryFunction.NAME"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"internal error, should not be suppressed by \" + TryFunction.NAME);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/TypeOperatorBenchmarkUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/TypeOperatorBenchmarkUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/TypeOperatorBenchmarkUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/TypeOperatorBenchmarkUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/scalar/timestamp/BenchmarkCastTimestampToVarchar.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported type: \" + type);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/unnest/TestingUnnesterUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"expected an ArrayType or MapType, but found \" + type);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/operator/unnest/TestingUnnesterUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"expected an ArrayType or MapType, but found \" + type);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/security/TestFileBasedSystemAccessControl.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/protocol/TestQueryDataSerialization.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/protocol/TestQueryResultsSerialization.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/remotetask/TestHttpRemoteTask.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/remotetask/TestHttpRemoteTask.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/remotetask/TestHttpRemoteTask.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RejectedExecutionException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RejectedExecutionException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/remotetask/TestHttpRemoteTask.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/security/TestPasswordAuthenticatorManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(\"You shall not pass!\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/security/TestResourceSecurity.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/security/TestResourceSecurity.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Expected TEST_CODE\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/security/TestResourceSecurity.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"refresh tokens not supported\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/security/TestResourceSecurity.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(\"Invalid credentials\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/security/TestResourceSecurity.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(\"Invalid credentials2\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/security/jwt/TestJwkService.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"test\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/security/oauth2/TestJweTokenSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"operation is not yet supported\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/security/oauth2/TestJweTokenSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"operation is not yet supported\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/security/oauth2/TestJweTokenSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"operation is not yet supported\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/ui/TestWebUi.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/ui/TestWebUi.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/ui/TestWebUi.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(\"Invalid credentials\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/ui/TestWebUi.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(\"Invalid credentials\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/ui/TestWebUi.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Expected TEST_CODE\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/server/ui/TestWebUi.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ChallengeFailedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ChallengeFailedException(\"invalid refresh token\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/split/MockSplitSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/split/MockSplitSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/gen/BenchmarkColumnarFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/gen/BenchmarkColumnarFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/gen/BenchmarkColumnarFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/gen/BenchmarkInCodeGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/gen/BenchmarkInCodeGenerator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/gen/BenchmarkPageProcessor2.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"filter not supported for type : \" + type);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/gen/TestColumnarFilters.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/gen/TestDictionaryAwareColumnarFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/gen/TestDictionaryAwareColumnarFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/gen/TestDictionaryAwareColumnarFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"value is negative: \" + value);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/gen/TestDictionaryAwareColumnarFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NegativeValueException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NegativeValueException(value);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/BenchmarkPlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/BenchmarkPlanner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/TestConnectorExpressionTranslator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported operator: \" + operator);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/TestingPlannerContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "() -> { throw new UnsupportedOperationException(); },"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/TestingPlannerContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "() -> { throw new UnsupportedOperationException(); },"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/TestingPlannerContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "() -> { throw new UnsupportedOperationException(); });"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/TestTableFunctionInvocation.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unsupported table function handle: \" + handle.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/TestTableScanNodePartitioning.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/TestTableScanNodePartitioning.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/TestTableScanNodePartitioning.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/TestTableScanRedirectionWithPushdown.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/TestTableScanRedirectionWithPushdown.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/TestTableScanRedirectionWithPushdown.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/TestTableScanRedirectionWithPushdown.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/assertions/CorrelatedJoinMatcher.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"This is a detailed matcher for CorrelatedJoinNode, got: \" + node);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/assertions/CorrelationMatcher.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected plan node: \" + node);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/assertions/DistinctMatcher.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected plan node: \" + node);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/assertions/JoinMatcher.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"ignoreEquiCriteria passed with non-empty equiCriteria\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/iterative/rule/TestApplyTableScanRedirection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/iterative/rule/TestDistinctAggregationStrategyChooser.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/iterative/rule/TestDistinctAggregationStrategyChooser.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/iterative/rule/TestDistinctAggregationStrategyChooser.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/iterative/rule/TestPreAggregateCaseAggregations.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/iterative/rule/TestPushJoinIntoTableScan.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"applyJoin should not be called!\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/iterative/rule/TestPushJoinIntoTableScan.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"applyJoin should not be called!\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/iterative/rule/TestPushJoinIntoTableScan.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"applyJoin should not be called!\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/iterative/rule/TestPushJoinIntoTableScan.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"applyJoin should not be called!\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/iterative/rule/TestPushJoinIntoTableScan.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Unknown table: \" + schemaTableName);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/iterative/rule/TestPushJoinIntoTableScan.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown operator: \" + operator);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/iterative/rule/TestPushProjectionIntoTableScan.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected value type: \" + e.getValue().getClass().getName());"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/iterative/rule/TestPushProjectionIntoTableScan.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"constant expression should not be pushed to the connector\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/iterative/rule/TestPushProjectionIntoTableScan.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/iterative/rule/test/PlanBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Symbol '%s' already registered with type '%s'\", name, old.type()));"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/optimizations/TestColocatedJoin.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/optimizations/TestColocatedJoin.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/optimizations/TestColocatedJoin.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/optimizations/TestPartialTopNWithPresortedInput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/optimizations/TestPartialTopNWithPresortedInput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/planner/optimizations/TestPlanNodeSearcher.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"unsupported node type: \" + root.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/query/TestCheckConstraint.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/query/TestCheckConstraint.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/query/TestCheckConstraint.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/query/TestColumnMask.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/query/TestColumnMask.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/query/TestRowFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/query/TestRowFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/query/TestRowFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/query/TestRowFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/sql/routine/TestSqlFunctions.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(t);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/testing/assertions/TestTrinoExceptionAssert.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "test exception",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"test exception\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/testing/assertions/TestTrinoExceptionAssert.java",
        "error_code": "new QueryId(\"test\")",
        "error_code_name": null,
        "error_class_name": "QueryFailedException",
        "error_message_template": "{}",
        "error_message_variables": [
            "failureInfo.getMessage()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new QueryFailedException(new QueryId(\"test\"), failureInfo.getMessage(), failureInfo.toException());"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/testing/assertions/TestTrinoExceptionAssert.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"not a trino exception\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/testing/assertions/TestTrinoExceptionAssert.java",
        "error_code": "new QueryId(\"test\")",
        "error_code_name": null,
        "error_class_name": "QueryFailedException",
        "error_message_template": "{}",
        "error_message_variables": [
            "failureInfo.getMessage()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new QueryFailedException(new QueryId(\"test\"), failureInfo.getMessage(), failureInfo.toException());"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/testing/assertions/TestTrinoExceptionAssert.java",
        "error_code": "new QueryId(\"test\")",
        "error_code_name": null,
        "error_class_name": "QueryFailedException",
        "error_message_template": "{}",
        "error_message_variables": [
            "trinoException.getMessage()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new QueryFailedException(new QueryId(\"test\"), trinoException.getMessage(), trinoException);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/tests/BogusType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"This is bogus exception\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/transaction/TestingTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/transaction/TestingTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/transaction/TestingTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/transaction/TestingTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/transaction/TestingTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/transaction/TestingTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/transaction/TestingTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/transaction/TestingTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/transaction/TestingTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/transaction/TestingTransactionManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/type/AbstractTestType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unsupported Java type \" + type.getJavaType() + \" (for type \" + type + \")\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/type/TestArrayOfMapOfBigintVarcharType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/type/TestBigintVarcharMapType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/type/TestCastDependencies.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "t"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, t);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/type/TestCastDependencies.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "t"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, t);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/type/TestCastDependencies.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "t"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, t);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/type/TestColorArrayType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/type/TestColorType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/type/TestConventionDependencies.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "t"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, t);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/type/TestConventionDependencies.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "t"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, t);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/type/TestConventionDependencies.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "t"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, t);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/type/TestIntegerVarcharMapType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/type/TestRowOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/type/TestSmallintVarcharMapType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/type/TestTinyintVarcharMapType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/type/TestUnknownType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/type/TestVarcharVarcharMapType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/util/TestEmbedVersion.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Zonky zonk\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/util/TestEmbedVersion.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Zonky zonk\");"
    },
    {
        "file_path": "core/trino-main/src/test/java/io/trino/util/TestEmbedVersion.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"a checked exception\");"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/ExpressionFormatter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/ExpressionFormatter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented: %s.visit%s\".formatted(getClass().getName(), node.getClass().getSimpleName()));"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/ReservedIdentifiers.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Failed to find exactly one table\");"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/ReservedIdentifiers.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Invalid table line: \" + line);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/ReservedIdentifiers.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Documented identifier is not reserved: \" + name);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/ReservedIdentifiers.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Duplicate documented identifier: \" + name);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/ReservedIdentifiers.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Reserved identifier is not documented: \" + name);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/RowPatternFormatter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/RowPatternFormatter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented: %s.visit%s\".formatted(getClass().getName(), node.getClass().getSimpleName()));"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/SqlFormatter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented: \" + node);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/SqlFormatter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"unknown join criteria: \" + criteria);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/SqlFormatter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"unexpected rowsPerMatch: \" + node.getRowsPerMatch().get());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/SqlFormatter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"unhandled explain option: \" + option);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/SqlFormatter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"unknown table element: \" + element);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/jsonpath/PathParser.java",
        "error_code": "message",
        "error_code_name": null,
        "error_class_name": "ParsingException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ParsingException(message, e, lineInQuery, columnInQuery);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/jsonpath/PathParser.java",
        "error_code": "message",
        "error_code_name": null,
        "error_class_name": "ParsingException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ParsingException(message, e, location.line, location.column);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/jsonpath/PathParser.java",
        "error_code": "stack overflow while parsing JSON path",
        "error_code_name": null,
        "error_class_name": "ParsingException",
        "error_message_template": "{}",
        "error_message_variables": [
            "new NodeLocation(1, 1)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ParsingException(\"stack overflow while parsing JSON path\", new NodeLocation(1, 1));"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/jsonpath/PathTreeBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException(\"unexpected unary operator: \" + operator);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/jsonpath/PathTreeBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException(\"unexpected binary operator: \" + operator);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/jsonpath/PathTreeBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException(\"unexpected comparison operator: \" + operator);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/jsonpath/PathTreeBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented\");"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/jsonpath/PathTreeBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented\");"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Missing LIMIT value\");"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported set operation: \" + context.operator.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported EXPLAIN format: \" + context.value.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported EXPLAIN type: \" + context.value.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported Session Authorization User: \" + context.authorizationUser());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported join criteria\");"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException(\"Unsupported sign: \" + context.operator.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported trim specification: \" + token.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Explicit array size not supported\");"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected empty behavior: \" + emptyBehaviorContext.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected error behavior: \" + errorBehaviorContext.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected empty behavior: \" + emptyBehaviorContext.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected error behavior: \" + errorBehaviorContext.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected parent-child type: \" + context.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented\");"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented\");"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported LIKE option type: \" + token.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException(\"Unsupported operator: \" + operator.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported operator: \" + symbol.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported interval field: \" + token.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported sign: \" + token.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported frame type: \" + type.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported bound type: \" + token.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported bound type: \" + token.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported sampling method: \" + token.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported ordering: \" + token.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported ordering: \" + token.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported quantifier: \" + symbol.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported grantor: \" + context);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported principal: \" + context);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/AstBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported query period range type: \" + token.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/ErrorHandler.java",
        "error_code": "message",
        "error_code_name": null,
        "error_class_name": "ParsingException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ParsingException(message, e, line, charPositionInLine + 1);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/ErrorHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented: wildcard transition\");"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/SqlParser.java",
        "error_code": "message",
        "error_code_name": null,
        "error_class_name": "ParsingException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ParsingException(message, e, line, charPositionInLine + 1);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/SqlParser.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InputMismatchException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InputMismatchException(recognizer);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/SqlParser.java",
        "error_code": "recognizer",
        "error_code_name": null,
        "error_class_name": "InputMismatchException",
        "error_message_template": "{}",
        "error_message_variables": [
            "nextTokensState"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new InputMismatchException(recognizer, nextTokensState, nextTokensContext);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/SqlParser.java",
        "error_code": "name + \" is too large (stack overflow while parsing)",
        "error_code_name": null,
        "error_class_name": "ParsingException",
        "error_message_template": "{}",
        "error_message_variables": [
            "location.orElse(new NodeLocation(1, 1))"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ParsingException(name + \" is too large (stack overflow while parsing)\", location.orElse(new NodeLocation(1, 1)));"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/parser/SqlParser.java",
        "error_code": "Zero-length delimited identifier not allowed",
        "error_code_name": null,
        "error_class_name": "ParsingException",
        "error_message_template": "{}",
        "error_message_variables": [
            "null"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ParsingException(\"Zero-length delimited identifier not allowed\", null, token.getLine(), token.getCharPositionInLine() + 1);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/tree/BinaryLiteral.java",
        "error_code": "Binary literal can only contain hexadecimal digits",
        "error_code_name": null,
        "error_class_name": "ParsingException",
        "error_message_template": "{}",
        "error_message_variables": [
            "location"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ParsingException(\"Binary literal can only contain hexadecimal digits\", location);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/tree/BinaryLiteral.java",
        "error_code": "Binary literal must contain an even number of digits",
        "error_code_name": null,
        "error_class_name": "ParsingException",
        "error_message_template": "{}",
        "error_message_variables": [
            "location"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ParsingException(\"Binary literal must contain an even number of digits\", location);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/tree/ComparisonExpression.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported comparison: \" + this);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/tree/ExpressionTreeRewriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"visit() not implemented for \" + node.getClass().getName());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/tree/ExpressionTreeRewriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"cannot rewrite pattern recognition clauses in window\");"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/tree/GenericLiteral.java",
        "error_code": "Spaces are not allowed between 'X' and the starting quote of a binary literal",
        "error_code_name": null,
        "error_class_name": "ParsingException",
        "error_message_template": "{}",
        "error_message_variables": [
            "location.get()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ParsingException(\"Spaces are not allowed between 'X' and the starting quote of a binary literal\", location.get());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/tree/LongLiteral.java",
        "error_code": "Invalid numeric literal: \" + value",
        "error_code_name": null,
        "error_class_name": "ParsingException",
        "error_message_template": "{}",
        "error_message_variables": [
            "location.orElse(new NodeLocation(1, 1))"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ParsingException(\"Invalid numeric literal: \" + value, location.orElse(new NodeLocation(1, 1)));"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/sql/tree/Node.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented: \" + getClass().getName());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/type/TypeCalculation.java",
        "error_code": "message",
        "error_code_name": null,
        "error_class_name": "ParsingException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ParsingException(message, e, line, charPositionInLine + 1);"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/type/TypeCalculation.java",
        "error_code": "Type calculation is too large (stack overflow while parsing)",
        "error_code_name": null,
        "error_class_name": "ParsingException",
        "error_message_template": "{}",
        "error_message_variables": [
            "new NodeLocation(1, 1)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ParsingException(\"Type calculation is too large (stack overflow while parsing)\", new NodeLocation(1, 1));"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/type/TypeCalculation.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalStateException(\"Unsupported binary operator \" + ctx.operator.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/type/TypeCalculation.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalStateException(\"Unsupported unary operator \" + ctx.operator.getText());"
    },
    {
        "file_path": "core/trino-parser/src/main/java/io/trino/type/TypeCalculation.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported binary function \" + ctx.binaryFunctionName().getText());"
    },
    {
        "file_path": "core/trino-parser/src/test/java/io/trino/sql/parser/TestStatementBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-server-rpm/src/test/java/io/trino/server/rpm/ServerIT.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException(\"Unsupported arch: \" + ARCH);"
    },
    {
        "file_path": "core/trino-server-rpm/src/test/java/io/trino/server/rpm/ServerIT.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/ErrorCode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"code is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/HostAddress.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"no port\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/HostAddress.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Port is invalid: \" + port);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/HostAddress.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"host contains a port declaration: \" + host);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/HostAddress.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid bracketed host/port: \" + hostPortString);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/HostAddress.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unparseable port number: \" + hostPortString);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/HostAddress.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unparseable port number: \" + hostPortString);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/HostAddress.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Port number out of range: \" + hostPortString);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/HostAddress.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Port number out of range: \" + defaultPort);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/Location.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"lineNumber must be at least one\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/Location.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"columnNumber must be at least one\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/NodeManager.java",
        "error_code": "NO_NODES_AVAILABLE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "No nodes available to run query",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NO_NODES_AVAILABLE, \"No nodes available to run query\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/Page.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"positionCount (%s) is negative\", positionCount));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/Page.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Block sizeInBytes is negative (%s)\", blockSizeInBytes));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/Page.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IndexOutOfBoundsException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IndexOutOfBoundsException(format(\"Invalid position %s and length %s in page with %s positions\", positionOffset, length, positionCount));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/Page.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Block does not have same position count\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/Page.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"blocks is empty\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/Page.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Column does not have same position count (%s) as page (%s)\", column.getPositionCount(), positionCount));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/PageBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Declared positions (%s) does not match block %s's number of entries (%s)\", declaredPositions, i, blocks[i].getPositionCount()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/PageBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(errorMessage);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/QueryId.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(message, messageArgs));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/SplitWeight.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"value must be > 0, found: \" + value);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/SplitWeight.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid weight: \" + weight);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/SplitWeight.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"splitCount must be >= 0, found: \" + splitCount);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/WarningCode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"code is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Offset is not monotonically ascending. offsets[%s]=%s, offsets[%s]=%s\", i, arrayOffset[i], i + 1, arrayOffset[i + 1]));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"A null array must have zero entries\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"arrayOffset is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"positionCount is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"isNull length is less than positionCount\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"offsets length is less than positionCount\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ArrayBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Expected current entry to be closed but was opened\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ArrayBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current entry must be closed before a null can be written\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ArrayBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current entry must be closed before a null can be written\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ArrayBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current entry must be closed before a null can be written\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ArrayBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current entry must be closed before a null can be written\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ArrayBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current entry must be closed before a null can be written\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ArrayBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Expected current entry to be closed but was opened\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ArrayBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current entry must be closed before the block can be built\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ArrayBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current entry must be closed before the block can be built\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/BlockUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IndexOutOfBoundsException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IndexOutOfBoundsException(format(\"Invalid offset %s and length %s in array with %s elements\", offset, length, array.length));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/BlockUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IndexOutOfBoundsException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IndexOutOfBoundsException(format(\"Invalid offset %s and length %s in array with %s elements\", offset, length, array.length));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/BlockUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IndexOutOfBoundsException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IndexOutOfBoundsException(format(\"Invalid position %s and length %s in block with %s positions\", positionOffset, length, positionCount));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/BlockUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Invalid positions array size %d, actual position count is %d\", positions.length, positionCount));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/BlockUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Invalid position %s in block with %s positions\", position, positionCount));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/BlockUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid currentSize or minimumSize\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/BlockUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Cannot grow array beyond size \" + MAX_ARRAY_SIZE);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/BlockUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"array1 and array2 cannot be null and should have same length\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/BlockUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case LazyBlock _ -> throw new IllegalStateException(\"Did not expect LazyBlock after loading \" + rawBlock.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/BufferedMapValueBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Key and value builders were corrupted by a previous call to buildValue\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/BufferedMapValueBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Expected key and value builders to have the same size\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/BufferedRowValueBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Field builders were corrupted by a previous call to buildValue\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/BufferedRowValueBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Expected field builders to have the same size\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/BufferedRowValueBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Expected exactly one entry added to each field builder\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ByteArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"arrayOffset is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ByteArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"positionCount is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ByteArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"values length is less than positionCount\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ByteArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"isNull length is less than positionCount\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ColumnarArray.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid array block: \" + block.getClass().getName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ColumnarMap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid map block: \" + block.getClass().getName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/DictionaryBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"positionCount is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/DictionaryBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"ids length is less than positionCount\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/DictionaryBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"sequential ids flag is only valid for compacted dictionary\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/DictionaryBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"newDictionary must have the same position count\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/DictionaryBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"reference to a non-existent key\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/DictionaryBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"dictionarySourceIds must be the same\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/DictionaryBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"reference to a non-existent key\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/DictionaryBlockEncoding.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Dictionary should be compact\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/EncoderUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/Fixed12Block.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"positionOffset is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/Fixed12Block.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"positionCount is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/Fixed12Block.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"values length is less than positionCount\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/Fixed12Block.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"isNull length is less than positionCount\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/Fixed12Block.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"offset must be 0, 4, or 8\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/Int128ArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"positionOffset is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/Int128ArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"positionCount is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/Int128ArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"values length is less than positionCount\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/Int128ArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"isNull length is less than positionCount\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/Int2IntOpenHashMap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Load factor must be greater than 0 and smaller than or equal to 1\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/Int2IntOpenHashMap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"The expected number of elements must be nonnegative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/Int2IntOpenHashMap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Too large (\" + expected + \" expected elements with load factor \" + f + \")\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/IntArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"arrayOffset is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/IntArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"positionCount is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/IntArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"values length is less than positionCount\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/IntArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"isNull length is less than positionCount\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/IntArrayList.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Initial capacity '%s' is negative\", initialCapacity));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/IntArrayList.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Array reached maximum size\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/LazyBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"LazyBlock does not support newBlockWithAppendedNull()\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/LazyBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Top level block is already loaded\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/LazyBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Loaded block positions count (%s) doesn't match lazy block positions count (%s)\", block.getPositionCount(), positionsCount));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/LazyBlockEncoding.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/LazyBlockEncoding.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/LongArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"arrayOffset is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/LongArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"positionCount is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/LongArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"values length is less than positionCount\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/LongArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"isNull length is less than positionCount\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"startOffset is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"positionCount is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"isNull length is less than positionCount\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"offsets length is less than positionCount\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"keyBlock and valueBlock has different size: %s %s\", keyBlock.getPositionCount(), valueBlock.getPositionCount()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"keyBlock/valueBlock size does not match hash table size: %s %s\", keyBlock.getPositionCount(), rawHashTables.length));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Expected current entry to be closed but was opened\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current entry must be closed before a null can be written\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current entry must be closed before a null can be written\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current entry must be closed before a null can be written\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current entry must be closed before a null can be written\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current entry must be closed before a null can be written\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Expected current entry to be closed but was opened\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"keyBlock and valueBlock has different size: %s %s\", keyBlockBuilder.getPositionCount(), valueBlockBuilder.getPositionCount()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current entry must be closed before the block can be built\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapHashTables.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"hashTables are not built\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapHashTables.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Offset is not monotonically ascending. offsets[%s]=%s, offsets[%s]=%s\", i, offsets[i], i + 1, offsets[i + 1]));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapHashTables.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"A null map must have zero entries\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapHashTables.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapHashTables.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "map key cannot be null or contain nulls",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"map key cannot be null or contain nulls\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapHashTables.java",
        "error_code": "keyBlock",
        "error_code_name": null,
        "error_class_name": "DuplicateMapKeyException",
        "error_message_template": "{}{}",
        "error_message_variables": [
            "keyOffset",
            "i"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new DuplicateMapKeyException(keyBlock, keyOffset + i);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapHashTables.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapHashTables.java",
        "error_code": "keyBlock",
        "error_code_name": null,
        "error_class_name": "DuplicateMapKeyException",
        "error_message_template": "{}{}",
        "error_message_variables": [
            "keyOffset",
            "i"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new DuplicateMapKeyException(keyBlock, keyOffset + i);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapHashTables.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "map key cannot be null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"map key cannot be null\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/MapHashTables.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/PageBuilderStatus.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"bytes cannot be negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Field value for null row must be null: field %s, position %s\", fieldIndex, position));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"positionCount is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"rowIsNull length is less than positionCount\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Row block must contain at least one field\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Expected field %s to have %s positions but has %s positions\".formatted(i, positionCount, fieldBlocks[i].getPositionCount()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Position is null\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected block type: \" + block.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Expected run length encoded block value to be null\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected block type: \" + block.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Expected current entry to be closed but was opened\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current entry must be closed before a null can be written\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported block type \" + fieldBlock.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current entry must be closed before a null can be written\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported block type \" + fieldBlock.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current entry must be closed before a null can be written\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported block type \" + fieldBlock.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current entry must be closed before a null can be written\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported block type \" + fieldBlock.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current entry must be closed before a null can be written\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Expected current entry to be closed but was opened\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"field %s has unexpected position count. Expected: %s, actual: %s\", i, positionCount, fieldBlockBuilders[i].getPositionCount()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current entry must be closed before the block can be built\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RowBlockBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current entry must be closed before the block can be built\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RunLengthEncodedBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Expected value to contain a single position but has %s positions\", value.getPositionCount()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RunLengthEncodedBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"positionCount is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/RunLengthEncodedBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"positionCount must be at least 2\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ShortArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"arrayOffset is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ShortArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"positionCount is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ShortArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"values length is less than positionCount\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/ShortArrayBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"isNull length is less than positionCount\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/SqlMap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Key and value blocks have different size: %s %s\", keyBlock.getPositionCount(), valueBlock.getPositionCount()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/SqlMap.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "map key cannot be null or contain nulls",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"map key cannot be null or contain nulls\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/SqlMap.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "map key cannot be null or contain nulls",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"map key cannot be null or contain nulls\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/SqlMap.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "throwable"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, throwable);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/SqlMap.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "map key cannot be null or contain nulls",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"map key cannot be null or contain nulls\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/SqlMap.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "map key cannot be null or contain nulls",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"map key cannot be null or contain nulls\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/VariableWidthBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"arrayOffset is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/VariableWidthBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"positionCount is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/VariableWidthBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"slice is null\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/VariableWidthBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"offsets length is less than positionCount\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/VariableWidthBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"valueIsNull length is less than positionCount\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/VariableWidthBlockEncoding.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"nonNullsCount must be <= positionCount, found: %s > %s\", nonNullsCount, positionCount));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/VariableWidthBlockEncoding.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"nonNullsCount must equal positionCount, found: %s <> %s\", nonNullsCount, positionCount));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/VariableWidthBlockEncoding.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Invalid lengthIndex %s for offsets %s\", lengthIndex, offsets.length));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/block/VariableWidthBlockEncoding.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Failed to consume all length entries, found %s <> %s\", lengthIndex, offsets.length));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/catalog/CatalogName.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"catalogName is empty\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/AggregateFunction.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"DISTINCT requires arguments\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/CatalogHandle.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"invalid id \" + id);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/CatalogHandle.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"invalid id \" + id);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/CatalogHandle.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"version is empty\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/CatalogHandle.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"invalid version: \" + version);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/Connector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/Connector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/Connector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/Connector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/Connector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/Connector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/Connector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/Connector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/Connector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorBucketNodeMap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"bucketCount must be positive\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorBucketNodeMap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Mismatched bucket count in bucketToNode (%s) and bucketCount (%s)\", bucketToNode.get().size(), bucketCount));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMaterializedViewDefinition.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"catalog must be present if schema is present\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMaterializedViewDefinition.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"columns list is empty\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ConnectorMetadata getTableHandle() is not implemented",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"ConnectorMetadata getTableHandle() is not implemented\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support table procedures",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support table procedures\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ConnectorMetadata getTableHandleForExecute() is implemented without beginTableExecute()",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"ConnectorMetadata getTableHandleForExecute() is implemented without beginTableExecute()\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ConnectorMetadata getTableHandleForExecute() is implemented without finishTableExecute()",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"ConnectorMetadata getTableHandleForExecute() is implemented without finishTableExecute()\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ConnectorMetadata executeTableExecute() is not implemented",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"ConnectorMetadata executeTableExecute() is not implemented\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ConnectorMetadata getCommonPartitioningHandle() is implemented without makeCompatiblePartitioning()",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"ConnectorMetadata getCommonPartitioningHandle() is implemented without makeCompatiblePartitioning()\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ConnectorMetadata getTableHandle() is implemented without getTableMetadata()",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"ConnectorMetadata getTableHandle() is implemented without getTableMetadata()\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ConnectorMetadata getTableHandle() is implemented without getColumnHandles()",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"ConnectorMetadata getTableHandle() is implemented without getColumnHandles()\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ConnectorMetadata getTableHandle() is implemented without getColumnMetadata()",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"ConnectorMetadata getTableHandle() is implemented without getColumnMetadata()\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support creating schemas",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support creating schemas\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support dropping schemas",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support dropping schemas\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support renaming schemas",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support renaming schemas\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support setting an owner on a schema",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support setting an owner on a schema\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support replacing tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support replacing tables\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support creating tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support creating tables\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support dropping tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support dropping tables\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support truncating tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support truncating tables\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support renaming tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support renaming tables\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support setting table properties",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support setting table properties\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support setting table comments",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support setting table comments\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support setting view comments",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support setting view comments\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support setting view column comments",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support setting view column comments\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support setting materialized view column comments",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support setting materialized view column comments\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support setting column comments",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support setting column comments\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support adding columns",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support adding columns\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support adding fields",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support adding fields\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support setting column types",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support setting column types\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support setting field types",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support setting field types\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support dropping a not null constraint",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support dropping a not null constraint\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support setting an owner on a table",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support setting an owner on a table\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support renaming columns",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support renaming columns\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support renaming fields",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support renaming fields\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support dropping columns",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support dropping columns\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support dropping fields",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support dropping fields\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"getInsertLayout() must be explicitly implemented in %s to benefit from insert partitioning\".formatted(getClass()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support analyze",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support analyze\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ConnectorMetadata getStatisticsCollectionMetadata() is implemented without beginStatisticsCollection()",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"ConnectorMetadata getStatisticsCollectionMetadata() is implemented without beginStatisticsCollection()\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ConnectorMetadata beginStatisticsCollection() is implemented without finishStatisticsCollection()",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"ConnectorMetadata beginStatisticsCollection() is implemented without finishStatisticsCollection()\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support replacing tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support replacing tables\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support creating tables with data",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support creating tables with data\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ConnectorMetadata beginCreateTable() is implemented without finishCreateTable()",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"ConnectorMetadata beginCreateTable() is implemented without finishCreateTable()\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support inserts",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support inserts\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ConnectorMetadata beginInsert() is implemented without finishInsert()",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"ConnectorMetadata beginInsert() is implemented without finishInsert()\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support materialized views",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support materialized views\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support materialized views",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support materialized views\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support materialized views",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support materialized views\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ConnectorMetadata beginRefreshMaterializedView() is implemented without finishRefreshMaterializedView()",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"ConnectorMetadata beginRefreshMaterializedView() is implemented without finishRefreshMaterializedView()\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "MODIFYING_ROWS_MESSAGE"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, MODIFYING_ROWS_MESSAGE);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "MODIFYING_ROWS_MESSAGE"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, MODIFYING_ROWS_MESSAGE);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "MODIFYING_ROWS_MESSAGE"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, MODIFYING_ROWS_MESSAGE);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ConnectorMetadata beginMerge() is implemented without finishMerge()",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"ConnectorMetadata beginMerge() is implemented without finishMerge()\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support creating views",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support creating views\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support renaming views",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support renaming views\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support setting an owner on a view",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support setting an owner on a view\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support dropping views",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support dropping views\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "FUNCTION_IMPLEMENTATION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ConnectorMetadata applyUpdate() is implemented without executeUpdate()",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_ERROR, \"ConnectorMetadata applyUpdate() is implemented without executeUpdate()\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ConnectorMetadata applyDelete() is implemented without executeDelete()",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"ConnectorMetadata applyDelete() is implemented without executeDelete()\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown function \" + functionId);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown function \" + functionId);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown function \" + functionId);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support creating functions",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support creating functions\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support dropping functions",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support dropping functions\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support create role",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support create role\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support drop role",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support drop role\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support roles",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support roles\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support roles",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support roles\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support roles",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support roles\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support roles",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support roles\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support roles",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support roles\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support roles",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support roles\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support grants on schemas",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support grants on schemas\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support denys on schemas",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support denys on schemas\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support revokes on schemas",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support revokes on schemas\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support grants on tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support grants on tables\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support denys on tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support denys on tables\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support revokes on tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support revokes on tables\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"constraint summary is NONE\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"constraint expression is FALSE\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"No grouping sets provided\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support creating materialized views",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support creating materialized views\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support dropping materialized views",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support dropping materialized views\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support materialized views",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support materialized views\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ConnectorMetadata getMaterializedView() is implemented without getMaterializedViewFreshness()",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"ConnectorMetadata getMaterializedView() is implemented without getMaterializedViewFreshness()\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support renaming materialized views",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support renaming materialized views\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support setting materialized view properties",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support setting materialized view properties\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorName.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid connector name: \" + name);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorNodePartitioningProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorPageSinkProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"createPageSink not supported for tableExecuteHandle\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorPageSinkProvider.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support SQL MERGE operations",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support SQL MERGE operations\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorRecordSetProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"getRecordSet() must be implemented\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorSplit.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"getAddresses must be implemented when for splits with isRemotelyAccessible=false\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorSplit.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"This connector does not provide memory accounting capabilities for ConnectorSplit\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorSplitManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorSplitManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorSplitSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorViewDefinition.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"catalog must be present if schema is present\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorViewDefinition.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"owner cannot be present with runAsInvoker\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/ConnectorViewDefinition.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"columns list is empty\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/Constraint.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"predicateColumns cannot be present when predicate is not present\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/Constraint.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"predicate cannot be present without predicateColumns\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/DiscretePredicates.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"columns is empty\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/GroupingProperty.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Cannot constrain %s with %s\", this, columns));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/InMemoryRecordSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Field \" + field + \" is not a String, but is a \" + value.getClass().getName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/InMemoryRecordSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unsupported column type \" + types.get(i));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/InMemoryRecordSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown type: \" + value.getClass());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/LocalProperty.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Cannot constrain %s with %s\", this, columns));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/MergePage.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"inputPage channelCount (%s) == dataColumns size (%s) + 2\", inputChannelCount, dataColumnCount));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/MergePage.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"positionCount should be > 0, but is \" + positionCount);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/MergePage.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid merge operation: \" + operation);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/Preconditions.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(message, args));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/Preconditions.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(message, args));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/SchemaUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NullPointerException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NullPointerException(name + \" is null\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/SchemaUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(name + \" is empty\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/SpiVersionHolder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Malformed version resource\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/SpiVersionHolder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/SystemTable.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/SystemTable.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/connector/TableProcedureExecutionMode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"filtering not supported if table data is not processed\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/exchange/ExchangeId.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid id: \" + id);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/exchange/ExchangeManagerContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/exchange/ExchangeManagerContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/exchange/ExchangeSourceOutputSelector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"unexpected taskPartitionId: \" + taskPartitionId);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/exchange/ExchangeSourceOutputSelector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"unexpected attemptId: \" + attemptId);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/exchange/ExchangeSourceOutputSelector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"unexpected selectedAttempt: \" + selectedAttempt);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/exchange/ExchangeSourceOutputSelector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid transition to the same or an older version\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/exchange/ExchangeSourceOutputSelector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid transition from final selector\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/exchange/ExchangeSourceOutputSelector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid transition for exchange %s, taskPartitionId %s: %s -> %s\".formatted(exchangeId, taskPartitionId, currentValue, newValue));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/exchange/ExchangeSourceOutputSelector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"duplicated selector for exchange: \" + exchangeId);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/exchange/ExchangeSourceOutputSelector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "(a, b) -> { throw new IllegalArgumentException(\"got duplicate key \" + a + \", \" + b); },"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/exchange/ExchangeSourceOutputSelector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"selection not found for exchangeId %s, taskPartitionId %s\".formatted(exchangeId, taskPartitionId));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/exchange/ExchangeSourceOutputSelector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected exchange: \" + exchangeId);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/exchange/ExchangeSourceOutputSelector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Partition count for exchange is already set: \" + exchangeId);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/exchange/ExchangeSourceOutputSelector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"selector is already marked as final\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/exchange/ExchangeSourceOutputSelector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"partition count is missing for exchange: \" + exchangeId);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/exchange/ExchangeSourceOutputSelector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"unexpected attemptId: \" + attemptId);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/exchange/ExchangeSourceOutputSelector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"decision for partition %s is already made: %s\".formatted(taskPartitionId, currentValue));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/exchange/ExchangeSourceOutputSelector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"decision for partition %s is already made: %s\".formatted(taskPartitionId, currentValue));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/exchange/ExchangeSourceOutputSelector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Attempt is unknown for partition: \" + partitionId);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/exchange/ExchangeSourceOutputSelector.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"expected maxTaskPartitionId to be less than or equal to \" + (partitionCount - 1));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/expression/FieldDereference.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"field out of range: [0, %s], was %s\", size - 1, field));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/expression/Variable.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"name is empty\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/AccumulatorState.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"copy not implemented for \" + getClass());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/CatalogSchemaFunctionName.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"catalogName is empty\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/FunctionId.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"id must not be empty\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/FunctionId.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"id must be lowercase\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/FunctionId.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"id must not contain '@'\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/FunctionMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"names must contain the canonical name\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/FunctionMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"signature and functionNullability must have same argument count\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/FunctionMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"description is blank\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/FunctionProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"%s does not provide scalar functions\".formatted(getClass().getName()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/FunctionProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"%s does not provide aggregation functions\".formatted(getClass().getName()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/FunctionProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"%s does not provide window functions\".formatted(getClass().getName()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/FunctionProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"%s does not provide table functions\".formatted(getClass().getName()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/InternalDataAccessor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/InternalDataAccessor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/InternalDataAccessor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/InternalDataAccessor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/ScalarFunctionAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Actual and expected conventions have different number of arguments\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/ScalarFunctionAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case DEFAULT_ON_NULL -> throw new IllegalArgumentException(\"actual return convention cannot be DEFAULT_ON_NULL\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/ScalarFunctionAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case FUNCTION -> throw new IllegalStateException(\"Unexpected value: \" + expectedArgumentConvention);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/ScalarFunctionAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case FUNCTION -> throw new IllegalStateException(\"Unexpected value: \" + expectedArgumentConvention);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/ScalarFunctionAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case FUNCTION -> throw new IllegalStateException(\"Unexpected value: \" + expectedArgumentConvention);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/ScalarFunctionAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case FUNCTION -> throw new IllegalArgumentException(\"Unsupported argument convention: \" + actualArgumentConvention);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/ScalarFunctionAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Actual and expected conventions have different number of arguments\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/ScalarFunctionAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Session method cannot be adapted to no session\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/ScalarFunctionAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Instance method cannot be adapted to no instance\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/ScalarFunctionAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Nullable return cannot be adapted fail on null\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/ScalarFunctionAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"%s return convention cannot be adapted to %s\".formatted(actualReturnConvention, expectedReturnConvention));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/ScalarFunctionAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"In-out argument cannot be adapted\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/ScalarFunctionAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Function argument cannot be adapted\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/ScalarFunctionAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Flat argument cannot be adapted\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/ScalarFunctionAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"RETURN_NULL_ON_NULL adaptation cannot be used with FAIL_ON_NULL return convention\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/ScalarFunctionAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"RETURN_NULL_ON_NULL adaptation cannot be used with FAIL_ON_NULL return convention\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/ScalarFunctionAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(actualArgumentConvention + \" cannot be adapted to \" + expectedArgumentConvention);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/SchemaFunctionName.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"schemaName is empty\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/SchemaFunctionName.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"functionName is empty\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/TypeVariableConstraint.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"variadicBound must be row but is \" + variadicBound.get());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/table/Preconditions.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(message);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/table/TableFunctionProcessorProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"this table function does not process input data\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/function/table/TableFunctionProcessorProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"this table function does not process splits\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/AllOrNoneValueSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/AllOrNoneValueSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/AllOrNoneValueSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Value class %s does not match required class %s\", value.getClass().getName(), expectedClass.getName()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/AllOrNoneValueSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Mismatched types: %s vs %s\", getType(), other.getType()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/AllOrNoneValueSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"ValueSet is not a AllOrNoneValueSet: %s\", other.getClass()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/Domain.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"values cannot be empty\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/Domain.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Domain is not a single value\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/Domain.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Domain is not a nullable single value\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/Domain.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Domain is not a nullable discrete set\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/Domain.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"domains cannot be empty for union\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/Domain.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Mismatched Domain types: %s vs %s\", getType(), domain.getType()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/Domain.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Mismatched Domain value set classes: %s vs %s\", values.getClass(), domain.values.getClass()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/Domain.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Discrete set cannot be empty\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/EquatableValueSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Type is not comparable: \" + type);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/EquatableValueSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Use SortedRangeSet instead\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/EquatableValueSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"EquatableValueSet does not have just a single value\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/EquatableValueSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"EquatableValueSet is not a discrete set\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/EquatableValueSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Mismatched types: %s vs %s\", getType(), other.getType()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/EquatableValueSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"ValueSet is not a EquatableValueSet: %s\", other.getClass()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/EquatableValueSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Block should only have one position\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/NullableValue.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Object '%s' does not match type %s\", value, type.getJavaType()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/Range.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"low bound must be exclusive for low unbounded range\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/Range.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"high bound must be exclusive for high unbounded range\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/Range.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"low must be less than or equal to high. Actual: low=\" + lowValue.get() + \", high=\" + highValue.get());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/Range.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"invalid bounds for single value range\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/Range.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"cannot use NaN as range bound\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/Range.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Range does not have just a single value\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/Range.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"next before this\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/Range.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Mismatched Range types: %s vs %s\", getType(), range.getType()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/SortedRangeSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Type is not orderable: \" + type);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/SortedRangeSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Malformed inclusive markers\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/SortedRangeSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Size mismatch between inclusive markers and sortedRanges block: %s, %s\", inclusive.length, sortedRanges.getPositionCount()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/SortedRangeSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid inclusive marker for null value at position \" + position);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/SortedRangeSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Invalid null value at position %s of %s\", position, sortedRanges.getPositionCount()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/SortedRangeSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"sortedRanges must be a block: \" + sortedRanges);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/SortedRangeSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Values not sorted\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/SortedRangeSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"cannot use empty rangeList\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/SortedRangeSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"SortedRangeSet does not have just a single value\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/SortedRangeSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Cannot get span if no ranges exist\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/SortedRangeSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case LazyBlock _ -> throw new IllegalArgumentException(\"Did not expect LazyBlock\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/SortedRangeSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Incorrect number of ranges written\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/SortedRangeSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Mismatched types: %s vs %s\", getType(), other.getType()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/SortedRangeSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"ValueSet is not a SortedRangeSet: %s\", other.getClass()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/SortedRangeSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"discreteValues iterator is empty\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/SortedRangeSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Type is not orderable: \" + type);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/SortedRangeSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Range type %s does not match builder type %s\", range.getType(), type));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/SortedRangeSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"cannot use NaN as range bound\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/SortedRangeSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"next before this\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/ToStringSession.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unknown session property {}",
        "error_message_variables": [
            "name"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, \"Unknown session property \" + name);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/TupleDomain.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Provided type %s does not match domain type %s for column %s\".formatted(type, domain.getType(), column));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/TupleDomain.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"tupleDomains must have at least one element\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/TupleDomain.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Every argument must have a unique mapping. %s maps to %s and %s\", entry.getKey(), entry.getValue(), previous));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/TupleDomain.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "(u, v) -> { throw new IllegalStateException(format(\"Duplicate values for a key: %s and %s\", u, v)); },"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/Utils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Object '%s' (%s) is not instance of %s\", object, object.getClass().getName(), expectedClass.getName()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/Utils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Block should have exactly one position, but has: \" + block.getPositionCount());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/ValueSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Cannot create discrete ValueSet with non-comparable type: \" + type);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/ValueSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Cannot create discrete ValueSet with non-comparable type: \" + type);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/ValueSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/predicate/ValueSet.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/procedure/Procedure.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Optional arguments should follow required ones\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/procedure/Procedure.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(message);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/protocol/SpoolingContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"rows is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/protocol/SpoolingContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"size is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/protocol/SpoolingManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Not implemented\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/protocol/SpoolingManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/protocol/SpoolingManagerContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/protocol/SpoolingManagerContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/protocol/SpoolingManagerContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/resourcegroups/ResourceGroupConfigurationManagerContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/resourcegroups/ResourceGroupConfigurationManagerContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/resourcegroups/ResourceGroupId.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Resource group id is empty\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/resourcegroups/ResourceGroupId.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Empty segment in resource group id\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/resourcegroups/SessionPropertyConfigurationManagerContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"User %s cannot impersonate user %s%s\", originalUser, newUser, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Principal %s cannot become user %s%s\", principal.orElse(null), userName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot read system information%s\", formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot write system information%s\", formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot execute query%s\", formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot view query%s\", formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot kill query%s\", formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot access catalog %s%s\", catalogName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot create catalog %s%s\", catalogName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot drop catalog %s%s\", catalogName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot create schema %s%s\", schemaName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot drop schema %s%s\", schemaName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot rename schema from %s to %s%s\", schemaName, newSchemaName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot set authorization for schema %s to %s%s\", schemaName, principal, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot show schemas%s\", formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot show create schema for %s%s\", schemaName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot show create table for %s%s\", tableName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot create table %s%s\", tableName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot drop table %s%s\", tableName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot rename table from %s to %s%s\", tableName, newTableName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot set table properties to %s%s\", tableName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot comment table to %s%s\", tableName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot comment view to %s%s\", viewName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot comment column to %s%s\", tableName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot show tables of schema %s%s\", schemaName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot show columns of table %s\", tableName));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot show columns of table %s%s\", tableName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot add a column to table %s%s\", tableName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot drop a column from table %s%s\", tableName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot alter a column for table %s%s\", tableName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot set authorization for table %s to %s%s\", tableName, principal, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot rename a column in table %s%s\", tableName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot select from table %s%s\", tableName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot insert into table %s%s\", tableName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot delete from table %s%s\", tableName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot truncate table %s%s\", tableName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot update columns %s in table %s%s\", updatedColumnNames, tableName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot create view %s%s\", viewName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"View owner '%s' cannot create view that selects from %s%s\", identity.getUser(), sourceName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot rename view from %s to %s%s\", viewName, newViewName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot set authorization for view %s to %s%s\", viewName, principal, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot drop view %s%s\", viewName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot create materialized view %s%s\", materializedViewName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot refresh materialized view %s%s\", materializedViewName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot set properties of materialized view %s%s\", materializedViewName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot drop materialized view %s%s\", materializedViewName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot rename materialized view from %s to %s%s\", materializedViewName, newMaterializedViewName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot grant privilege %s on schema %s%s\", privilege, schemaName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot deny privilege %s on schema %s%s\", privilege, schemaName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot revoke privilege %s on schema %s%s\", privilege, schemaName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot grant privilege %s on table %s%s\", privilege, tableName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot deny privilege %s on table %s%s\", privilege, tableName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot revoke privilege %s on table %s%s\", privilege, tableName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(\"Cannot show roles\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(\"Cannot show current roles\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(\"Cannot show role grants\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot set system session property %s%s\", propertyName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot set catalog session property %s.%s%s\", catalogName, propertyName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot set catalog session property %s\", propertyName));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot select from columns %s in table or view %s%s\", columnNames, tableName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot create role %s\", roleName));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot drop role %s\", roleName));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot grant roles %s to %s\", roles, grantees));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot revoke roles %s from %s\", roles, grantees));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot set role %s\", role));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot execute procedure %s%s\", procedureName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot execute function %s\", functionName));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot execute %s function %s%s\", functionKind.name().toLowerCase(Locale.ROOT), functionName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot execute table procedure %s on %s\", procedureName, tableName));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot show functions of schema %s%s\", schemaName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot create function %s%s\", functionName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot drop function %s%s\", functionName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/AccessDeniedException.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(format(\"Cannot show create function for %s%s\", functionName, formatExtraInfo(extraInfo)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/Identity.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"There is already role set for \" + catalog);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/Identity.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Destroy callback already set\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/SelectedRole.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Role must be present for the selected role type: \" + type);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/SelectedRole.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Could not parse selected role: \" + value);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/security/ViewExpression.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"catalog must be present if schema is present\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/session/PropertyMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Invalid property name '%s'\", name));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/session/PropertyMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Invalid property description '%s'\", description));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/session/PropertyMetadata.java",
        "error_code": "format(\"Invalid value [%s]. Valid values: %s\", value, allValues)",
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Invalid value [%s]. Valid values: %s\", value, allValues), e);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/statistics/ColumnStatisticMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Exactly one of statisticType and aggregation should be set\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/statistics/ColumnStatistics.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"nullsFraction must be between 0 and 1: %s\", nullsFraction.getValue()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/statistics/ColumnStatistics.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"distinctValuesCount must be greater than or equal to 0: %s\", distinctValuesCount.getValue()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/statistics/ColumnStatistics.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"dataSize must be greater than or equal to 0: %s\", dataSize.getValue()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/statistics/ComputedStatistics.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"grouping value blocks are expected to be single value blocks\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/statistics/ComputedStatistics.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"computed table statistics blocks are expected to be single value blocks\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/statistics/ComputedStatistics.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"computed column statistics blocks are expected to be single value blocks\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/statistics/DoubleRange.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"min must not be NaN\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/statistics/DoubleRange.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"max must not be NaN\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/statistics/DoubleRange.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"max must be greater than or equal to min. min: %s. max: %s. \", min, max));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/statistics/Estimate.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"value is NaN\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/statistics/Estimate.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"value is infinite\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/statistics/TableStatistics.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"rowCount must be greater than or equal to 0: %s\", rowCount.getValue()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/transaction/IsolationLevel.java",
        "error_code": "UNSUPPORTED_ISOLATION_LEVEL",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Connector supported isolation level %s does not meet requested isolation level %s{}",
        "error_message_variables": [
            ", supportedLevel, requestedLevel)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(UNSUPPORTED_ISOLATION_LEVEL, format(\"Connector supported isolation level %s does not meet requested isolation level %s\", supportedLevel, requestedLevel));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/AbstractIntType.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Value %d exceeds MAX_INT{}",
        "error_message_variables": [
            ", value)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Value %d exceeds MAX_INT\", value));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/AbstractIntType.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Value %d is less than MIN_INT{}",
        "error_message_variables": [
            ", value)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Value %d is less than MIN_INT\", value));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/AbstractType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/AbstractType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/AbstractType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/AbstractType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/AbstractType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/AbstractType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/AbstractType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/AbstractType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/AbstractType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(getClass().getName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/AbstractVariableWidthType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Variable size slice does not have enough space\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/ArrayType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/ArrayType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case LazyBlock _ -> throw new IllegalStateException(\"Did not expect LazyBlock after loading \" + array.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/ArrayType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported block type: \" + array.getClass().getName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/ArrayType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported block type: \" + array.getClass().getName());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Chars.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"pad length is smaller than slice length\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Chars.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"pad length is smaller than text length\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Chars.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"type must be the instance of CharType\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Chars.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Max length must be greater or equal than zero\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Chars.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"length must be greater than or equal to zero\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Chars.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"invalid offset/length\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/CharType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"CHAR length must be in range [0, %s], got %s\", MAX_LENGTH, length));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/CharType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Character count exceeds length limit %s: %s\", length, sliceRepresentation(slice)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/CharType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Value representation has a trailing space: %s\", sliceRepresentation(slice)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/CharType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Slice representing Char should not have trailing spaces\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/DateTimeEncoding.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Millis overflow: \" + millisUtc);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/DecimalConversions.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast DOUBLE '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", value, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast DOUBLE '%s' to DECIMAL(%s, %s)\", value, precision, scale));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/DecimalConversions.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast DOUBLE '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", value, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast DOUBLE '%s' to DECIMAL(%s, %s)\", value, precision, scale));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/DecimalConversions.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast DOUBLE '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", value, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast DOUBLE '%s' to DECIMAL(%s, %s)\", value, precision, scale));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/DecimalConversions.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast REAL '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", floatValue, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast REAL '%s' to DECIMAL(%s, %s)\", floatValue, precision, scale));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/DecimalConversions.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast REAL '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", floatValue, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast REAL '%s' to DECIMAL(%s, %s)\", floatValue, precision, scale));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/DecimalConversions.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot cast REAL '%s' to DECIMAL(%s, %s){}",
        "error_message_variables": [
            ", floatValue, precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, format(\"Cannot cast REAL '%s' to DECIMAL(%s, %s)\", floatValue, precision, scale));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/DecimalConversions.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(message);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Decimals.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid DECIMAL value '\" + stringValue + \"'\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Decimals.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid DECIMAL value '\" + stringValue + \"'\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Decimals.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Value exceeds maximum precision",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Value exceeds maximum precision\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Decimals.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"scale is negative: \" + scale);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Decimals.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"scale is negative: \" + scale);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Decimals.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"expected precision to be less than \" + MAX_SHORT_PRECISION);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Decimals.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"decimal precision larger than column precision\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Decimals.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"target scale must be larger than source scale\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Decimals.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"target scale must be larger than source scale\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Decimals.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ArithmeticException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ArithmeticException(\"Decimal overflow\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Decimals.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decimal overflow",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, \"Decimal overflow\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Decimals.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"precision must be in [1, \" + MAX_PRECISION + \"] range\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/DecimalType.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"DECIMAL precision must be in range [1, %d]: %s{}",
        "error_message_variables": [
            ", MAX_PRECISION, precision)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"DECIMAL precision must be in range [1, %d]: %s\", MAX_PRECISION, precision));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/DecimalType.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"DECIMAL scale must be in range [0, precision (%s)]: %s{}",
        "error_message_variables": [
            ", precision, scale)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"DECIMAL scale must be in range [0, precision (%s)]: %s\", precision, scale));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/DecimalType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(format, args));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Int128.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ArithmeticException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ArithmeticException(\"Overflow\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Int128.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Expected long[2]\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Int128.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ArithmeticException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ArithmeticException(\"BigInteger out of Int128 range\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Int128.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ArithmeticException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ArithmeticException(\"Overflow\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Int128Math.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"UnsignedDecimal128Arithmetic is supported on little-endian machines only\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Int128Math.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ArithmeticException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ArithmeticException(\"Overflow\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Int128Math.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Value must be positive\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Int128Math.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Value must be positive\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Int128Math.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Value must be positive\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Int128Math.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"qhat is greater than q by more than 2: \" + iterations);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Int128Math.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ArithmeticException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ArithmeticException(\"Overflow\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Int128Math.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Int128Math.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException();"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/LongTimestamp.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"picosOfMicro must be >= 0: \" + picosOfMicro);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/LongTimestamp.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"picosOfMicro must be < 1_000_000: \" + picosOfMicro);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/LongTimestampType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Precision must be in the range [%s, %s]\", MAX_SHORT_PRECISION + 1, MAX_PRECISION));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/LongTimestampWithTimeZone.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"picosOfMilli must be >= 0\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/LongTimestampWithTimeZone.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"picosOfMilli must be < \" + PICOSECONDS_PER_MILLISECOND);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/LongTimestampWithTimeZoneType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Precision must be in the range [%s, %s]\", MAX_SHORT_PRECISION + 1, MAX_PRECISION));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/LongTimeWithTimeZoneType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Precision must be in the range [%s, %s]\", MAX_SHORT_PRECISION + 1, MAX_PRECISION));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/MapType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/MapType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"key type must be comparable, got %s\", keyType));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/MapType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Maps must be represented with SqlMap\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/QuantileDigestParametricType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"QDIGEST type expects exactly one type as a parameter, got \" + parameters);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/QuantileDigestParametricType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"QDIGEST expects type as a parameter, got \" + parameters);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/RealType.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Value (%sb) is not a valid single-precision float{}",
        "error_message_variables": [
            ", Long.toBinaryString(value))"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Value (%sb) is not a valid single-precision float\", Long.toBinaryString(value)));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/RowType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/RowType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Row type must have at least 1 field\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/RowType.java",
        "error_code": "StandardErrorCode.NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ROW comparison not supported for fields with null elements",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(StandardErrorCode.NOT_SUPPORTED, \"ROW comparison not supported for fields with null elements\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/ShortTimestampType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Precision must be in the range [0, %s]\", MAX_SHORT_PRECISION));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/ShortTimestampWithTimeZoneType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Precision must be in the range [0, %s]\", MAX_SHORT_PRECISION));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/ShortTimeWithTimeZoneType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Precision must be in the range [0, %s]\", MAX_SHORT_PRECISION));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/SmallintType.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Value %d exceeds MAX_SHORT{}",
        "error_message_variables": [
            ", value)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Value %d exceeds MAX_SHORT\", value));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/SmallintType.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Value %d is less than MIN_SHORT{}",
        "error_message_variables": [
            ", value)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Value %d is less than MIN_SHORT\", value));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/SqlTime.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid precision: \" + precision);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/SqlTime.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"picos contains data beyond specified precision (%s): %s\", precision, picos));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/SqlTime.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"picos is out of range: \" + picos);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/SqlTimestamp.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid precision: \" + precision);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/SqlTimestamp.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Expected picosOfMicro to be 0 for precision %s: %s\", precision, picosOfMicro));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/SqlTimestamp.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Expected 0s for digits beyond precision %s: epochMicros = %s\", precision, epochMicros));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/SqlTimestamp.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Expected 0s for digits beyond precision %s: picosOfMicro = %s\", precision, picosOfMicro));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/SqlTimestamp.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"picosOfMicro is out of range: \" + picosOfMicro);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/SqlTimestampWithTimeZone.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid precision: \" + precision);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/SqlTimestampWithTimeZone.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Expected picosOfMilli to be 0 for precision %s: %s\", precision, picosOfMilli));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/SqlTimestampWithTimeZone.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Expected 0s for digits beyond precision %s: epochMillis = %s\", precision, epochMillis));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/SqlTimestampWithTimeZone.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Expected 0s for digits beyond precision %s: picosOfMilli = %s\", precision, picosOfMilli));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/SqlTimestampWithTimeZone.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"picosOfMilli is out of range: \" + picosOfMilli);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/SqlTimestampWithTimeZone.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid precision: \" + precision);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/SqlTimeWithTimeZone.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid precision: \" + precision);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/SqlTimeWithTimeZone.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"picoseconds contains data beyond specified precision (%s): %s\", precision, picoseconds));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/SqlTimeWithTimeZone.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"picoseconds is out of range: \" + picoseconds);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/SqlTimeWithTimeZone.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"offsetMinutes is out of range: \" + offsetMinutes);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimeParametricType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Expected exactly one parameter for TIME\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimeParametricType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"TIME precision must be a number\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimeParametricType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid TIME precision \" + precision);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimestampParametricType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Expected exactly one parameter for TIMESTAMP\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimestampParametricType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"TIMESTAMP precision must be a number\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimestampParametricType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid TIMESTAMP precision \" + precision);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Timestamps.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"value must be >= 0\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Timestamps.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"fromPrecision must be <= toPrecision\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Timestamps.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Factor must be > 0\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimestampType.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"TIMESTAMP precision must be in range [0, %s]: %s{}",
        "error_message_variables": [
            ", MAX_PRECISION, precision)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, format(\"TIMESTAMP precision must be in range [0, %s]: %s\", MAX_PRECISION, precision));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimestampWithTimeZoneParametricType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Expected exactly one parameter for TIMESTAMP WITH TIME ZONE\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimestampWithTimeZoneParametricType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"TIMESTAMP precision must be a number\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimestampWithTimeZoneParametricType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid TIMESTAMP precision \" + precision);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimestampWithTimeZoneType.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"TIMESTAMP WITH TIME ZONE precision must be in range [0, %s]: %s{}",
        "error_message_variables": [
            ", MAX_PRECISION, precision)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, format(\"TIMESTAMP WITH TIME ZONE precision must be in range [0, %s]: %s\", MAX_PRECISION, precision));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimestampWithTimeZoneType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Precision must be in the range [0, %s]\", MAX_PRECISION));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimeType.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"TIME precision must be in range [0, %s]: %s{}",
        "error_message_variables": [
            ", MAX_PRECISION, precision)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, format(\"TIME precision must be in range [0, %s]: %s\", MAX_PRECISION, precision));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimeWithTimeZoneParametricType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Expected exactly one parameter for TIME WITH TIME ZONE\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimeWithTimeZoneParametricType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"TIME WITH TIME ZONE precision must be a number\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimeWithTimeZoneParametricType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid TIME WITH TIME ZONE precision \" + precision);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimeWithTimeZoneType.java",
        "error_code": "NUMERIC_VALUE_OUT_OF_RANGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"TIME WITH TIME ZONE precision must be in range [0, %s]: %s{}",
        "error_message_variables": [
            ", MAX_PRECISION, precision)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NUMERIC_VALUE_OUT_OF_RANGE, format(\"TIME WITH TIME ZONE precision must be in range [0, %s]: %s\", MAX_PRECISION, precision));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimeZoneKey.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid time zone key: \" + timeZoneKey);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimeZoneKey.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Zone id is an empty string\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimeZoneKey.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TimeZoneNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TimeZoneNotSupportedException(zoneId);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimeZoneKey.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid offset minutes {}",
        "error_message_variables": [
            "offsetMinutes"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Invalid offset minutes \" + offsetMinutes);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimeZoneKey.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TimeZoneNotSupportedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TimeZoneNotSupportedException(zoneIdForOffset(offsetMinutes));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TimeZoneKey.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"key is negative\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TinyintType.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Value %d exceeds MAX_BYTE{}",
        "error_message_variables": [
            ", value)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Value %d exceeds MAX_BYTE\", value));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TinyintType.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Value %d is less than MIN_BYTE{}",
        "error_message_variables": [
            ", value)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Value %d is less than MIN_BYTE\", value));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Type.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Type is not orderable: \" + this);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Type.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Type is not orderable: \" + this);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperatorDeclaration.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperatorDeclaration.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(operatorType + \" operator is not supported: \" + method);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperatorDeclaration.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(operatorsClass + \" does not contain any operators\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperatorDeclaration.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Function argument convention is not supported in type operators\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperatorDeclaration.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unknown argument convention: \" + argumentConvention);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperatorDeclaration.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unknown return convention: \" + returnConvention);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperatorDeclaration.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"BLOCK_POSITION argument convention is not allowed for type operators\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperatorDeclaration.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Expected %s operator to return %s: %s\", operatorType, expectedReturnType, method));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperatorDeclaration.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"@BlockPosition argument must be a ValueBlock type for %s operator: %s\".formatted(operatorType, method));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperatorDeclaration.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"@BlockIndex argument must be type int for %s operator: %s\".formatted(operatorType, method));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperatorDeclaration.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Unexpected parameters for %s operator: %s\", operatorType, method));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperatorDeclaration.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(message, arguments));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperatorDeclaration.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Hash code operators can not be supplied when equal operators are not supplied\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperatorDeclaration.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"xxHash64 operators can not be supplied when equal operators are not supplied\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperatorDeclaration.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"xxHash64 operators must be supplied when equal operators are supplied\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperatorDeclaration.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Less-than-operators can not be supplied when comparison operators are not supplied\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperatorDeclaration.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Less-than-or-equals operators can not be supplied when comparison operators are not supplied\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(type + \" is not comparable\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(type + \" is not comparable\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(type + \" is not comparable\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(type + \" is not comparable\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(type + \" is not comparable\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(type + \" is not orderable\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(type + \" is not orderable\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(type + \" is not orderable\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(type + \" is not orderable\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(type + \" is not orderable\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported operator type: \" + operatorConvention.operatorType());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected argument convention: \" + distinctArgumentConvention);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported operator type: \" + operatorConvention.operatorType());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported operator type: \" + operatorConvention.operatorType());"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Neither left or right is null\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Return convention must be \" + FAIL_ON_NULL + \", but is \" + returnConvention);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Return convention must be \" + FAIL_ON_NULL + \", but is \" + returnConvention);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeSignature.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(format, args));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeSignatureParameter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"ParameterKind is [%s] but expected [%s]\", kind, expectedParameterKind));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/TypeUtils.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "errorMsg"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, errorMsg);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/UuidType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Expected entry size to be exactly \" + INT128_BYTES + \" but was \" + length);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/UuidType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Expected value to be exactly %d bytes but was %d\", INT128_BYTES, uuid.length()));"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Varchars.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"type must be the instance of VarcharType\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Varchars.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Max length must be greater or equal than zero\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Varchars.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"length must be greater than or equal to zero\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Varchars.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"invalid offset/length\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/Varchars.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"codePointsCount must be greater than or equal to zero\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/VarcharType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid VARCHAR length \" + length);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/VarcharType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid VARCHAR length \" + length);"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/VarcharType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Cannot get size of unbounded VARCHAR.\");"
    },
    {
        "file_path": "core/trino-spi/src/main/java/io/trino/spi/type/VarcharType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Character count exceeds length limit %s: %s\", length, sliceRepresentation(slice)));"
    },
    {
        "file_path": "core/trino-spi/src/test/java/io/trino/spi/block/ColumnarTestUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(expectedValue.getClass().getName());"
    },
    {
        "file_path": "core/trino-spi/src/test/java/io/trino/spi/block/TestBlockRetainedSizeBreakdown.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/test/java/io/trino/spi/block/TestingBlockEncodingSerde.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown type \" + id);"
    },
    {
        "file_path": "core/trino-spi/src/test/java/io/trino/spi/block/TestingSession.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unknown session property {}",
        "error_message_variables": [
            "name"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, \"Unknown session property \" + name);"
    },
    {
        "file_path": "core/trino-spi/src/test/java/io/trino/spi/block/TestLazyBlock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected loaded block type: \" + loadedBlock.getClass().getSimpleName());"
    },
    {
        "file_path": "core/trino-spi/src/test/java/io/trino/spi/function/TestScalarFunctionAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/test/java/io/trino/spi/function/TestScalarFunctionAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported argument convention: \" + argumentConvention);"
    },
    {
        "file_path": "core/trino-spi/src/test/java/io/trino/spi/function/TestScalarFunctionAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported argument convention: \" + argumentConvention);"
    },
    {
        "file_path": "core/trino-spi/src/test/java/io/trino/spi/function/TestScalarFunctionAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported argument type: \" + argumentType);"
    },
    {
        "file_path": "core/trino-spi/src/test/java/io/trino/spi/testing/InterfaceTestUtils.java",
        "error_code": "format(\"Invocation of %s has failed\", actualMethod)",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(format(\"Invocation of %s has failed\", actualMethod), e);"
    },
    {
        "file_path": "core/trino-spi/src/test/java/io/trino/spi/testing/InterfaceWithPrivateMethod.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"bar not implemented\");"
    },
    {
        "file_path": "core/trino-spi/src/test/java/io/trino/spi/type/TestingTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TypeNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TypeNotFoundException(signature);"
    },
    {
        "file_path": "core/trino-spi/src/test/java/io/trino/spi/type/TestingTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-spi/src/test/java/io/trino/spi/type/TestingTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Type not found: \" + id);"
    },
    {
        "file_path": "core/trino-spi/src/test/java/io/trino/spi/type/TestLongDecimalType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "core/trino-spi/src/test/java/io/trino/spi/type/TestTypeOperators.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException();"
    },
    {
        "file_path": "core/trino-web-ui/src/main/java/io/trino/web/ui/WebUiResources.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotFoundException();"
    },
    {
        "file_path": "core/trino-web-ui/src/main/java/io/trino/web/ui/WebUiResources.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotFoundException();"
    },
    {
        "file_path": "lib/trino-array/src/main/java/io/trino/array/ReferenceCountMap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Unsupported type for %s\", key));"
    },
    {
        "file_path": "lib/trino-array/src/test/java/io/trino/array/BenchmarkReferenceCountMap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-array/src/test/java/io/trino/array/BenchmarkReferenceCountMap.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-cache/src/main/java/io/trino/cache/CacheUtils.java",
        "error_code": "Unexpected checked exception from cache load",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Unexpected checked exception from cache load\", e);"
    },
    {
        "file_path": "lib/trino-cache/src/main/java/io/trino/cache/EmptyCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InvalidCacheLoadException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidCacheLoadException(\"loadAll failed to return a value for \" + key);"
    },
    {
        "file_path": "lib/trino-cache/src/main/java/io/trino/cache/EmptyCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedExecutionException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedExecutionException(e);"
    },
    {
        "file_path": "lib/trino-cache/src/main/java/io/trino/cache/EmptyCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ExecutionException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ExecutionException(e);"
    },
    {
        "file_path": "lib/trino-cache/src/main/java/io/trino/cache/EmptyCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedExecutionException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedExecutionException(e);"
    },
    {
        "file_path": "lib/trino-cache/src/main/java/io/trino/cache/EmptyCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ExecutionException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ExecutionException(e);"
    },
    {
        "file_path": "lib/trino-cache/src/main/java/io/trino/cache/EvictableCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-cache/src/main/java/io/trino/cache/EvictableCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"The operation is not supported, as in inherently races with cache invalidation\");"
    },
    {
        "file_path": "lib/trino-cache/src/main/java/io/trino/cache/EvictableCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"The operation is not supported, as in inherently races with cache invalidation\");"
    },
    {
        "file_path": "lib/trino-cache/src/main/java/io/trino/cache/EvictableCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"The operation is not supported, as in inherently races with cache invalidation\");"
    },
    {
        "file_path": "lib/trino-cache/src/main/java/io/trino/cache/EvictableCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"The operation is not supported, as in inherently races with cache invalidation. Use get(key, callable) instead.\");"
    },
    {
        "file_path": "lib/trino-cache/src/main/java/io/trino/cache/EvictableCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"The operation is not supported, as in inherently races with cache invalidation. Use get(key, callable) instead.\");"
    },
    {
        "file_path": "lib/trino-cache/src/main/java/io/trino/cache/EvictableCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-cache/src/main/java/io/trino/cache/EvictableCache.java",
        "error_code": "LoadingCache.getAll() is not supported by EvictableCache when CacheLoader.loadAll is not implemented",
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"LoadingCache.getAll() is not supported by EvictableCache when CacheLoader.loadAll is not implemented\", e);"
    },
    {
        "file_path": "lib/trino-cache/src/main/java/io/trino/cache/EvictableCacheBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unbounded cache is not supported\");"
    },
    {
        "file_path": "lib/trino-cache/src/main/java/io/trino/cache/EvictableCacheBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-cache/src/test/java/io/trino/cache/BenchmarkEvictableCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-cache/src/test/java/io/trino/cache/BenchmarkEvictableCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-cache/src/test/java/io/trino/cache/CacheStatsAssertions.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-cache/src/test/java/io/trino/cache/MoreFutures.java",
        "error_code": "interrupted",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"interrupted\", e);"
    },
    {
        "file_path": "lib/trino-cache/src/test/java/io/trino/cache/MoreFutures.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(cause);"
    },
    {
        "file_path": "lib/trino-cache/src/test/java/io/trino/cache/TestEmptyCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-cache/src/test/java/io/trino/cache/TestEmptyCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"first attempt is poised to fail\");"
    },
    {
        "file_path": "lib/trino-cache/src/test/java/io/trino/cache/TestEvictableCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-cache/src/test/java/io/trino/cache/TestEvictableCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-cache/src/test/java/io/trino/cache/TestEvictableCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"first attempt is poised to fail\");"
    },
    {
        "file_path": "lib/trino-cache/src/test/java/io/trino/cache/TestEvictableCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-cache/src/test/java/io/trino/cache/TestEvictableLoadingCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-cache/src/test/java/io/trino/cache/TestEvictableLoadingCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/FileIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NoSuchElementException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NoSuchElementException();"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/Location.java",
        "error_code": "Invalid port in file system location: \" + location",
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid port in file system location: \" + location, e);"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/TrinoFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Server side encryption is not supported\");"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/TrinoFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Server side encryption is not supported\");"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/TrinoFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Server side encryption is not supported\");"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/TrinoFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Server side encryption is not supported\");"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/TrinoFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Pre-signed URIs are not supported by \" + getClass().getSimpleName());"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/TrinoFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Encrypted pre-signed URIs are not supported by \" + getClass().getSimpleName());"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/TrinoOutputFile.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"createExclusive not supported by \" + getClass());"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/cache/CacheFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalFileIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Location is a file: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalFileIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"entry is not inside of filesystem root\");"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Location is not a directory: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Source does not exist: \" + source);"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Source is not a file: \" + source);"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalFileSystem.java",
        "error_code": "File rename from %s to %s failed: %s\".formatted(source, target, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"File rename from %s to %s failed: %s\".formatted(source, target, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalFileSystem.java",
        "error_code": "Failed to create directory: \" + location",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Failed to create directory: \" + location, e);"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Source does not exist: \" + source);"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Source is not a directory: \" + source);"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalFileSystem.java",
        "error_code": "Directory rename from %s to %s failed: %s\".formatted(source, target, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Directory rename from %s to %s failed: %s\".formatted(source, target, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Location is a file: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalInput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Negative seek offset\");"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalInput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "EOFException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new EOFException(\"Cannot read at %s. File size is %s: %s\".formatted(position, file.length(), location));"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalInput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Output stream closed: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Negative seek offset\");"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Cannot seek to %s. File size is %s: %s\".formatted(position, fileLength, location));"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Skip returned a negative size\");"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "EOFException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new EOFException();"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Seek to %s failed. Current position is %s: %s\".formatted(position, this.position, location));"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Output stream closed: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalOutputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Output stream closed: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/local/LocalUtils.java",
        "error_code": "exception.getMessage() + \": \" + location",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "exception"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(exception.getMessage() + \": \" + location, exception);"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/memory/MemoryFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "FileAlreadyExistsException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new FileAlreadyExistsException(location.toString());"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/memory/MemoryFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"File rename from %s to %s failed: Source does not exist\".formatted(source, target));"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/memory/MemoryFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"File rename from %s to %s failed: Target already exists\".formatted(source, target));"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/memory/MemoryFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Memory file system does not support directory renames\");"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/memory/MemoryFileSystemCache.java",
        "error_code": "cause.getMessage() + \": \" + location",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "cause"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(cause.getMessage() + \": \" + location, cause);"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/memory/MemoryInput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Negative seek offset\");"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/memory/MemoryInput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "EOFException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new EOFException(\"Cannot read %s bytes at %s. File size is %s: %s\".formatted(position, bufferLength, data.length(), location));"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/memory/MemoryInput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Output stream closed: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/memory/MemoryInputFile.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "FileNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new FileNotFoundException(toString());"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/memory/MemoryInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Negative seek offset\");"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/memory/MemoryInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Cannot seek to %s. File size is %s: %s\".formatted(position, length, location));"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/memory/MemoryInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Output stream closed: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/memory/MemoryOutputFile.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "FileAlreadyExistsException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new FileAlreadyExistsException(toString());"
    },
    {
        "file_path": "lib/trino-filesystem/src/main/java/io/trino/filesystem/memory/MemoryOutputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Output stream closed: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem/src/test/java/io/trino/filesystem/AbstractTestTrinoFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"File not created\");"
    },
    {
        "file_path": "lib/trino-filesystem/src/test/java/io/trino/filesystem/AbstractTestTrinoFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-filesystem/src/test/java/io/trino/filesystem/AbstractTestTrinoFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-filesystem/src/test/java/io/trino/filesystem/AbstractTestTrinoFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-filesystem/src/test/java/io/trino/filesystem/AbstractTestTrinoFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-filesystem/src/test/java/io/trino/filesystem/local/TestLocalFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystem.java",
        "error_code": "Error deleteFile %s\".formatted(location)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error deleteFile %s\".formatted(location), e);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"delete directory cannot be called on a file %s\".formatted(location));"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystem.java",
        "error_code": "Error deleteDirectory %s\".formatted(location)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error deleteDirectory %s\".formatted(location), e);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystem.java",
        "error_code": "Error renameFile from %s to %s\".formatted(source, target)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error renameFile from %s to %s\".formatted(source, target), e);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Location is not a directory: %s\".formatted(location));"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystem.java",
        "error_code": "Error listFiles %s\".formatted(location)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error listFiles %s\".formatted(location), e);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystem.java",
        "error_code": "Error directoryExists %s\".formatted(location)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error directoryExists %s\".formatted(location), e);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystem.java",
        "error_code": "Error createDirectory %s\".formatted(location)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error createDirectory %s\".formatted(location), e);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystem.java",
        "error_code": "Error renameDirectory from %s to %s\".formatted(source, target)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error renameDirectory from %s to %s\".formatted(source, target), e);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Cannot list directories for a file %s\".formatted(location));"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystem.java",
        "error_code": "Error listDirectories %s\".formatted(location)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error listDirectories %s\".formatted(location), e);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Illegal operation on %s\".formatted(location));"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Illegal operation on %s\".formatted(location));"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystemInput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Input stream closed: \" + this);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystemInputFile.java",
        "error_code": "Error newInput() file: %s\".formatted(location)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error newInput() file: %s\".formatted(location), e);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystemInputFile.java",
        "error_code": "Error newStream() file: %s\".formatted(location)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error newStream() file: %s\".formatted(location), e);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystemInputFile.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "FileNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new FileNotFoundException(\"File does not exist: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystemInputFile.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "FileNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new FileNotFoundException(\"File does not exist: %s\".formatted(location));"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystemInputFile.java",
        "error_code": "Get status for file %s failed: %s\".formatted(location, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Get status for file %s failed: %s\".formatted(location, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystemInputFile.java",
        "error_code": "fail to check file existence",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"fail to check file existence\", e);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystemOutputFile.java",
        "error_code": "Error createOrOverwrite %s\".formatted(location)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error createOrOverwrite %s\".formatted(location), e);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystemOutputFile.java",
        "error_code": "Error create %s\".formatted(location)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error create %s\".formatted(location), e);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystemOutputFile.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Output file %s outside of root is not allowed\".formatted(location));"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystemOutputFile.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "FileAlreadyExistsException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new FileAlreadyExistsException(\"File %s already exists\".formatted(location));"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioFileSystemOutputFile.java",
        "error_code": "Error create %s\".formatted(location)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error create %s\".formatted(location), e);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioTrinoInputStream.java",
        "error_code": "Get position for file %s failed: %s\".formatted(location, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Get position for file %s failed: %s\".formatted(location, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioTrinoInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Negative seek offset\");"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioTrinoInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Cannot seek to %s. File size is %s: %s\".formatted(position, fileStatus.getLength(), location));"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioTrinoInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Cannot seek to %s: %s\".formatted(position, location));"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioTrinoInputStream.java",
        "error_code": "Skipping %s bytes of file %s failed: %s\".formatted(n, location, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Skipping %s bytes of file %s failed: %s\".formatted(n, location, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioTrinoInputStream.java",
        "error_code": "Read of file %s failed: %s\".formatted(location, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Read of file %s failed: %s\".formatted(location, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioTrinoInputStream.java",
        "error_code": "Read of file %s failed: %s\".formatted(location, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Read of file %s failed: %s\".formatted(location, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioTrinoInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Input stream closed: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioTrinoOutputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Output stream for %s closed: \".formatted(location));"
    },
    {
        "file_path": "lib/trino-filesystem-alluxio/src/test/java/io/trino/filesystem/alluxio/TestAlluxioFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"Location is not a directory: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"Cannot rename across storage accounts\");"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"Cannot rename across storage account containers\");"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"Rename file from %s to %s, source is a directory\".formatted(source, target));"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": "Rename file from %s to %s failed\".formatted(source, target)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Rename file from %s to %s failed\".formatted(source, target), e);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"Location is not a directory: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"Location is not a directory: \" + azureLocation);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"Cannot rename across storage accounts\");"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"Cannot rename across storage account containers\");"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"Azure non-hierarchical does not support directory renames\");"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"Cannot rename %s to %s\".formatted(source, target));"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"Source directory does not exist: \" + source);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"Source is not a directory: \" + source);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": "Rename directory from %s to %s failed\".formatted(source, target)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Rename directory from %s to %s failed\".formatted(source, target), e);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException(\"Unsupported azure auth: \" + azureAuth);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException(\"Unsupported azure auth: \" + azureAuth);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": "Failed to generate pre-signed URI",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Failed to generate pre-signed URI\", e);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": "Failed to generate pre-signed URI",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Failed to generate pre-signed URI\", e);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"Location is not a directory: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": "Checking whether hierarchical namespace is enabled for the location %s failed\".formatted(location)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Checking whether hierarchical namespace is enabled for the location %s failed\".formatted(location), e);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Location does not match configured Azure endpoint: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException();"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureInput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Negative seek offset\");"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureInput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Cannot read at %s. File size is %s: %s\".formatted(position, fileSize, location));"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureInput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "EOFException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new EOFException(\"End of file reached before reading fully: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureInput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Output stream closed: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Negative seek offset\");"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Cannot seek to %s. File size is %s: %s\".formatted(newPosition, fileSize, location));"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "EOFException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new EOFException(\"Unable to skip %s bytes (position=%s, fileSize=%s): %s\".formatted(n, nextPosition, fileSize, location));"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Output stream closed: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureLocation.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(String.format(INVALID_ABFS_LOCATION_MESSAGE, location));"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureOutputFile.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "FileAlreadyExistsException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new FileAlreadyExistsException(location.toString());"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureOutputFile.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "FileNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new FileNotFoundException(location.toString());"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureOutputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Output stream closed: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureOutputStream.java",
        "error_code": "Error closing file: \" + location",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error closing file: \" + location, e);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureUtils.java",
        "error_code": "Azure service error %s file: %s\".formatted(action, location)",
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "{}",
        "error_message_variables": [
            "exception"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"Azure service error %s file: %s\".formatted(action, location), exception);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureUtils.java",
        "error_code": "Error %s file: %s\".formatted(action, location)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "exception"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error %s file: %s\".formatted(action, location), exception);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/main/java/io/trino/filesystem/azure/AzureUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-filesystem-azure/src/test/java/io/trino/filesystem/azure/AbstractTestAzureFileSystem.java",
        "error_code": "Failed to check whether hierarchical namespaces is enabled for the storage account %s and container %s\".formatted(account, containerName)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Failed to check whether hierarchical namespaces is enabled for the storage account %s and container %s\".formatted(account, containerName), e);"
    },
    {
        "file_path": "lib/trino-filesystem-cache-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioInput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Negative seek offset\");"
    },
    {
        "file_path": "lib/trino-filesystem-cache-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioInput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "EOFException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new EOFException(\"Read %s of %s requested bytes: %s\".formatted(bytesRead, length, inputFile.location()));"
    },
    {
        "file_path": "lib/trino-filesystem-cache-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioInput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Stream closed: \" + inputFile.location());"
    },
    {
        "file_path": "lib/trino-filesystem-cache-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Output stream closed: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem-cache-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(format(\"%d bytes read\", n));"
    },
    {
        "file_path": "lib/trino-filesystem-cache-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Unexpected end of stream\");"
    },
    {
        "file_path": "lib/trino-filesystem-cache-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "EOFException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new EOFException(\"Unable to skip %s bytes (position=%s, fileSize=%s): %s\".formatted(n, this.position, fileLength, location));"
    },
    {
        "file_path": "lib/trino-filesystem-cache-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "EOFException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new EOFException(\"Unable to skip %s bytes (position=%s, fileSize=%s): %s\".formatted(n, this.position, fileLength, location));"
    },
    {
        "file_path": "lib/trino-filesystem-cache-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Negative seek offset\");"
    },
    {
        "file_path": "lib/trino-filesystem-cache-alluxio/src/main/java/io/trino/filesystem/alluxio/AlluxioInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Cannot seek to %s. File size is %s: %s\".formatted(position, fileLength, location));"
    },
    {
        "file_path": "lib/trino-filesystem-cache-alluxio/src/test/java/io/trino/filesystem/alluxio/TestAlluxioCacheFileSystemAccessOperations.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unrecognized span \" + span.getName() + \" [\" + span.getAttributes() + \"]\");"
    },
    {
        "file_path": "lib/trino-filesystem-cache-alluxio/src/test/java/io/trino/filesystem/alluxio/TestAlluxioCacheFileSystemAccessOperations.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unrecognized span  \" + span.getName() + \" [\" + span.getAttributes() + \"]\");"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"GCS does not support renames\");"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"GCS does not support directory renames\");"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsFileSystem.java",
        "error_code": "Error creating URI for location: \" + location",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error creating URI for location: \" + location, e);"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsInput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Negative seek offset\");"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsInput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "EOFException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new EOFException(\"End of file reached before reading fully: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsInput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Input stream closed: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Negative seek offset\");"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Cannot seek to %s. File size is %s: %s\".formatted(newPosition, fileSize, location));"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsInputStream.java",
        "error_code": "Error reading file: \" + location",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error reading file: \" + location, e);"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsInputStream.java",
        "error_code": "Error reading file: \" + location",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error reading file: \" + location, e);"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "EOFException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new EOFException(\"Unable to skip %s bytes (position=%s, fileSize=%s): %s\".formatted(n, nextPosition, fileSize, location));"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Output stream closed: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsOutputFile.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "FileAlreadyExistsException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new FileAlreadyExistsException(location.toString());"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsOutputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Unexpected partial write (written=%s, remaining=%s)\".formatted(bytesWritten, buffer.remaining()));"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsOutputStream.java",
        "error_code": "Error writing file: \" + location",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error writing file: \" + location, e);"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsOutputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Output stream closed: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsOutputStream.java",
        "error_code": "Error writing file: \" + location",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error writing file: \" + location, e);"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsOutputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "FileAlreadyExistsException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new FileAlreadyExistsException(location.toString());"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsOutputStream.java",
        "error_code": "Error closing file: \" + location",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error closing file: \" + location, e);"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsStorageFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsStorageFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsUtils.java",
        "error_code": "GCS service error %s: %s\".formatted(action, location)",
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "{}",
        "error_message_variables": [
            "exception"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"GCS service error %s: %s\".formatted(action, location), exception);"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsUtils.java",
        "error_code": "Error %s: %s\".formatted(action, location)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "exception"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error %s: %s\".formatted(action, location), exception);"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsUtils.java",
        "error_code": "GCS service error %s: %s\".formatted(action, locations)",
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "{}",
        "error_message_variables": [
            "exception"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"GCS service error %s: %s\".formatted(action, locations), exception);"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsUtils.java",
        "error_code": "Error %s: %s\".formatted(action, locations)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "exception"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error %s: %s\".formatted(action, locations), exception);"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Cannot read at %s. File size is %s: %s\".formatted(position, fileSize, location));"
    },
    {
        "file_path": "lib/trino-filesystem-gcs/src/main/java/io/trino/filesystem/gcs/GcsUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-filesystem-manager/src/main/java/io/trino/filesystem/manager/HdfsFileSystemLoader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-filesystem-manager/src/main/java/io/trino/filesystem/manager/HdfsFileSystemLoader.java",
        "error_code": "Failed to configure HDFS:\\n%s\\n%s\\n%s\".formatted(\"<\".repeat(70), e.getCause(), \">\".repeat(70))",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Failed to configure HDFS:\\n%s\\n%s\\n%s\".formatted(\"<\".repeat(70), e.getCause(), \">\".repeat(70)), e);"
    },
    {
        "file_path": "lib/trino-filesystem-manager/src/main/java/io/trino/filesystem/manager/HdfsFileSystemLoader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-filesystem-manager/src/main/java/io/trino/filesystem/manager/HdfsFileSystemLoader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-filesystem-manager/src/main/java/io/trino/filesystem/manager/HdfsFileSystemLoader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-filesystem-manager/src/main/java/io/trino/filesystem/manager/HdfsFileSystemLoader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-filesystem-manager/src/main/java/io/trino/filesystem/manager/HdfsFileSystemLoader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3FileIterator.java",
        "error_code": "Failed to list location: \" + location",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Failed to list location: \" + location, e);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3FileIterator.java",
        "error_code": "Failed to list location: \" + location",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Failed to list location: \" + location, e);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3FileSystem.java",
        "error_code": "Failed to delete file: \" + location",
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"Failed to delete file: \" + location, e);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3FileSystem.java",
        "error_code": "Error while batch deleting files",
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"Error while batch deleting files\", e);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Failed to delete one or more files: \" + failures);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"S3 does not support renames\");"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3FileSystem.java",
        "error_code": "Failed to list location: \" + location",
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"Failed to list location: \" + location, e);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"S3 does not support directory renames\");"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3FileSystem.java",
        "error_code": "Failed to list location: \" + location",
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"Failed to list location: \" + location, e);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3FileSystem.java",
        "error_code": "Failed to generate pre-signed URI",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Failed to generate pre-signed URI\", e);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3FileSystem.java",
        "error_code": "Failed to convert pre-signed URI to URI",
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"Failed to convert pre-signed URI to URI\", e);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3FileSystemModule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "VerifyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new VerifyException(\"No security mapping source configured\");"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3Input.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Negative seek offset\");"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3Input.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "EOFException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new EOFException(\"Read %s of %s requested bytes: %s\".formatted(n, length, location));"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3Input.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Input closed: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3Input.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InterruptedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InterruptedIOException();"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3Input.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "FileNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new FileNotFoundException(location.toString());"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3Input.java",
        "error_code": "Failed to open S3 file: \" + location",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Failed to open S3 file: \" + location, e);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3InputFile.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "FileNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new FileNotFoundException(location.toString());"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3InputFile.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "FileNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new FileNotFoundException(location.toString());"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3InputFile.java",
        "error_code": "S3 HEAD request failed for file: \" + location",
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"S3 HEAD request failed for file: \" + location, e);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3InputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Negative seek offset\");"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3InputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Cannot seek to %s. File size is %s: %s\".formatted(position, length, location));"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3InputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "EOFException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new EOFException(\"Unable to skip %s bytes (position=%s, fileSize=%s): %s\".formatted(n, nextReadPosition, length, location));"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3InputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Input stream closed: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3InputStream.java",
        "error_code": "Failed to open S3 file: \" + location",
        "error_code_name": null,
        "error_class_name": "TrinoFileSystemException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoFileSystemException(\"Failed to open S3 file: \" + location, e);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3InputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InterruptedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InterruptedIOException();"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3InputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InterruptedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InterruptedIOException();"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3InputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InterruptedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InterruptedIOException();"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3InputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InterruptedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InterruptedIOException();"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3OutputFile.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"createExclusive not supported by \" + getClass());"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3OutputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(e);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3OutputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(e);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3OutputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Output stream closed: \" + location);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3OutputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "FileAlreadyExistsException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new FileAlreadyExistsException(location.toString());"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3OutputStream.java",
        "error_code": "Put failed for bucket [%s] key [%s]: %s\".formatted(location.bucket(), location.key(), e)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Put failed for bucket [%s] key [%s]: %s\".formatted(location.bucket(), location.key(), e), e);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3OutputStream.java",
        "error_code": "Put failed for bucket [%s] key [%s]: %s\".formatted(location.bucket(), location.key(), e)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Put failed for bucket [%s] key [%s]: %s\".formatted(location.bucket(), location.key(), e), e);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3OutputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InterruptedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InterruptedIOException();"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3OutputStream.java",
        "error_code": "Streaming upload failed",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Streaming upload failed\", e);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3SecurityMappingProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(\"No S3 role selected and mapping has no default role\");"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3SecurityMappingProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(\"Selected S3 role is not allowed: \" + selected);"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3SecurityMappingProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(\"Selected KMS Key ID is not allowed\");"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3SecurityMappingsUriSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Request to '%s' returned unexpected status code: %s\".formatted(configUri, status));"
    },
    {
        "file_path": "lib/trino-filesystem-s3/src/main/java/io/trino/filesystem/s3/S3SseCUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-geospatial-toolkit/src/main/java/io/trino/geospatial/GeometryType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Invalid Geometry Type: \" + type);"
    },
    {
        "file_path": "lib/trino-geospatial-toolkit/src/main/java/io/trino/geospatial/GeometryUtils.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid GeoJSON: {}",
        "error_message_variables": [
            "e.getMessage()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Invalid GeoJSON: \" + e.getMessage(), e);"
    },
    {
        "file_path": "lib/trino-geospatial-toolkit/src/main/java/io/trino/geospatial/serde/GeometrySerde.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unexpected type: \" + type);"
    },
    {
        "file_path": "lib/trino-geospatial-toolkit/src/main/java/io/trino/geospatial/serde/GeometrySerde.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected geometry type: \" + type);"
    },
    {
        "file_path": "lib/trino-geospatial-toolkit/src/main/java/io/trino/geospatial/serde/GeometrySerializationType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Invalid type code: \" + code);"
    },
    {
        "file_path": "lib/trino-geospatial-toolkit/src/main/java/io/trino/geospatial/serde/JtsGeometrySerde.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported geometry type : \" + geometry.getGeometryType());"
    },
    {
        "file_path": "lib/trino-geospatial-toolkit/src/test/java/io/trino/geospatial/serde/BenchmarkGeometrySerializationData.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-geospatial-toolkit/src/test/java/io/trino/geospatial/serde/BenchmarkJtsGeometrySerde.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-geospatial-toolkit/src/test/java/io/trino/geospatial/serde/TestGeometrySerialization.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HadoopPaths.java",
        "error_code": "Failed to convert location to URI: \" + location",
        "error_code_name": null,
        "error_class_name": "VerifyException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new VerifyException(\"Failed to convert location to URI: \" + location, e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Listing location is a file, not a directory: \" + listingLocation);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Location is not a file\");"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"delete failed\");"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": "Delete file %s failed: %s\".formatted(location, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Delete file %s failed: %s\".formatted(location, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"delete failed\");"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Location is not a directory\");"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"delete failed\");"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": "Delete directory %s failed %s\".formatted(location, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Delete directory %s failed %s\".formatted(location, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Source location is not a file\");"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Target location already exists\");"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"rename failed\");"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": "File rename from %s to %s failed: %s\".formatted(source, target, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"File rename from %s to %s failed: %s\".formatted(source, target, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": "List files for %s failed: %s\".formatted(location, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"List files for %s failed: %s\".formatted(location, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": "Directory exists check for %s failed: %s\".formatted(location, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Directory exists check for %s failed: %s\".formatted(location, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"mkdirs failed\");"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": "Create directory %s failed: %s\".formatted(location, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Create directory %s failed: %s\".formatted(location, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Non-hierarchical file system '%s' does not support directory renames\".formatted(fileSystem.getScheme()));"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Source location is not a directory\");"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Target location already exists\");"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"rename failed\");"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": "Directory rename from %s to %s failed: %s\".formatted(source, target, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Directory rename from %s to %s failed: %s\".formatted(source, target, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Location is a file, not a directory: \" + location);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": "List directories for %s failed: %s\".formatted(location, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"List directories for %s failed: %s\".formatted(location, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"mkdirs failed for \" + temporaryPath);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsFileSystem.java",
        "error_code": "Create temporary directory for %s failed: %s\".formatted(targetLocation, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Create temporary directory for %s failed: %s\".formatted(targetLocation, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsInput.java",
        "error_code": "Read exactly %s bytes at position %s of file %s failed: %s\".formatted(bufferLength, position, toString(), e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Read exactly %s bytes at position %s of file %s failed: %s\".formatted(bufferLength, position, toString(), e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsInput.java",
        "error_code": "Read %s tail bytes of file %s failed: %s\".formatted(bufferLength, toString(), e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Read %s tail bytes of file %s failed: %s\".formatted(bufferLength, toString(), e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsInput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Output stream closed: \" + this);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsInputFile.java",
        "error_code": "Open file %s failed: %s\".formatted(location, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Open file %s failed: %s\".formatted(location, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsInputFile.java",
        "error_code": "Get status for file %s failed: %s\" .formatted(location, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Get status for file %s failed: %s\" .formatted(location, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsOutputFile.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"createExclusive not supported for \" + fileSystem);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsOutputFile.java",
        "error_code": "Creation of file %s failed: %s\".formatted(file, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Creation of file %s failed: %s\".formatted(file, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsOutputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Output stream closed: \" + location);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsTrinoInputStream.java",
        "error_code": "Get available for file %s failed: %s\".formatted(location, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Get available for file %s failed: %s\".formatted(location, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsTrinoInputStream.java",
        "error_code": "Get position for file %s failed: %s\".formatted(location, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Get position for file %s failed: %s\".formatted(location, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsTrinoInputStream.java",
        "error_code": "Seek to position %s for file %s failed: %s\".formatted(position, location, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Seek to position %s for file %s failed: %s\".formatted(position, location, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsTrinoInputStream.java",
        "error_code": "Read of file %s failed: %s\".formatted(location, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Read of file %s failed: %s\".formatted(location, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsTrinoInputStream.java",
        "error_code": "Read of file %s failed: %s\".formatted(location, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Read of file %s failed: %s\".formatted(location, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsTrinoInputStream.java",
        "error_code": "Skipping %s bytes of file %s failed: %s\".formatted(n, location, e.getMessage())",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Skipping %s bytes of file %s failed: %s\".formatted(n, location, e.getMessage()), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/filesystem/hdfs/HdfsTrinoInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Output stream closed: \" + location);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/FSDataInputStreamTail.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(format(\"Incorrect file size (%s) for file (end of stream not reached): %s\", reportedSize, path));"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/TrinoFileSystemCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"No FileSystem for scheme: \" + uri.getScheme());"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/TrinoFileSystemCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/TrinoFileSystemCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported authentication method: \" + authenticationMethod);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/TrinoFileSystemCache.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported authentication method: \" + authenticationMethod);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/authentication/DirectHdfsAuthentication.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InterruptedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InterruptedIOException();"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/authentication/ImpersonatingHdfsAuthentication.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InterruptedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InterruptedIOException();"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/authentication/SimpleHadoopAuthentication.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/cos/ServiceConfig.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/gcs/GcsStorageFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/gcs/GoogleGcsConfigurationInitializer.java",
        "error_code": "Failed to create a temp file for the GCS JSON key",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Failed to create a temp file for the GCS JSON key\", e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/AwsCurrentRegionHolder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Failed to resolve current AWS region from EC2 metadata\");"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/FileBasedS3SecurityMappingsProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"configFile %s does not exist\", configFile.getAbsoluteFile()));"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/FileBasedS3SecurityMappingsProvider.java",
        "error_code": "Failed to read file: \" + configFile",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Failed to read file: \" + configFile, e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/HiveS3Module.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Unknown file system type: \" + type);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/HiveS3Module.java",
        "error_code": "EMR File System class not found: \" + EMR_FS_CLASS_NAME",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"EMR File System class not found: \" + EMR_FS_CLASS_NAME, e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/S3SecurityMappingConfigurationProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(\"No S3 role selected and mapping has no default role\");"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/S3SecurityMappingConfigurationProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(\"Selected S3 role is not allowed: \" + selected);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/S3SecurityMappingConfigurationProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(\"Selected KMS Key ID is not allowed\");"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": "Invalid uri: \" + uri",
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid uri: \" + uri, e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "FileNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new FileNotFoundException(\"File does not exist: \" + path);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "FileNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new FileNotFoundException(\"File does not exist: \" + path);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(format(\"%s header is not set on an encrypted object: %s\", UNENCRYPTED_CONTENT_LENGTH, path));"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Configured staging path is not a directory: \" + stagingDirectory);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"append\");"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": "Failed to delete paths with the prefix path \" + path",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Failed to delete paths with the prefix path \" + path, e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Directory \" + path + \" is not empty\");"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": "Exception while batch deleting paths: %s\".formatted(errors)",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Exception while batch deleting paths: %s\".formatted(errors), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": "Exception while batch deleting paths",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Exception while batch deleting paths\", e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": "bucketName",
        "error_code_name": null,
        "error_class_name": "UnrecoverableS3OperationException",
        "error_message_template": "{}",
        "error_message_variables": [
            "key"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UnrecoverableS3OperationException(bucketName, key, e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": "Signer class not found: \" + signerClass",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Signer class not found: \" + signerClass, e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Invalid encryption materials provider class: \" + instance.getClass().getName());"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": "Unable to load or create S3 encryption materials provider: \" + empClassName",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Unable to load or create S3 encryption materials provider: \" + empClassName, e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": "format(\"Error creating an instance of %s for URI %s\", providerClass, uri)",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(format(\"Error creating an instance of %s for URI %s\", providerClass, uri), e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": "bucket",
        "error_code_name": null,
        "error_class_name": "UnrecoverableS3OperationException",
        "error_message_template": "{}",
        "error_message_variables": [
            "key"
        ],
        "severity_level": "ERROR",
        "original_text": "case HTTP_FORBIDDEN, HTTP_BAD_REQUEST -> throw new UnrecoverableS3OperationException(bucket, key, e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": "bucket",
        "error_code_name": null,
        "error_class_name": "UnrecoverableS3OperationException",
        "error_message_template": "{}",
        "error_message_variables": [
            "key"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UnrecoverableS3OperationException(bucket, key, e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "EOFException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new EOFException(NEGATIVE_SEEK);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": "bucket",
        "error_code_name": null,
        "error_class_name": "UnrecoverableS3OperationException",
        "error_message_template": "{}",
        "error_message_variables": [
            "key"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UnrecoverableS3OperationException(bucket, key, e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "EOFException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new EOFException(CANNOT_SEEK_PAST_EOF);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": "bucket",
        "error_code_name": null,
        "error_class_name": "UnrecoverableS3OperationException",
        "error_message_template": "{}",
        "error_message_variables": [
            "key"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UnrecoverableS3OperationException(bucket, key, e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "EOFException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new EOFException(NEGATIVE_SEEK);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": "bucket",
        "error_code_name": null,
        "error_class_name": "UnrecoverableS3OperationException",
        "error_message_template": "{}",
        "error_message_variables": [
            "key"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UnrecoverableS3OperationException(bucket, key, e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": "bucket",
        "error_code_name": null,
        "error_class_name": "UnrecoverableS3OperationException",
        "error_message_template": "{}",
        "error_message_variables": [
            "key"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UnrecoverableS3OperationException(bucket, key, e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(STREAM_IS_CLOSED);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InterruptedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InterruptedIOException();"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InterruptedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InterruptedIOException();"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InterruptedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InterruptedIOException();"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": "Streaming upload failed",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Streaming upload failed\", e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/TrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unable to determine S3 bucket from URI.\");"
    },
    {
        "file_path": "lib/trino-hdfs/src/main/java/io/trino/hdfs/s3/UriBasedS3SecurityMappingsProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Request to '%s' returned unexpected status code: '%d'\", configUri, status));"
    },
    {
        "file_path": "lib/trino-hdfs/src/test/java/io/trino/filesystem/hdfs/TestHdfsFileSystemHdfs.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/test/java/io/trino/filesystem/hdfs/TestHdfsFileSystemLocal.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/test/java/io/trino/filesystem/hdfs/TestHdfsFileSystemS3Mock.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-hdfs/src/test/java/io/trino/hdfs/s3/TestTrinoS3FileSystem.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/DataOutputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NullPointerException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NullPointerException(\"outputStream is null\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/DataOutputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/DataOutputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/DataOutputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/DataOutputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/DistinctMapKeys.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/DistinctMapKeys.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "map key cannot be null or contain nulls",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"map key cannot be null or contain nulls\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/DistinctMapKeys.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"map keys cannot be null\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/DistinctMapKeys.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/HiveFormatUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NumberFormatException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NumberFormatException(format(\"Cannot convert '%s' to %s. Value too large.\", value, decimalType));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/HiveFormatUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NumberFormatException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NumberFormatException(format(\"Cannot convert '%s' to %s. Value is not a number.\", value, decimalType));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/ReadWriteUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Max length must be greater or equal than zero\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/TrinoDataInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "EOFException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new EOFException(\"End of stream\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/TrinoDataInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/TrinoDataInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/TrinoDataInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/TrinoDataInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/TrinoDataInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/TrinoDataInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/AvroFileReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"No more pages available from Avro file\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/AvroFileReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/AvroFileWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/AvroFileWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/AvroFileWriter.java",
        "error_code": "Error writing to avro file",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Error writing to avro file\", e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/AvroPageDataReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/AvroPageDataReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedAvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedAvroTypeException(new AvroTypeException(e));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/AvroPageDataReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedAvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedAvroTypeException(e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/AvroPagePositionDataWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IndexOutOfBoundsException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IndexOutOfBoundsException(\"Position %s not within page with position count %s\".formatted(position, page.getPositionCount()));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/AvroPagePositionDataWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Can not write null value for non-nullable schema\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/AvroPagePositionDataWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case NULL -> throw new AvroTypeException(\"No null support outside of union\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/AvroPagePositionDataWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Unable to make writer for schema with non simple nullable union %s\".formatted(schema));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/AvroPagePositionDataWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Schema and Trino Type mismatch between %s and %s\".formatted(schema, type));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/AvroPagePositionDataWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Unable to write Avro fixed with size %s from slice of length %s\".formatted(fixedSize, value.length()));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/AvroPagePositionDataWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Avro Maps must have String keys, invalid type: %s\".formatted(this.type.getKeyType()));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/AvroTypeUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Recursive Avro Schema not supported: \" + schema.getFullName());"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/BaseAvroTypeBlockHandlerImpls.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case NULL -> throw new UnsupportedOperationException(\"No null column type support\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/BaseAvroTypeBlockHandlerImpls.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Unable to read union with multiple non null types: \" + schema);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/BaseAvroTypeBlockHandlerImpls.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Unable to natively read into a non nullable union: \" + readingUnionReadAction.readSchema());"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/BaseAvroTypeBlockHandlerImpls.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Unable to natively read into a non nullable union: \" + writtenUnionReadAction.readSchema());"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/BaseAvroTypeBlockHandlerImpls.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case ReadErrorReadAction readErrorReadAction -> throw new AvroTypeException(\"Incompatible read and write schema returned with error:\\n \" + readErrorReadAction);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/BaseAvroTypeBlockHandlerImpls.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Unable to read avro String with size greater than %s. Found String size: %s\".formatted(MAX_ARRAY_SIZE, size));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/BaseAvroTypeBlockHandlerImpls.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Unable to read avro Bytes with size greater than %s. Found Bytes size: %s\".formatted(MAX_ARRAY_SIZE, size));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/HiveAvroTypeBlockHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(new AvroTypeException(\"Resolution action returned with error \" + action));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/HiveAvroTypeBlockHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Unable to read avro String with size greater than %s. Found String size: %s\".formatted(MAX_ARRAY_SIZE, size));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/HiveAvroTypeBlockHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Unable to read avro String with size greater than %s. Found String size: %s\".formatted(MAX_ARRAY_SIZE, size));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/HiveAvroTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Type provided for column [%s] is incompatible with type for schema: %s\".formatted(type, expectedType));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/HiveAvroTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Can't represent avro logical type %s with Trino Type %s\".formatted(validNativeAvroLogicalType.getLogicalType(), type));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/HiveAvroTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Unsupported Avro type for Hive Logical Type in schema \" + schema);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/HiveAvroTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Missing property maxLength in schema for Hive Type \" + nonNativeAvroLogicalType.getLogicalTypeName());"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/HiveAvroTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Unrecognized property type for \" + AvroHiveConstants.VARCHAR_AND_CHAR_LOGICAL_TYPE_LENGTH_PROP + \" in schema \" + schema);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/HiveAvroTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Property maxLength not convertible to Integer in Hive Logical type schema \" + schema);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeBlockHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unreachable unfiltered logical type\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeBlockHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unreachable unfiltered logical type\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeBlockHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unreachable unfiltered logical type\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeBlockHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unreachable unfiltered logical type\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeBlockHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unreachable unfiltered logical type\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeBlockHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unreachable unfiltered logical type\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeBlockHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unreachable unfiltered logical type\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeBlockHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unreachable unfiltered logical type\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeBlockHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Unable to read avro Bytes with size greater than %s. Found Bytes size: %s\".formatted(MAX_ARRAY_SIZE, size));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeBlockHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Unable to read avro String with size greater than %s. Found String size: %s\".formatted(MAX_ARRAY_SIZE, size));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalStateException(\"Unreachable unfiltered logical type\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Can't represent Avro logical type %s with Trino Type %s\".formatted(logicalType, type));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Can't represent Avro logical type %s with Trino Type %s\".formatted(logicalType, type));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Can't write out Avro logical time-millis from Trino Time Type with precision %s\".formatted(timeType.getPrecision()));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Can't represent Avro logical type %s with Trino Type %s\".formatted(logicalType, type));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Can't write out Avro logical time-millis from Trino Time Type with precision %s\".formatted(timeType.getPrecision()));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Can't represent Avro logical type %s with Trino Type %s\".formatted(logicalType, type));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Can't represent Avro logical type %s with Trino Type %s\".formatted(logicalType, type));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Can't represent Avro logical type %s with Trino Type %s\".formatted(logicalType, type));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ArithmeticException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ArithmeticException(\"Overflow\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ArithmeticException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ArithmeticException(\"Can't resize big endian bytes %s to size %s\".formatted(Arrays.toString(value), byteSize));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ArithmeticException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ArithmeticException(\"Big endian bytes size must be less than or equal to the total padded size\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/NativeLogicalTypesAvroTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ArithmeticException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ArithmeticException(\"Cannot pad empty array\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/RowBlockBuildingDecoder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Write and Read Schemas must be records when building a row block building decoder. Illegal action: \" + action);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/model/AvroLogicalType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported Logical Type %s and schema pairing %s\".formatted(logicalType.getName(), schema));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/model/AvroLogicalType.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported Logical Type %s and schema pairing %s\".formatted(logicalType.getName(), schema));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/model/AvroReadAction.java",
        "error_code": "Unable to encode to bytes for default value in field \" + field",
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "exception"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"Unable to encode to bytes for default value in field \" + field, exception);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/model/AvroReadAction.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Cannot promote type %s to long\".formatted(writerSchema.getType()));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/model/AvroReadAction.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Cannot promote type %s to float\".formatted(writerSchema.getType()));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/model/AvroReadAction.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Cannot promote type %s to double\".formatted(writerSchema.getType()));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/model/AvroReadAction.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case ENUM, ARRAY, MAP, RECORD, UNION -> throw new IllegalStateException(\"Underlying Avro Library change detected with action: \" + action);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/model/AvroReadAction.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unable to promote to String from type \" + action.writer.getType());"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/model/AvroReadAction.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unable to promote to Bytes from type \" + action.writer.getType());"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/model/AvroReadAction.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Promotion action not allowed for reader schema type \" + action.reader.getType());"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/model/AvroReadAction.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalStateException(\"Not possible to have container action type with non container reader schema \" + action.reader.getType());"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/model/AvroReadAction.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case SKIP -> throw new IllegalStateException(\"Skips recordReadAction\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/avro/model/AvroReadAction.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AvroTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AvroTypeException(\"No reader Enum value for writer Enum value \" + action.writer.getEnumSymbols().get(i));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/compression/BufferedOutputStreamSliceOutput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NullPointerException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NullPointerException(\"outputStream is null\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/compression/BufferedOutputStreamSliceOutput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"OutputStream cannot be reset\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/compression/BufferedOutputStreamSliceOutput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"OutputStream cannot be reset\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/compression/BufferedOutputStreamSliceOutput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/compression/BufferedOutputStreamSliceOutput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/compression/BufferedOutputStreamSliceOutput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/compression/BufferedOutputStreamSliceOutput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/compression/ValueDecompressor.java",
        "error_code": "Compressed stream is truncated",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Compressed stream is truncated\", e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/compression/ValueDecompressor.java",
        "error_code": "Compressed stream is truncated",
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Compressed stream is truncated\", e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/encodings/binary/BinaryColumnEncodingFactory.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "unsupported type: {}",
        "error_message_variables": [
            "type"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"unsupported type: \" + type);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/encodings/binary/BinaryEncoding.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"RCBinary encoder does not support empty VARBINARY values (HIVE-2483). Use ORC or Parquet format instead.\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/encodings/binary/MapEncoding.java",
        "error_code": "StandardErrorCode.GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Map must never contain null keys",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(StandardErrorCode.GENERIC_INTERNAL_ERROR, \"Map must never contain null keys\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/encodings/text/DoubleEncoding.java",
        "error_code": "e",
        "error_code_name": null,
        "error_class_name": "FileCorruptionException",
        "error_message_template": "Invalid double value",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new FileCorruptionException(e, \"Invalid double value\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/encodings/text/FloatEncoding.java",
        "error_code": "e",
        "error_code_name": null,
        "error_class_name": "FileCorruptionException",
        "error_message_template": "Invalid float value",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new FileCorruptionException(e, \"Invalid float value\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/encodings/text/LongEncoding.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NumberFormatException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NumberFormatException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/encodings/text/LongEncoding.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NumberFormatException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NumberFormatException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/encodings/text/LongEncoding.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NumberFormatException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NumberFormatException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/encodings/text/LongEncoding.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NumberFormatException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NumberFormatException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/encodings/text/LongEncoding.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NumberFormatException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NumberFormatException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/encodings/text/LongEncoding.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NumberFormatException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NumberFormatException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/encodings/text/MapEncoding.java",
        "error_code": "StandardErrorCode.GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Map must never contain null keys",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(StandardErrorCode.GENERIC_INTERNAL_ERROR, \"Map must never contain null keys\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/encodings/text/TextColumnEncodingFactory.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "unsupported type: {}",
        "error_message_variables": [
            "type"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"unsupported type: \" + type);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/encodings/text/TextColumnEncodingFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NotEnoughSeparatorsException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NotEnoughSeparatorsException(depth);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/LineBuffer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "EOFException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new EOFException(\"Input is too small\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/LineBuffer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Max line length exceeded: \" + newLength);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/csv/CsvConstants.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"%s must be 7-bit ASCII: %02x\".formatted(key, (short) c));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/csv/CsvDeserializerFactory.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "CSV not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"CSV not supported\", e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/json/JsonDeserializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported column type: \" + type);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/json/JsonDeserializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NumberFormatException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NumberFormatException(format(\"Cannot convert '%s' to %s. Value too large.\", value, decimalType));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/json/JsonDeserializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported map key type: \" + type);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/json/JsonSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported column type: \" + type);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/json/JsonSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported map key type: \" + type);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/JsonReader.java",
        "error_code": "End of input",
        "error_code_name": null,
        "error_class_name": "InvalidJsonException",
        "error_message_template": "{}",
        "error_message_variables": [
            "position"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidJsonException(\"End of input\", position, json);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/JsonReader.java",
        "error_code": "Field name is null literal",
        "error_code_name": null,
        "error_class_name": "InvalidJsonException",
        "error_message_template": "{}",
        "error_message_variables": [
            "position"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidJsonException(\"Field name is null literal\", position, json);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/JsonReader.java",
        "error_code": "message",
        "error_code_name": null,
        "error_class_name": "InvalidJsonException",
        "error_message_template": "{}",
        "error_message_variables": [
            "position"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidJsonException(message, position, json);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/JsonReader.java",
        "error_code": "Expected ':' after field \" + name",
        "error_code_name": null,
        "error_class_name": "InvalidJsonException",
        "error_message_template": "{}",
        "error_message_variables": [
            "position"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidJsonException(\"Expected ':' after field \" + name, position, json);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/JsonReader.java",
        "error_code": "Unterminated object",
        "error_code_name": null,
        "error_class_name": "InvalidJsonException",
        "error_message_template": "{}",
        "error_message_variables": [
            "position"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidJsonException(\"Unterminated object\", position, json);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/JsonReader.java",
        "error_code": "Unterminated array",
        "error_code_name": null,
        "error_class_name": "InvalidJsonException",
        "error_message_template": "{}",
        "error_message_variables": [
            "position"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidJsonException(\"Unterminated array\", position, json);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/JsonReader.java",
        "error_code": "Unterminated array",
        "error_code_name": null,
        "error_class_name": "InvalidJsonException",
        "error_message_template": "{}",
        "error_message_variables": [
            "position"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidJsonException(\"Unterminated array\", position, json);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/JsonReader.java",
        "error_code": "Unterminated escape sequence",
        "error_code_name": null,
        "error_class_name": "InvalidJsonException",
        "error_message_template": "{}",
        "error_message_variables": [
            "position"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidJsonException(\"Unterminated escape sequence\", position, json);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/JsonReader.java",
        "error_code": "Unterminated string",
        "error_code_name": null,
        "error_class_name": "InvalidJsonException",
        "error_message_template": "{}",
        "error_message_variables": [
            "position"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidJsonException(\"Unterminated string\", position, json);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/JsonReader.java",
        "error_code": "Unterminated escape sequence",
        "error_code_name": null,
        "error_class_name": "InvalidJsonException",
        "error_message_template": "{}",
        "error_message_variables": [
            "position"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidJsonException(\"Unterminated escape sequence\", position, json);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/JsonReader.java",
        "error_code": "Invalid escape sequence: \" + hex",
        "error_code_name": null,
        "error_class_name": "InvalidJsonException",
        "error_message_template": "{}",
        "error_message_variables": [
            "position"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidJsonException(\"Invalid escape sequence: \" + hex, position, json);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/JsonReader.java",
        "error_code": "Expected literal value",
        "error_code_name": null,
        "error_class_name": "InvalidJsonException",
        "error_message_template": "{}",
        "error_message_variables": [
            "position"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidJsonException(\"Expected literal value\", position, json);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/JsonReader.java",
        "error_code": "Unterminated c-style comment",
        "error_code_name": null,
        "error_class_name": "InvalidJsonException",
        "error_message_template": "{}",
        "error_message_variables": [
            "position"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidJsonException(\"Unterminated c-style comment\", position, json);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/JsonWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Field name must not be null\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/JsonWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Nesting problem\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/JsonWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Nesting problem\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/JsonWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported value type: \" + value.getClass().getSimpleName());"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/JsonWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Nesting problem\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/JsonWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Nesting problem: multiple top-level roots\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/JsonWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Nesting problem\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/JsonWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Nesting problem\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/OpenXJsonDeserializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported column type: \" + type);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/OpenXJsonDeserializer.java",
        "error_code": "Invalid timestamp",
        "error_code_name": null,
        "error_class_name": "DateTimeParseException",
        "error_message_template": "{}",
        "error_message_variables": [
            "value"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new DateTimeParseException(\"Invalid timestamp\", value, 0);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/OpenXJsonSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported column type: \" + column);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/OpenXJsonSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Unsupported map key type: \" + keyType);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/OpenXJsonSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"OpenX JsonSerDe can not write a null map key\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/openxjson/OpenXJsonSerializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported column type: \" + type);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/regex/RegexDeserializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedTypeException(column);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/regex/RegexDeserializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NumberFormatException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NumberFormatException(format(\"Cannot convert '%s' to %s. Value is not a number.\", value, decimalType));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/regex/RegexDeserializer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Cannot convert '%s' to %s. Value too large.\", value, decimalType));"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/sequence/SequenceFileReader.java",
        "error_code": "messageFormat",
        "error_code_name": null,
        "error_class_name": "FileCorruptionException",
        "error_message_template": "{}",
        "error_message_variables": [
            "args"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new FileCorruptionException(messageFormat, args);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/line/text/TextLineReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Current position only supported for uncompressed files\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/rcfile/RcFileReader.java",
        "error_code": "e",
        "error_code_name": null,
        "error_class_name": "FileCorruptionException",
        "error_message_template": "Validation failed",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new FileCorruptionException(e, \"Validation failed\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/rcfile/RcFileReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "FileCorruptionException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new FileCorruptionException(\"First column value length is negative\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/rcfile/ValidationHash.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/main/java/io/trino/hive/formats/rcfile/ValidationHash.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/FormatTestUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"unsupported type: \" + type);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/FormatTestUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"decimal precision larger than column precision\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/FormatTestUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported lazy type: \" + lazyObject.getClass().getSimpleName());"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/FormatTestUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported writable type: \" + writable.getClass().getSimpleName());"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/FormatTestUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported type: \" + type);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/FormatTestUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"unsupported type: \" + type);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/TestTrinoDataInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "EOFException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new EOFException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/avro/TestAvroBase.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/avro/TestAvroBase.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/avro/TestAvroPageDataReaderWithoutTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case RECORD, ENUM, ARRAY, MAP, UNION, FIXED, INT, BOOLEAN, NULL -> throw new IllegalStateException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/line/TestFooterAwareLineReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/line/TestFooterAwareLineReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/line/TestFooterAwareLineReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/line/openxjson/TestJsonReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported type: \" + value.getClass().getSimpleName());"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/line/openxjson/TestOpenxJsonFormat.java",
        "error_code": "testValue",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(testValue, e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/line/openxjson/TestOpenxJsonFormat.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/line/openxjson/TestOpenxJsonFormat.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/line/openxjson/TestOpenxJsonFormat.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/line/openxjson/TestOpenxJsonFormat.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/line/openxjson/TestOpenxJsonFormat.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case UNION -> throw new UnsupportedOperationException(\"Union not implemented\");"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/line/openxjson/TestOpenxJsonFormat.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/line/regex/TestRegexFormat.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/line/sequence/TestSequenceFileReaderWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/rcfile/RcFileTester.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-hive-formats/src/test/java/io/trino/hive/formats/rcfile/RcFileTester.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-matching/src/main/java/io/trino/matching/Captures.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NoSuchElementException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NoSuchElementException(\"Requested value for unknown Capture. Was it registered in the Pattern?\");"
    },
    {
        "file_path": "lib/trino-memory-context/src/main/java/io/trino/memory/context/AbstractAggregatedMemoryContext.java",
        "error_code": "format(\"Overflow detected. usedBytes: %d, bytes: %d\", usedBytes, bytes)",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(format(\"Overflow detected. usedBytes: %d, bytes: %d\", usedBytes, bytes), e);"
    },
    {
        "file_path": "lib/trino-memory-context/src/main/java/io/trino/memory/context/MemoryTrackingContext.java",
        "error_code": "Exception closing memory tracking context",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Exception closing memory tracking context\", e);"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/HiveMetastore.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}\" does not support ACID tables",
        "error_message_variables": [
            "getClass().getSimpleName()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, getClass().getSimpleName() + \" does not support ACID tables\");"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/HiveMetastore.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/HiveMetastore.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/HiveMetastore.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/HiveMetastore.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/HiveMetastore.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/HiveMetastore.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/HiveMetastore.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/HiveMetastore.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/HiveMetastore.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/HiveMetastore.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/HiveMetastore.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/HivePrivilegeInfo.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unexpected privilege: \" + privilege);"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/SortingColumn.java",
        "error_code": "HIVE_INVALID_METADATA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Table/partition metadata has invalid sorting order: {}",
        "error_message_variables": [
            "tablePartitionName"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(HIVE_INVALID_METADATA, \"Table/partition metadata has invalid sorting order: \" + tablePartitionName);"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/StatisticsUpdateMode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unexpected operator: \" + operator);"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/StorageFormat.java",
        "error_code": "HIVE_INVALID_METADATA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "SerDe is not present in StorageFormat",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(HIVE_INVALID_METADATA, \"SerDe is not present in StorageFormat\");"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/StorageFormat.java",
        "error_code": "HIVE_UNSUPPORTED_FORMAT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "InputFormat is not present in StorageFormat",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(HIVE_UNSUPPORTED_FORMAT, \"InputFormat is not present in StorageFormat\");"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/StorageFormat.java",
        "error_code": "HIVE_UNSUPPORTED_FORMAT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "OutputFormat is not present in StorageFormat",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(HIVE_UNSUPPORTED_FORMAT, \"OutputFormat is not present in StorageFormat\");"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/Table.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Setting table owner type as a role is not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Setting table owner type as a role is not supported\");"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/Table.java",
        "error_code": "HIVE_INVALID_METADATA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Table %s.%s has multiple columns named %s{}",
        "error_message_variables": [
            ".formatted(databaseName, tableName, columnName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(HIVE_INVALID_METADATA, \"Table %s.%s has multiple columns named %s\".formatted(databaseName, tableName, columnName));"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/Table.java",
        "error_code": "HIVE_INVALID_METADATA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Table %s.%s has multiple columns named %s{}",
        "error_message_variables": [
            ".formatted(databaseName, tableName, columnName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(HIVE_INVALID_METADATA, \"Table %s.%s has multiple columns named %s\".formatted(databaseName, tableName, columnName));"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/Table.java",
        "error_code": "getSchemaTableName()",
        "error_code_name": null,
        "error_class_name": "ColumnNotFoundException",
        "error_message_template": "{}",
        "error_message_variables": [
            "columnName"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ColumnNotFoundException(getSchemaTableName(), columnName);"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/Table.java",
        "error_code": "ALREADY_EXISTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Table %s.%s already has a column named %s{}",
        "error_message_variables": [
            ".formatted(databaseName, tableName, newColumn.getName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ALREADY_EXISTS, \"Table %s.%s already has a column named %s\".formatted(databaseName, tableName, newColumn.getName()));"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/Table.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot drop partition columns",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Cannot drop partition columns\");"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/Table.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot drop bucket column %s.%s.%s{}",
        "error_message_variables": [
            ".formatted(databaseName, tableName, columnName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Cannot drop bucket column %s.%s.%s\".formatted(databaseName, tableName, columnName));"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/Table.java",
        "error_code": "getSchemaTableName()",
        "error_code_name": null,
        "error_class_name": "ColumnNotFoundException",
        "error_message_template": "{}",
        "error_message_variables": [
            "columnName"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ColumnNotFoundException(getSchemaTableName(), columnName);"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/Table.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot drop the only non-partition column in a table",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Cannot drop the only non-partition column in a table\");"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/Table.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Renaming partition columns is not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Renaming partition columns is not supported\");"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/Table.java",
        "error_code": "ALREADY_EXISTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Table %s.%s already has a column named %s{}",
        "error_message_variables": [
            ".formatted(databaseName, tableName, newColumnName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ALREADY_EXISTS, \"Table %s.%s already has a column named %s\".formatted(databaseName, tableName, newColumnName));"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/Table.java",
        "error_code": "getSchemaTableName()",
        "error_code_name": null,
        "error_class_name": "ColumnNotFoundException",
        "error_message_template": "{}",
        "error_message_variables": [
            "oldColumnName"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ColumnNotFoundException(getSchemaTableName(), oldColumnName);"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/type/TypeInfoUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Error: ',', ':', or ';' expected at position %s from '%s' %s\".formatted(separator.position(), typeInfoString, typeInfoTokens));"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/type/TypeInfoUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Error: %s expected at the end of '%s'\".formatted(item, typeInfoString));"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/type/TypeInfoUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Error: %s expected at the position %s of '%s' but '%s' is found.\".formatted(item, token.position(), typeInfoString, token.text()));"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/type/TypeInfoUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Error: %s expected at the position %s of '%s' but '%s' is found.\".formatted(item, token.position(), typeInfoString, token.text()));"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/type/TypeInfoUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Error: %s expected at the position %s of '%s' but '%s' is found.\".formatted(item, token.position(), typeInfoString, token.text()));"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/type/TypeInfoUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"type parameters expected for type string \" + typeInfoString);"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/type/TypeInfoUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"%s type is specified without length: %s\".formatted(typeEntry.typeName(), typeInfoString));"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/type/TypeInfoUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Type %s only takes one parameter, but %s is seen\".formatted(typeEntry.typeName(), params.length));"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/type/TypeInfoUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Type decimal only takes two parameter, but %s is seen\".formatted(params.length));"
    },
    {
        "file_path": "lib/trino-metastore/src/main/java/io/trino/metastore/type/TypeInfoUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Internal error parsing position %s of '%s'\".formatted(token.position(), typeInfoString));"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/AbstractOrcDataSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/AbstractOrcDataSource.java",
        "error_code": "id",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Data loader returned null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(id, \"Data loader returned null\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/AbstractOrcDataSource.java",
        "error_code": "id",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Expected to load %s bytes, but %s bytes were loaded",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(id, \"Expected to load %s bytes, but %s bytes were loaded\", diskRange.getLength(), data.length());"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/CachingOrcDataSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/CachingOrcDataSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"read request (offset %d length %d) is before cache (offset %d length %d)\", position, length, cachePosition, cacheLength));"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/CachingOrcDataSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"read request (offset %d length %d) partially overlaps cache (offset %d length %d)\", position, length, cachePosition, cacheLength));"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcDataSourceUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"No matching buffer for disk range\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcDecompressor.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Invalid compression block size: {}",
        "error_message_variables": [
            "bufferSize"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Invalid compression block size: \" + bufferSize);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcLz4Decompressor.java",
        "error_code": "e",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "{}",
        "error_message_variables": [
            "orcDataSourceId"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(e, orcDataSourceId, \"Invalid compressed stream\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcOutputBuffer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcOutputBuffer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcOutputBuffer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcOutputBuffer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcReader.java",
        "error_code": "orcDataSource.getId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Invalid file size %s",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSource.getId(), \"Invalid file size %s\", estimatedFileSize);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcReader.java",
        "error_code": "orcDataSource.getId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Invalid postscript length %s",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSource.getId(), \"Invalid postscript length %s\", postScriptSize);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcReader.java",
        "error_code": "orcDataSource.getId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Not an ORC file",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSource.getId(), \"Not an ORC file\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcReader.java",
        "error_code": "orcDataSource.getId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "File has no columns",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSource.getId(), \"File has no columns\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcReader.java",
        "error_code": "orcDataSource.getId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Write validation failed: {}",
        "error_message_variables": [
            "messageFormat"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSource.getId(), \"Write validation failed: \" + messageFormat, args);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcReader.java",
        "error_code": "e",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "{}",
        "error_message_variables": [
            "input.getId()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(e, input.getId(), \"Validation failed\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcRecordReader.java",
        "error_code": "orcDataSource.getId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Write validation failed: {}",
        "error_message_variables": [
            "messageFormat"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSource.getId(), \"Write validation failed: \" + messageFormat, args);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcRecordReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid desiredOffset \" + desiredOffset);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcSnappyDecompressor.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Snappy requires buffer (%s) larger than max size (%s)",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Snappy requires buffer (%s) larger than max size (%s)\", uncompressedLength, maxBufferSize);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcSnappyDecompressor.java",
        "error_code": "e",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "{}",
        "error_message_variables": [
            "orcDataSourceId"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(e, orcDataSourceId, \"Invalid compressed stream\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Unexpected time zone",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Unexpected time zone\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Unexpected metadata",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Unexpected metadata\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Write validation failed: unexpected file statistics",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Write validation failed: unexpected file statistics\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Write validation failed: expected file statistics",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Write validation failed: expected file statistics\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Write validation failed: unexpected number of columns in stripe statistics",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Write validation failed: unexpected number of columns in stripe statistics\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Unexpected stripe at offset %s",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Unexpected stripe at offset %s\", stripeOffset);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Unexpected stripe at offset %s",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Unexpected stripe at offset %s\", stripeOffset);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Unexpected row group count stripe in at offset %s",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Unexpected row group count stripe in at offset %s\", stripeOffset);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Unexpected column in row group %s in stripe at offset %s",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Unexpected column in row group %s in stripe at offset %s\", rowGroupIndex, stripeOffset);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Checksum mismatch for row group %s in stripe at offset %s",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Checksum mismatch for row group %s in stripe at offset %s\", rowGroupIndex, stripeOffset);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Unexpected stripe at offset %s",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Unexpected stripe at offset %s\", stripeOffset);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Unexpected row group %s in stripe at offset %s",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Unexpected row group %s in stripe at offset %s\", rowGroupIndex, stripeOffset);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Checksum mismatch for row group %s in stripe at offset %s",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Checksum mismatch for row group %s in stripe at offset %s\", rowGroupIndex, stripeOffset);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Write validation failed: unexpected number of columns in %s statistics",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Write validation failed: unexpected number of columns in %s statistics\", name);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Write validation failed: unexpected number of values in %s statistics",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Write validation failed: unexpected number of values in %s statistics\", name);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Write validation failed: unexpected boolean counts in %s statistics",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Write validation failed: unexpected boolean counts in %s statistics\", name);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Write validation failed: unexpected integer range in %s statistics",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Write validation failed: unexpected integer range in %s statistics\", name);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Write validation failed: unexpected double range in %s statistics",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Write validation failed: unexpected double range in %s statistics\", name);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Write validation failed: unexpected string range in %s statistics",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Write validation failed: unexpected string range in %s statistics\", name);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Write validation failed: unexpected date range in %s statistics",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Write validation failed: unexpected date range in %s statistics\", name);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Write validation failed: unexpected decimal range in %s statistics",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Write validation failed: unexpected decimal range in %s statistics\", name);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Write validation failed: unexpected bloom filter in %s statistics",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Write validation failed: unexpected bloom filter in %s statistics\", name);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unsupported Hive type: %s{}",
        "error_message_variables": [
            ", type)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, format(\"Unsupported Hive type: %s\", type));"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcWriteValidation.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported validation mode\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcZlibDecompressor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Buffer failed to grow. Old size %d, current size %d\", oldBufferSize, buffer.length));"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcZlibDecompressor.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Could not decompress all input (output buffer too small?)",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Could not decompress all input (output buffer too small?)\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcZlibDecompressor.java",
        "error_code": "e",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "{}",
        "error_message_variables": [
            "orcDataSourceId"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(e, orcDataSourceId, \"Invalid compressed stream\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcZstdDecompressor.java",
        "error_code": "orcDataSourceId",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Zstd requires buffer (%s) larger than max size (%s)",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(orcDataSourceId, \"Zstd requires buffer (%s) larger than max size (%s)\", uncompressedLength, maxBufferSize);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/OrcZstdDecompressor.java",
        "error_code": "e",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "{}",
        "error_message_variables": [
            "orcDataSourceId"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(e, orcDataSourceId, \"Invalid compressed stream\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/ValidationHash.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/ValidationHash.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/checkpoint/Checkpoints.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported column type \" + columnType);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/checkpoint/Checkpoints.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported column type \" + columnType + \" for dictionary stream \" + streamId);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/checkpoint/Checkpoints.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported encoding for slice column: \" + encoding);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/checkpoint/Checkpoints.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported encoding for long stream: \" + encoding);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/checkpoint/Checkpoints.java",
        "error_code": "Not enough positions for column %s:%s checkpoints",
        "error_code_name": null,
        "error_class_name": "InvalidCheckpointException",
        "error_message_template": "{}",
        "error_message_variables": [
            "columnId"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidCheckpointException(\"Not enough positions for column %s:%s checkpoints\", columnId, columnType);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/metadata/OrcMetadataReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(streamKind + \" stream type not implemented yet\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/metadata/OrcMetadataReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(compression + \" compression not implemented yet\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/metadata/OrcMetadataWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected value: \" + writerIdentification);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/metadata/OrcMetadataWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported stream kind: \" + streamKind);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/metadata/OrcType.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unsupported Hive type: %s{}",
        "error_message_variables": [
            ", type)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, format(\"Unsupported Hive type: %s\", type));"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/BooleanColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but data stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but data stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/BooleanColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is null but present stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is null but present stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/ByteColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but data stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but data stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/ByteColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is null but present stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is null but present stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/DecimalColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is null but present stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is null but present stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/DecimalColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but decimal stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but decimal stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/DecimalColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but scale stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but scale stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/DoubleColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but data stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but data stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/DoubleColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is null but present stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is null but present stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/FloatColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but data stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but data stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/FloatColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is null but present stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is null but present stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/ListColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but data stream is not present",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but data stream is not present\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/ListColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but data stream is not present",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but data stream is not present\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/ListColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but data stream is not present",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but data stream is not present\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/ListColumnReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/LongColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but data stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but data stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/LongColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is null but present stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is null but present stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/MapColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but data stream is not present",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but data stream is not present\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/MapColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but data stream is not present",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but data stream is not present\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/MapColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but data stream is not present",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but data stream is not present\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/MapColumnReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/SliceColumnReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported encoding \" + columnEncodingKind);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/SliceColumnReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported encoding \" + type.getDisplayName());"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/SliceColumnReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/SliceDictionaryColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but data stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but data stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/SliceDictionaryColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is null but present stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is null but present stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/SliceDictionaryColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Dictionary is not empty but dictionary length stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Dictionary is not empty but dictionary length stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/SliceDirectColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but length stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but length stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/SliceDirectColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but data stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but data stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/SliceDirectColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is null but present stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is null but present stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/SliceDirectColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but length stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but length stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/SliceDirectColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but data stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but data stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/StructColumnReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/TimestampColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is null but present stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is null but present stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/TimestampColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but seconds stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but seconds stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/TimestampColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but nanos stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but nanos stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/TimestampColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Nanos field of timestamp is out of range: %s",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Nanos field of timestamp is out of range: %s\", nanos);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/UnionColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but data stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but data stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/UnionColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but data stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but data stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/UnionColumnReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/UuidColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is null but present stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is null but present stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/UuidColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but data stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but data stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/reader/UuidColumnReader.java",
        "error_code": "column.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Value is not null but data stream is missing",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(column.getOrcDataSourceId(), \"Value is not null but data stream is missing\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/ByteInputStream.java",
        "error_code": "input.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Read past end of buffer RLE byte",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(input.getOrcDataSourceId(), \"Read past end of buffer RLE byte\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/ByteInputStream.java",
        "error_code": "input.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Reading RLE byte got EOF",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(input.getOrcDataSourceId(), \"Reading RLE byte got EOF\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/ByteInputStream.java",
        "error_code": "input.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Unexpected end of stream",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(input.getOrcDataSourceId(), \"Unexpected end of stream\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/CompressedOrcChunkLoader.java",
        "error_code": "dataReader.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Seek past end of stream",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(dataReader.getOrcDataSourceId(), \"Seek past end of stream\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/CompressedOrcChunkLoader.java",
        "error_code": "dataReader.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Requested read size (%s bytes) is greater than max buffer size (%s bytes)",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(dataReader.getOrcDataSourceId(), \"Requested read size (%s bytes) is greater than max buffer size (%s bytes)\", size, dataReader.getMaxBufferSize());"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/CompressedOrcChunkLoader.java",
        "error_code": "dataReader.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Read past end of stream",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(dataReader.getOrcDataSourceId(), \"Read past end of stream\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/CompressedOrcChunkLoader.java",
        "error_code": "dataReader.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Requested read of %s bytes but only %s were bytes",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(dataReader.getOrcDataSourceId(), \"Requested read of %s bytes but only %s were bytes\", size, compressedBuffer.length());"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/DecimalInputStream.java",
        "error_code": "chunkLoader.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Decimal exceeds 128 bits",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(chunkLoader.getOrcDataSourceId(), \"Decimal exceeds 128 bits\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/DecimalInputStream.java",
        "error_code": "chunkLoader.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Decimal exceeds 128 bits",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(chunkLoader.getOrcDataSourceId(), \"Decimal exceeds 128 bits\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/DecimalInputStream.java",
        "error_code": "chunkLoader.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Decimal exceeds 128 bits",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(chunkLoader.getOrcDataSourceId(), \"Decimal exceeds 128 bits\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/DecimalInputStream.java",
        "error_code": "chunkLoader.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Decimal does not fit long (invalid table schema?)",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(chunkLoader.getOrcDataSourceId(), \"Decimal does not fit long (invalid table schema?)\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/DecimalInputStream.java",
        "error_code": "chunkLoader.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Decimal does not fit long (invalid table schema?)",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(chunkLoader.getOrcDataSourceId(), \"Decimal does not fit long (invalid table schema?)\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/DecimalInputStream.java",
        "error_code": "chunkLoader.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Decimal does not fit long (invalid table schema?)",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(chunkLoader.getOrcDataSourceId(), \"Decimal does not fit long (invalid table schema?)\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/LongDecode.java",
        "error_code": "inputStream.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "EOF while reading unsigned vint",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(inputStream.getOrcDataSourceId(), \"EOF while reading unsigned vint\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/LongInputStreamV1.java",
        "error_code": "input.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Read past end of RLE integer",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(input.getOrcDataSourceId(), \"Read past end of RLE integer\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/LongInputStreamV1.java",
        "error_code": "input.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "End of stream in RLE Integer",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(input.getOrcDataSourceId(), \"End of stream in RLE Integer\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/LongInputStreamV1.java",
        "error_code": "input.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Decoded value out of range for a 32bit number",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(input.getOrcDataSourceId(), \"Decoded value out of range for a 32bit number\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/LongInputStreamV1.java",
        "error_code": "input.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Decoded value out of range for a 32bit number",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(input.getOrcDataSourceId(), \"Decoded value out of range for a 32bit number\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/LongInputStreamV1.java",
        "error_code": "input.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Decoded value out of range for a 16bit number",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(input.getOrcDataSourceId(), \"Decoded value out of range for a 16bit number\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/LongInputStreamV1.java",
        "error_code": "input.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Decoded value out of range for a 16bit number",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(input.getOrcDataSourceId(), \"Decoded value out of range for a 16bit number\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/LongInputStreamV2.java",
        "error_code": "input.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Read past end of RLE integer",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(input.getOrcDataSourceId(), \"Read past end of RLE integer\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/LongInputStreamV2.java",
        "error_code": "input.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Invalid RLEv2 encoded stream",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(input.getOrcDataSourceId(), \"Invalid RLEv2 encoded stream\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/LongInputStreamV2.java",
        "error_code": "input.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Decoded value out of range for a 32bit number",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(input.getOrcDataSourceId(), \"Decoded value out of range for a 32bit number\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/LongInputStreamV2.java",
        "error_code": "input.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Decoded value out of range for a 16bit number",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(input.getOrcDataSourceId(), \"Decoded value out of range for a 16bit number\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/LongOutputStreamV2.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"currDelta should be zero\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/LongOutputStreamV2.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"literals does not agree with run length counters\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/OrcInputStream.java",
        "error_code": "chunkLoader.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Unexpected end of stream",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(chunkLoader.getOrcDataSourceId(), \"Unexpected end of stream\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/OrcInputStream.java",
        "error_code": "chunkLoader.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Unexpected end of stream",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(chunkLoader.getOrcDataSourceId(), \"Unexpected end of stream\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/OrcInputStream.java",
        "error_code": "chunkLoader.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Unexpected end of stream",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(chunkLoader.getOrcDataSourceId(), \"Unexpected end of stream\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/OrcInputStream.java",
        "error_code": "chunkLoader.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Unexpected end of stream",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(chunkLoader.getOrcDataSourceId(), \"Unexpected end of stream\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/OrcInputStream.java",
        "error_code": "chunkLoader.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Unexpected end of stream",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(chunkLoader.getOrcDataSourceId(), \"Unexpected end of stream\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/OrcInputStream.java",
        "error_code": "chunkLoader.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Unexpected end of stream",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(chunkLoader.getOrcDataSourceId(), \"Unexpected end of stream\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/UncompressedOrcChunkLoader.java",
        "error_code": "dataReader.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Uncompressed stream does not support seeking to a compressed offset",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(dataReader.getOrcDataSourceId(), \"Uncompressed stream does not support seeking to a compressed offset\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/UncompressedOrcChunkLoader.java",
        "error_code": "dataReader.getOrcDataSourceId()",
        "error_code_name": null,
        "error_class_name": "OrcCorruptionException",
        "error_message_template": "Read past end of stream",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new OrcCorruptionException(dataReader.getOrcDataSourceId(), \"Read past end of stream\");"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/ValueStreams.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Unsupported column type %s for stream %s with encoding %s\", type, streamId, encoding));"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/stream/ValueStreams.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported encoding for long stream: \" + encoding);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/writer/ColumnWriters.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported type: \" + type);"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/writer/SliceDictionaryColumnWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException();"
    },
    {
        "file_path": "lib/trino-orc/src/main/java/io/trino/orc/writer/TimestampColumnWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported type for ORC timestamp writer: \" + type);"
    },
    {
        "file_path": "lib/trino-orc/src/test/java/io/trino/orc/BenchmarkColumnReaders.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "lib/trino-orc/src/test/java/io/trino/orc/OrcTester.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported type \" + type);"
    },
    {
        "file_path": "lib/trino-orc/src/test/java/io/trino/orc/OrcTester.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported timestamp type: \" + type);"
    },
    {
        "file_path": "lib/trino-orc/src/test/java/io/trino/orc/OrcTester.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"unsupported type: \" + type);"
    },
    {
        "file_path": "lib/trino-orc/src/test/java/io/trino/orc/OrcTester.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"unsupported type: \" + type);"
    },
    {
        "file_path": "lib/trino-orc/src/test/java/io/trino/orc/TestCachingOrcDataSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-orc/src/test/java/io/trino/orc/TestCachingOrcDataSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-orc/src/test/java/io/trino/orc/TestCachingOrcDataSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-orc/src/test/java/io/trino/orc/TestCachingOrcDataSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-orc/src/test/java/io/trino/orc/TestCachingOrcDataSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-orc/src/test/java/io/trino/orc/TestCachingOrcDataSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-orc/src/test/java/io/trino/orc/TestingOrcPredicate.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported type \" + type);"
    },
    {
        "file_path": "lib/trino-orc/src/test/java/io/trino/orc/TestSliceDictionaryColumnWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-orc/src/test/java/io/trino/orc/TestSliceDictionaryColumnWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-orc/src/test/java/io/trino/orc/TestSliceDictionaryColumnWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-orc/src/test/java/io/trino/orc/TestSliceDictionaryColumnWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-orc/src/test/java/io/trino/orc/TestSliceDictionaryColumnWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-orc/src/test/java/io/trino/orc/TestSliceDictionaryColumnWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-orc/src/test/java/io/trino/orc/stream/TestLongDecode.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "EOFException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new EOFException(\"Reading Vulong past EOF\");"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/BloomFilterStore.java",
        "error_code": "Failed to read Bloom filter header",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "exception"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Failed to read Bloom filter header\", exception);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/BloomFilterStore.java",
        "error_code": "Failed to read Bloom filter data",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "exception"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Failed to read Bloom filter data\", exception);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/BloomFilterStore.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ParquetDecodingException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ParquetDecodingException(format(\"Column: %s has bloom filter number of bytes value of %d, which is out of bound of lower limit: %d and upper limit: %d\", columnPath, numBytes, 0, UPPER_BOUND_BYTES));"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/ChunkReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/ColumnStatisticsValidation.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unsupported type: %s{}",
        "error_message_variables": [
            ", type)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, format(\"Unsupported type: %s\", type));"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/ParquetCompressionUtils.java",
        "error_code": "dataSourceId",
        "error_code_name": null,
        "error_class_name": "ParquetCorruptionException",
        "error_message_template": "Codec not supported in Parquet: %s",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case BROTLI, LZ4_RAW -> throw new ParquetCorruptionException(dataSourceId, \"Codec not supported in Parquet: %s\", codec);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/ParquetCompressionUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Invalid uncompressedSize for SNAPPY input. Expected %s, actual: %s\", uncompressedSize, actualUncompressedSize));"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/ParquetCompressionUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Invalid uncompressedSize for GZIP input. Expected %s, actual: %s\", uncompressedSize, bytesRead));"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/ParquetEncoding.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ParquetDecodingException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case BOOLEAN -> throw new ParquetDecodingException(\"Dictionary encoding does not support: \" + descriptor.getPrimitiveType().getPrimitiveTypeName());"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/ParquetEncoding.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ParquetDecodingException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ParquetDecodingException(\"Unsupported values type: \" + valuesType);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/ParquetEncoding.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\" Dictionary encoding is not supported for: \" + name());"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/ParquetEncoding.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Error decoding  values in encoding: \" + this.name());"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/ParquetReaderUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(format(\"Encountered bytesWidth (%d) that requires more than 4 bytes\", bytesWidth));"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/ParquetReaderUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ArithmeticException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ArithmeticException(\"short overflow\");"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/ParquetReaderUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ArithmeticException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ArithmeticException(format(\"Value %d exceeds short range\", value));"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/ParquetReaderUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ArithmeticException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ArithmeticException(\"byte overflow\");"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/ParquetReaderUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ArithmeticException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ArithmeticException(format(\"Value %d exceeds byte range\", value));"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/ParquetTimestampUtils.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Parquet timestamp must be 12 bytes, actual {}",
        "error_message_variables": [
            "timestampBinary.length()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Parquet timestamp must be 12 bytes, actual \" + timestampBinary.length());"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/ParquetTimestampUtils.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported Parquet timestamp time unit {}",
        "error_message_variables": [
            "precision"
        ],
        "severity_level": "ERROR",
        "original_text": "default -> throw new TrinoException(NOT_SUPPORTED, \"Unsupported Parquet timestamp time unit \" + precision);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/ParquetTypeUtils.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unsupported schema for Parquet column (%s){}",
        "error_message_variables": [
            ", primitiveColumnIO.getColumnDescriptor())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, format(\"Unsupported schema for Parquet column (%s)\", primitiveColumnIO.getColumnDescriptor()));"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/ParquetTypeUtils.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unsupported Trino column type (%s) for Parquet column (%s){}",
        "error_message_variables": [
            ", type, primitiveColumnIO.getColumnDescriptor())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, format(\"Unsupported Trino column type (%s) for Parquet column (%s)\", type, primitiveColumnIO.getColumnDescriptor()));"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/ParquetValidationUtils.java",
        "error_code": "dataSourceId",
        "error_code_name": null,
        "error_class_name": "ParquetCorruptionException",
        "error_message_template": "{}",
        "error_message_variables": [
            "formatString"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ParquetCorruptionException(dataSourceId, formatString, args);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/ValidationHash.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/ValidationHash.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/dictionary/Dictionary.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/dictionary/Dictionary.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/dictionary/Dictionary.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/dictionary/Dictionary.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/dictionary/Dictionary.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/metadata/IntColumnChunkMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"value should be positive and fit in an int: \" + value);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/metadata/PrunedBlockMetadata.java",
        "error_code": "dataSourceId",
        "error_code_name": null,
        "error_class_name": "ParquetCorruptionException",
        "error_message_template": "Metadata is missing for column: %s",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ParquetCorruptionException(dataSourceId, \"Metadata is missing for column: %s\", columnDescriptor);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/metadata/PrunedBlockMetadata.java",
        "error_code": "dataSourceId",
        "error_code_name": null,
        "error_class_name": "ParquetCorruptionException",
        "error_message_template": "Metadata is missing for column: %s",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ParquetCorruptionException(dataSourceId, \"Metadata is missing for column: %s\", columnDescriptor);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/predicate/PredicateUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported type: \" + type);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/predicate/PredicateUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/predicate/PredicateUtils.java",
        "error_code": "Could not decode the dictionary for \" + chunkMetaData.getPath()",
        "error_code_name": null,
        "error_class_name": "ParquetDecodingException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ParquetDecodingException(\"Could not decode the dictionary for \" + chunkMetaData.getPath(), e);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/predicate/TupleDomainParquetPredicate.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Missing columnValueCount for column %s in %s\", column, id));"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/predicate/TupleDomainParquetPredicate.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Missing columnValueCount for column %s in %s\", column, id));"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/predicate/TupleDomainParquetPredicate.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "VerifyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new VerifyException(\"Impossible boolean statistics\");"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/predicate/TupleDomainParquetPredicate.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Can't convert value to long: \" + value.getClass().getName());"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/predicate/TupleDomainParquetPredicate.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ParquetDecodingException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case BOOLEAN -> throw new ParquetDecodingException(\"Dictionary encoding does not support: \" + primitiveType.getPrimitiveTypeName());"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/reader/AbstractColumnReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ParquetDecodingException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ParquetDecodingException(format(\"Dictionary is missing for %s\", field));"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/reader/AbstractColumnReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ParquetDecodingException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ParquetDecodingException(format(\"Corrupted Parquet file: extra %d values to be consumed when scanning current batch\", remainingInBatch));"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/reader/ChunkedInputStream.java",
        "error_code": "Failed to read \" + length + \" bytes",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Failed to read \" + length + \" bytes\", e);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/reader/ChunkedInputStream.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(\"Stream closed\");"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/reader/PageReader.java",
        "error_code": "Could not decompress page",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Could not decompress page\", e);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/reader/PageReader.java",
        "error_code": "Error reading dictionary page",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Error reading dictionary page\", e);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/reader/ParquetColumnChunkIterator.java",
        "error_code": "dataSourceId",
        "error_code_name": null,
        "error_class_name": "ParquetCorruptionException",
        "error_message_template": "Column (%s) has a dictionary page after the first position in column chunk",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ParquetCorruptionException(dataSourceId, \"Column (%s) has a dictionary page after the first position in column chunk\", descriptor);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/reader/ParquetColumnChunkIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/reader/ParquetReader.java",
        "error_code": "dataSource.getId()",
        "error_code_name": null,
        "error_class_name": "ParquetCorruptionException",
        "error_message_template": "Struct field does not have any children: %s",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ParquetCorruptionException(dataSource.getId(), \"Struct field does not have any children: %s\", field);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/reader/ParquetReader.java",
        "error_code": "dataSource.getId()",
        "error_code_name": null,
        "error_class_name": "ParquetCorruptionException",
        "error_message_template": "Write validation failed: {}",
        "error_message_variables": [
            "messageFormat"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ParquetCorruptionException(dataSource.getId(), \"Write validation failed: \" + messageFormat, args);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/reader/TrinoColumnIndexStore.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/reader/TrinoColumnIndexStore.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/reader/decoders/ApacheParquetValueDecoders.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/reader/decoders/ApacheParquetValueDecoders.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/reader/decoders/DeltaByteArrayDecoders.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/reader/decoders/DeltaLengthByteArrayDecoders.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/reader/decoders/ValueDecoders.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ParquetDecodingException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ParquetDecodingException(\"Unable to read BINARY type decimal of size \" + positionLength + \" as a short decimal\");"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/reader/flat/BinaryColumnAdapter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/writer/MessageTypeConverter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Unknown primitive type \" + type);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/writer/ParquetCompressor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Unsupported codec: \" + codec);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/writer/ParquetDataOutput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/writer/ParquetSchemaConverter.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unsupported primitive type: %s{}",
        "error_message_variables": [
            ", type)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, format(\"Unsupported primitive type: %s\", type));"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/writer/ParquetWriter.java",
        "error_code": "input.getId()",
        "error_code_name": null,
        "error_class_name": "ParquetCorruptionException",
        "error_message_template": "Validation failed with exception %s",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ParquetCorruptionException(input.getId(), \"Validation failed with exception %s\", e);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/writer/ParquetWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/writer/ParquetWriters.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unsupported type for Parquet writer: %s{}",
        "error_message_variables": [
            ", type)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, format(\"Unsupported type for Parquet writer: %s\", type));"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/writer/repdef/DefLevelWriterProviders.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IndexOutOfBoundsException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IndexOutOfBoundsException(format(\"Invalid offset %s and positionsCount %s in block with %s positions\", offset, positionsCount, totalPositionsCount));"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/writer/repdef/RepLevelWriterProviders.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IndexOutOfBoundsException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IndexOutOfBoundsException(format(\"Invalid offset %s and positionsCount %s in block with %s positions\", offset, positionsCount, totalPositionsCount));"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/writer/valuewriter/BloomFilterValuesWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/writer/valuewriter/BloomFilterValuesWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/writer/valuewriter/FixedLenByteArrayShortDecimalValueWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid number of bytes: \" + buffer.length);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/writer/valuewriter/RunLengthBitPackingHybridValuesWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ParquetEncodingException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ParquetEncodingException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/writer/valuewriter/RunLengthBitPackingHybridValuesWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ParquetEncodingException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ParquetEncodingException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/writer/valuewriter/RunLengthBitPackingHybridValuesWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ParquetEncodingException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ParquetEncodingException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/main/java/io/trino/parquet/writer/valuewriter/TrinoValuesWriterFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case BOOLEAN -> throw new IllegalArgumentException(\"no dictionary encoding for BOOLEAN\");"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/BenchmarkParquetFormatUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported type \" + column.getType());"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/BenchmarkParquetFormatUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/ParquetTestUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/TestParquetFormatBenchmark.java",
        "error_code": "Failed \" + dataSet",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Failed \" + dataSet, e);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/TestTupleDomainParquetPredicate.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown Parquet TimeUnit \" + timeUnit);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/TestTupleDomainParquetPredicate.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown Timestamp domain type \" + baseDomainValue);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/predicate/BenchmarkTupleDomainParquetPredicate.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/AbstractColumnReaderBenchmark.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/AbstractColumnReaderRowRangesTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Wrong definition level: \" + maxDef);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/AbstractColumnReaderRowRangesTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Wrong definition level: \" + maxDef);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/AbstractColumnReaderRowRangesTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/AbstractColumnReaderRowRangesTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/BenchmarkBooleanColumnReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"encoding %s is not supported\", encoding));"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/BenchmarkByteColumnReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"encoding %s is not supported\", encoding));"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/BenchmarkInt32ToLongColumnReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"encoding %s is not supported\", encoding));"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/BenchmarkIntColumnReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"encoding %s is not supported\", encoding));"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/BenchmarkLongColumnReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"encoding %s is not supported\", encoding));"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/BenchmarkLongDecimalColumnReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"encoding %s is not supported\", encoding));"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/BenchmarkShortColumnReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"encoding %s is not supported\", encoding));"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/BenchmarkShortDecimalColumnReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"encoding %s is not supported\", encoding));"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/BenchmarkUuidColumnReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"encoding %s is not supported\", encoding));"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/TestColumnIndexFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "MissingOffsetIndexException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new MissingOffsetIndexException(column);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/TestingColumnReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/TestingRowRanges.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/TestingRowRanges.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/TestingRowRanges.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/TestPageReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"unsupported compression code \" + compressionCodec);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/decoders/AbstractValueDecodersTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/decoders/AbstractValueDecodersTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/decoders/AbstractValueDecodersTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/decoders/AbstractValueDecodersTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"RLE encoding writer is not supported for type \" + typeName);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/decoders/AbstractValueDecodersTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Dictionary encoding writer is not supported for type \" + typeName);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/decoders/AbstractValueDecodersTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Delta binary packing encoding writer is not supported for type \" + typeName);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/decoders/AbstractValueDecodersTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Delta length byte array encoding writer is not supported for type \" + typeName);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/decoders/AbstractValueDecodersTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Delta byte array encoding writer is not supported for type \" + typeName);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/decoders/AbstractValueDecodersTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"Encoding %s is not supported\", encoding));"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/decoders/BenchmarkRleBitPackingDecoder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/reader/decoders/DictionaryReader.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ParquetDecodingException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ParquetDecodingException(e);"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/writer/TestingValuesWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/writer/TestingValuesWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/writer/TestingValuesWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/writer/TestingValuesWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-parquet/src/test/java/io/trino/parquet/writer/TestingValuesWriter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/SpiVersionHolder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Malformed version resource\");"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/SpiVersionHolder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/authentication/KerberosAuthentication.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/authentication/KerberosAuthentication.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/authentication/KerberosConfiguration.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/authentication/KerberosTicketUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"kerberos ticket not found in \" + subject);"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/io/ChunkedSliceOutput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/io/ChunkedSliceOutput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/io/ChunkedSliceOutput.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/ldap/JdkLdapClient.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "AccessDeniedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new AccessDeniedException(\"Invalid credentials\");"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/ldap/JdkLdapClient.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/mapping/CachingIdentifierMapping.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to find remote schema name: {}",
        "error_message_variables": [
            "firstNonNull(e.getMessage(), e)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Failed to find remote schema name: \" + firstNonNull(e.getMessage(), e), e);"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/mapping/CachingIdentifierMapping.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to find remote table name: {}",
        "error_message_variables": [
            "firstNonNull(e.getMessage(), e)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Failed to find remote table name: \" + firstNonNull(e.getMessage(), e), e);"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/projection/ApplyProjectionUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"expression is not a valid dereference chain\");"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/projection/ApplyProjectionUtil.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported expression: \" + expression);"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/security/CatalogAccessControlRule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown \" + AccessMode.class.getSimpleName() + \": \" + value);"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/security/FileBasedAccessControl.java",
        "error_code": "INVALID_COLUMN_MASK",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Multiple masks defined for %s.%s{}",
        "error_message_variables": [
            ", tableName, columnName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_COLUMN_MASK, format(\"Multiple masks defined for %s.%s\", tableName, columnName));"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/security/FileBasedAccessControl.java",
        "error_code": "INVALID_COLUMN_MASK",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Multiple column masks defined for the same column",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_COLUMN_MASK, \"Multiple column masks defined for the same column\", exception);"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/security/FileBasedSystemAccessControl.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/security/FileBasedSystemAccessControl.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/security/FileBasedSystemAccessControl.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/security/FileBasedSystemAccessControl.java",
        "error_code": "INVALID_COLUMN_MASK",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Multiple masks defined for %s.%s{}",
        "error_message_variables": [
            ", table, columnName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_COLUMN_MASK, format(\"Multiple masks defined for %s.%s\", table, columnName));"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/security/FileBasedSystemAccessControl.java",
        "error_code": "INVALID_COLUMN_MASK",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Multiple column masks defined for the same column",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_COLUMN_MASK, \"Multiple column masks defined for the same column\", exception);"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/security/FunctionAccessControlRule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"function_kind is no longer supported in security rules\");"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/security/HttpBasedAccessControlRulesProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Request to '%s' returned unexpected status code: '%d'\", configUri, status));"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/security/QueryAccessRule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown \" + AccessMode.class.getSimpleName() + \": \" + value);"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/security/SystemInformationRule.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown \" + AccessMode.class.getSimpleName() + \": \" + value);"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/session/PropertyMetadataUtil.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "%s must be at least %s: %s{}",
        "error_message_variables": [
            ".formatted(name, min, value)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, \"%s must be at least %s: %s\".formatted(name, min, value));"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/session/PropertyMetadataUtil.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "%s must be at most %s: %s{}",
        "error_message_variables": [
            ".formatted(name, max, value)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, \"%s must be at most %s: %s\".formatted(name, max, value));"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/ssl/SslUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Unexpected default trust managers:\" + Arrays.toString(trustManagers));"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/ssl/SslUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "CertificateExpiredException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new CertificateExpiredException(\"KeyStore certificate is expired: \" + e.getMessage());"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/ssl/SslUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "CertificateNotYetValidException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new CertificateNotYetValidException(\"KeyStore certificate is not yet valid: \" + e.getMessage());"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/util/Functions.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "format(message, args)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(message, args));"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/util/JsonTypeUtil.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot convert value to JSON: '%s'{}",
        "error_message_variables": [
            ", slice.toStringUtf8())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"Cannot convert value to JSON: '%s'\", slice.toStringUtf8()), e);"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/util/JsonUtils.java",
        "error_code": "format(\"Invalid JSON file '%s' for '%s'\", path, javaType)",
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Invalid JSON file '%s' for '%s'\", path, javaType), e);"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/util/JsonUtils.java",
        "error_code": "Could not parse JSON",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Could not parse JSON\", e);"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/util/JsonUtils.java",
        "error_code": "Failed to convert JSON tree node",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Failed to convert JSON tree node\", e);"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/main/java/io/trino/plugin/base/util/Procedures.java",
        "error_code": "INVALID_PROCEDURE_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "format(message, args)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_PROCEDURE_ARGUMENT, format(message, args));"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/test/java/io/trino/plugin/base/security/TestHttpFileBasedAccessControl.java",
        "error_code": "Error while creating SystemAccessControl",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Error while creating SystemAccessControl\", e);"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/test/java/io/trino/plugin/base/security/TestHttpFileBasedSystemAccessControl.java",
        "error_code": "Error while creating SystemAccessControl",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Error while creating SystemAccessControl\", e);"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/test/java/io/trino/plugin/base/util/TestLoggingInvocationHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ArrayStoreException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ArrayStoreException(s);"
    },
    {
        "file_path": "lib/trino-plugin-toolkit/src/test/java/io/trino/plugin/base/util/TestLoggingInvocationHandler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ArrayStoreException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ArrayStoreException(s);"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/FieldValueProvider.java",
        "error_code": "DecoderErrorCode.DECODER_CONVERSION_NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "conversion to boolean not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DecoderErrorCode.DECODER_CONVERSION_NOT_SUPPORTED, \"conversion to boolean not supported\");"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/FieldValueProvider.java",
        "error_code": "DecoderErrorCode.DECODER_CONVERSION_NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "conversion to long not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DecoderErrorCode.DECODER_CONVERSION_NOT_SUPPORTED, \"conversion to long not supported\");"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/FieldValueProvider.java",
        "error_code": "DecoderErrorCode.DECODER_CONVERSION_NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "conversion to double not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DecoderErrorCode.DECODER_CONVERSION_NOT_SUPPORTED, \"conversion to double not supported\");"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/FieldValueProvider.java",
        "error_code": "DecoderErrorCode.DECODER_CONVERSION_NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "conversion to Slice not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DecoderErrorCode.DECODER_CONVERSION_NOT_SUPPORTED, \"conversion to Slice not supported\");"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/FieldValueProvider.java",
        "error_code": "DecoderErrorCode.DECODER_CONVERSION_NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "conversion not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DecoderErrorCode.DECODER_CONVERSION_NOT_SUPPORTED, \"conversion not supported\");"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/avro/AvroBytesDeserializer.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decoding Avro record failed.",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Decoding Avro record failed.\", e);"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/avro/AvroColumnDecoder.java",
        "error_code": "GENERIC_USER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_USER_ERROR, e);"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/avro/AvroColumnDecoder.java",
        "error_code": "DECODER_CONVERSION_NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"cannot decode object of '%s' as '%s' for column '%s'{}",
        "error_message_variables": [
            ", value.getClass(), columnType, columnName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DECODER_CONVERSION_NOT_SUPPORTED, format(\"cannot decode object of '%s' as '%s' for column '%s'\", value.getClass(), columnType, columnName));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/avro/AvroColumnDecoder.java",
        "error_code": "DECODER_CONVERSION_NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"cannot decode object of '%s' as '%s' for column '%s'{}",
        "error_message_variables": [
            ", value.getClass(), columnType, columnName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DECODER_CONVERSION_NOT_SUPPORTED, format(\"cannot decode object of '%s' as '%s' for column '%s'\", value.getClass(), columnType, columnName));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/avro/AvroColumnDecoder.java",
        "error_code": "DECODER_CONVERSION_NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"cannot decode object of '%s' as '%s' for column '%s'{}",
        "error_message_variables": [
            ", value.getClass(), columnType, columnName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DECODER_CONVERSION_NOT_SUPPORTED, format(\"cannot decode object of '%s' as '%s' for column '%s'\", value.getClass(), columnType, columnName));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/avro/AvroColumnDecoder.java",
        "error_code": "DECODER_CONVERSION_NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"cannot decode object of '%s' as '%s' for column '%s'{}",
        "error_message_variables": [
            ", value.getClass(), type, columnName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DECODER_CONVERSION_NOT_SUPPORTED, format(\"cannot decode object of '%s' as '%s' for column '%s'\", value.getClass(), type, columnName));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/avro/AvroColumnDecoder.java",
        "error_code": "DECODER_CONVERSION_NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"cannot decode object of '%s' as '%s' for column '%s'{}",
        "error_message_variables": [
            ", value.getClass(), type, columnName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DECODER_CONVERSION_NOT_SUPPORTED, format(\"cannot decode object of '%s' as '%s' for column '%s'\", value.getClass(), type, columnName));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/avro/AvroFileDeserializer.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "No avro record found",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"No avro record found\");"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/avro/AvroFileDeserializer.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unexpected extra record found",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Unexpected extra record found\");"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/avro/AvroFileDeserializer.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decoding Avro record failed.",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Decoding Avro record failed.\", e);"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/csv/CsvColumnDecoder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"invalid mapping '%s' for column '%s'\", columnHandle.getMapping(), columnName));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/csv/CsvColumnDecoder.java",
        "error_code": "GENERIC_USER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_USER_ERROR, e);"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/csv/CsvColumnDecoder.java",
        "error_code": "DECODER_CONVERSION_NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"could not parse value '%s' as '%s' for column '%s'{}",
        "error_message_variables": [
            ", tokens[columnIndex].trim(), columnType, columnName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DECODER_CONVERSION_NOT_SUPPORTED, format(\"could not parse value '%s' as '%s' for column '%s'\", tokens[columnIndex].trim(), columnType, columnName));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/csv/CsvColumnDecoder.java",
        "error_code": "DECODER_CONVERSION_NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"could not parse value '%s' as '%s' for column '%s'{}",
        "error_message_variables": [
            ", tokens[columnIndex].trim(), columnType, columnName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DECODER_CONVERSION_NOT_SUPPORTED, format(\"could not parse value '%s' as '%s' for column '%s'\", tokens[columnIndex].trim(), columnType, columnName));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/csv/CsvColumnDecoder.java",
        "error_code": "DECODER_CONVERSION_NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"could not parse value '%s' as '%s' for column '%s'{}",
        "error_message_variables": [
            ", tokens[columnIndex].trim(), columnType, columnName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DECODER_CONVERSION_NOT_SUPPORTED, format(\"could not parse value '%s' as '%s' for column '%s'\", tokens[columnIndex].trim(), columnType, columnName));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/json/AbstractDateTimeJsonValueProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unsupported type: \" + type);"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/json/ISO8601JsonFieldDecoder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"unsupported type \" + columnType);"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/json/JsonRowDecoderFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(format(\"unknown data format '%s' used for column '%s'\", column.getDataFormat(), column.getName()));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/json/JsonRowDecoderFactory.java",
        "error_code": "GENERIC_USER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_USER_ERROR, e);"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/json/JsonRowDecoderFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"unsupported column type '%s' for column '%s'\", column.getType().getDisplayName(), column.getName()));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/json/JsonRowDecoderFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"unsupported column type '%s' for column '%s' with data format '%s'\", column.getType(), column.getName(), column.getDataFormat()));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/protobuf/DescriptorProvider.java",
        "error_code": "GENERIC_USER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to read schema from URL",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_USER_ERROR, \"Failed to read schema from URL\", e);"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/protobuf/FileDescriptorProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/protobuf/FileDescriptorProvider.java",
        "error_code": "INVALID_PROTO_FILE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unable to parse protobuf schema",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_PROTO_FILE, \"Unable to parse protobuf schema\", e);"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/protobuf/FixedSchemaDynamicMessageProvider.java",
        "error_code": "ProtobufErrorCode.INVALID_PROTOBUF_MESSAGE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Decoding Protobuf record failed.",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ProtobufErrorCode.INVALID_PROTOBUF_MESSAGE, \"Decoding Protobuf record failed.\", e);"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/protobuf/FixedSchemaDynamicMessageProvider.java",
        "error_code": "ProtobufErrorCode.INVALID_PROTO_FILE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unable to parse protobuf schema",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ProtobufErrorCode.INVALID_PROTO_FILE, \"Unable to parse protobuf schema\", descriptorValidationException);"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/protobuf/ProtobufColumnDecoder.java",
        "error_code": "GENERIC_USER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_USER_ERROR, e);"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/protobuf/ProtobufColumnDecoder.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Expected to find at most one 'oneof' field in message, found fields: %s{}",
        "error_message_variables": [
            ", oneofFields)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Expected to find at most one 'oneof' field in message, found fields: %s\", oneofFields));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/protobuf/ProtobufColumnDecoder.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to convert oneof message to JSON",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Failed to convert oneof message to JSON\", e);"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/protobuf/ProtobufColumnDecoder.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to print JSON from 'any' message type",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Failed to print JSON from 'any' message type\", e);"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/protobuf/ProtobufColumnDecoder.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to process JSON",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Failed to process JSON\", e);"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/protobuf/ProtobufUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(exception);"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/protobuf/ProtobufUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unknown label\");"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/protobuf/ProtobufValueProvider.java",
        "error_code": "DECODER_CONVERSION_NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"cannot decode object of '%s' as '%s' for column '%s'{}",
        "error_message_variables": [
            ", value.getClass(), columnType, columnName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DECODER_CONVERSION_NOT_SUPPORTED, format(\"cannot decode object of '%s' as '%s' for column '%s'\", value.getClass(), columnType, columnName));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/protobuf/ProtobufValueProvider.java",
        "error_code": "DECODER_CONVERSION_NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"cannot decode object of '%s' as '%s' for column '%s'{}",
        "error_message_variables": [
            ", value.getClass(), columnType, columnName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DECODER_CONVERSION_NOT_SUPPORTED, format(\"cannot decode object of '%s' as '%s' for column '%s'\", value.getClass(), columnType, columnName));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/protobuf/ProtobufValueProvider.java",
        "error_code": "DECODER_CONVERSION_NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"cannot decode object of '%s' as '%s' for column '%s'{}",
        "error_message_variables": [
            ", value.getClass(), columnType, columnName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DECODER_CONVERSION_NOT_SUPPORTED, format(\"cannot decode object of '%s' as '%s' for column '%s'\", value.getClass(), columnType, columnName));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/protobuf/ProtobufValueProvider.java",
        "error_code": "DECODER_CONVERSION_NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"cannot decode object of '%s' as '%s' for column '%s'{}",
        "error_message_variables": [
            ", value.getClass(), type, columnName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DECODER_CONVERSION_NOT_SUPPORTED, format(\"cannot decode object of '%s' as '%s' for column '%s'\", value.getClass(), type, columnName));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/protobuf/ProtobufValueProvider.java",
        "error_code": "DECODER_CONVERSION_NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"cannot decode object of '%s' as '%s' for column '%s'{}",
        "error_message_variables": [
            ", value.getClass(), type, columnName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DECODER_CONVERSION_NOT_SUPPORTED, format(\"cannot decode object of '%s' as '%s' for column '%s'\", value.getClass(), type, columnName));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/raw/RawColumnDecoder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"invalid dataFormat '%s' for column '%s'\", columnHandle.getDataFormat(), columnName));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/raw/RawColumnDecoder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"invalid mapping format '%s' for column '%s'\", mapping, columnName));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/raw/RawColumnDecoder.java",
        "error_code": "StandardErrorCode.GENERIC_USER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(StandardErrorCode.GENERIC_USER_ERROR, e);"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/raw/RawColumnDecoder.java",
        "error_code": "DECODER_CONVERSION_NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"conversion '%s' to boolean not supported{}",
        "error_message_variables": [
            ", fieldType)"
        ],
        "severity_level": "ERROR",
        "original_text": "default -> throw new TrinoException(DECODER_CONVERSION_NOT_SUPPORTED, format(\"conversion '%s' to boolean not supported\", fieldType));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/raw/RawColumnDecoder.java",
        "error_code": "DECODER_CONVERSION_NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"conversion '%s' to long not supported{}",
        "error_message_variables": [
            ", fieldType)"
        ],
        "severity_level": "ERROR",
        "original_text": "default -> throw new TrinoException(DECODER_CONVERSION_NOT_SUPPORTED, format(\"conversion '%s' to long not supported\", fieldType));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/main/java/io/trino/decoder/raw/RawColumnDecoder.java",
        "error_code": "DECODER_CONVERSION_NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"conversion '%s' to double not supported{}",
        "error_message_variables": [
            ", fieldType)"
        ],
        "severity_level": "ERROR",
        "original_text": "default -> throw new TrinoException(DECODER_CONVERSION_NOT_SUPPORTED, format(\"conversion '%s' to double not supported\", fieldType));"
    },
    {
        "file_path": "lib/trino-record-decoder/src/test/java/io/trino/decoder/avro/TestAvroDecoder.java",
        "error_code": "Failed to convert to Avro.",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Failed to convert to Avro.\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support dropping schemas with CASCADE option",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support dropping schemas with CASCADE option\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support query retries",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support query retries\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support replacing tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support replacing tables\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support creating tables with table comment",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support creating tables with table comment\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support replacing tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support replacing tables\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support creating tables with table comment",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support creating tables with table comment\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadata.java",
        "error_code": "ACCUMULO_TABLE_EXISTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Table {}\" already exists",
        "error_message_variables": [
            "newTableName"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ACCUMULO_TABLE_EXISTS, \"Table \" + newTableName + \" already exists\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support query retries",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support query retries\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unable to rollback insert for table %s.%s. Some rows may have been written. Please run your insert again.{}",
        "error_message_variables": [
            ", handle.getSchema(), handle.getTable())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, format(\"Unable to rollback insert for table %s.%s. Some rows may have been written. Please run your insert again.\", handle.getSchema(), handle.getTable()));"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support versioned tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support versioned tables\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TableNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TableNotFoundException(tableName);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TableNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TableNotFoundException(handle.toSchemaTableName());"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TableNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TableNotFoundException(new SchemaTableName(handle.getSchema(), handle.getTable()));"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SchemaNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SchemaNotFoundException(table.getSchema());"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "INVALID_TABLE_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Key/value types of a MAP column must be plain types",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_TABLE_PROPERTY, \"Key/value types of a MAP column must be plain types\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"%s type not supported{}",
        "error_message_variables": [
            ", column.getType())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, format(\"%s type not supported\", column.getType()));"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "INVALID_TABLE_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Duplicate column names are not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_TABLE_PROPERTY, \"Duplicate column names are not supported\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "INVALID_TABLE_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Duplicate column family/qualifier pair detected in column mapping, check the value of {}",
        "error_message_variables": [
            "AccumuloTableProperties.COLUMN_MAPPING"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_TABLE_PROPERTY, \"Duplicate column family/qualifier pair detected in column mapping, check the value of \" + AccumuloTableProperties.COLUMN_MAPPING);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "INVALID_TABLE_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Column familiy/qualifier mapping of %s:%s is reserved{}",
        "error_message_variables": [
            ", reservedRowIdColumn, reservedRowIdColumn)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_TABLE_PROPERTY, format(\"Column familiy/qualifier mapping of %s:%s is reserved\", reservedRowIdColumn, reservedRowIdColumn));"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "INVALID_TABLE_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Column generation for external tables is not supported, must specify {}",
        "error_message_variables": [
            "AccumuloTableProperties.COLUMN_MAPPING"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_TABLE_PROPERTY, \"Column generation for external tables is not supported, must specify \" + AccumuloTableProperties.COLUMN_MAPPING);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "INVALID_TABLE_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Row ID column cannot be in a locality group",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_TABLE_PROPERTY, \"Row ID column cannot be in a locality group\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "INVALID_TABLE_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unknown Trino column defined for locality group {}",
        "error_message_variables": [
            "g.getKey()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_TABLE_PROPERTY, \"Unknown Trino column defined for locality group \" + g.getKey());"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "ACCUMULO_TABLE_EXISTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot create internal table when an Accumulo table already exists",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ACCUMULO_TABLE_EXISTS, \"Cannot create internal table when an Accumulo table already exists\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "ACCUMULO_TABLE_EXISTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Internal table is indexed, but the index table and/or index metrics table(s) already exist",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ACCUMULO_TABLE_EXISTS, \"Internal table is indexed, but the index table and/or index metrics table(s) already exist\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "InvalidParameterException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new InvalidParameterException(format(\"Misconfigured mapping for Trino column %s\", cm.getName()));"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support renaming tables across schemas",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support renaming tables across schemas\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TableNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TableNotFoundException(oldName);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "ACCUMULO_TABLE_DNE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Table '%s' does not exist{}",
        "error_message_variables": [
            ", oldTable.getFullTableName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ACCUMULO_TABLE_DNE, format(\"Table '%s' does not exist\", oldTable.getFullTableName()));"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "ACCUMULO_TABLE_EXISTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Table '%s' already exists{}",
        "error_message_variables": [
            ", newTable.getFullTableName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ACCUMULO_TABLE_EXISTS, format(\"Table '%s' already exists\", newTable.getFullTableName()));"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "ACCUMULO_TABLE_DNE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Table '%s' does not exist{}",
        "error_message_variables": [
            ", oldTable.getIndexTableName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ACCUMULO_TABLE_DNE, format(\"Table '%s' does not exist\", oldTable.getIndexTableName()));"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "ACCUMULO_TABLE_EXISTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Table '%s' already exists{}",
        "error_message_variables": [
            ", newTable.getIndexTableName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ACCUMULO_TABLE_EXISTS, format(\"Table '%s' already exists\", newTable.getIndexTableName()));"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "ACCUMULO_TABLE_DNE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Table '%s' does not exist{}",
        "error_message_variables": [
            ", oldTable.getMetricsTableName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ACCUMULO_TABLE_DNE, format(\"Table '%s' does not exist\", oldTable.getMetricsTableName()));"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "ACCUMULO_TABLE_EXISTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Table '%s' already exists{}",
        "error_message_variables": [
            ", newTable.getMetricsTableName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ACCUMULO_TABLE_EXISTS, format(\"Table '%s' already exists\", newTable.getMetricsTableName()));"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SchemaNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SchemaNotFoundException(viewName.getSchemaName());"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "ALREADY_EXISTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "View already exists",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ALREADY_EXISTS, \"View already exists\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "ALREADY_EXISTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "View already exists as data table",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ALREADY_EXISTS, \"View already exists as data table\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SchemaNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SchemaNotFoundException(viewName.getSchemaName());"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "NOT_FOUND",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Failed to find source column %s to rename to %s{}",
        "error_message_variables": [
            ", source, target)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_FOUND, format(\"Failed to find source column %s to rename to %s\", source, target));"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "UNEXPECTED_ACCUMULO_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to get splits from Accumulo",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(UNEXPECTED_ACCUMULO_ERROR, \"Failed to get splits from Accumulo\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TableNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TableNotFoundException(new SchemaTableName(schema, table));"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloMetadataManager.java",
        "error_code": "FUNCTION_IMPLEMENTATION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Scan for default tablet returned more than one entry",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_ERROR, \"Scan for default tablet returned more than one entry\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloTableManager.java",
        "error_code": "ALREADY_EXISTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Namespace already exists: {}",
        "error_message_variables": [
            "schema"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ALREADY_EXISTS, \"Namespace already exists: \" + schema, e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloTableManager.java",
        "error_code": "UNEXPECTED_ACCUMULO_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to create Accumulo namespace: {}",
        "error_message_variables": [
            "schema"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(UNEXPECTED_ACCUMULO_ERROR, \"Failed to create Accumulo namespace: \" + schema, e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloTableManager.java",
        "error_code": "UNEXPECTED_ACCUMULO_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to delete Accumulo namespace: {}",
        "error_message_variables": [
            "schema"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(UNEXPECTED_ACCUMULO_ERROR, \"Failed to delete Accumulo namespace: \" + schema, e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloTableManager.java",
        "error_code": "UNEXPECTED_ACCUMULO_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to check for existence Accumulo namespace: {}",
        "error_message_variables": [
            "schema"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(UNEXPECTED_ACCUMULO_ERROR, \"Failed to check for existence Accumulo namespace: \" + schema, e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloTableManager.java",
        "error_code": "UNEXPECTED_ACCUMULO_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to create Accumulo table",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(UNEXPECTED_ACCUMULO_ERROR, \"Failed to create Accumulo table\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloTableManager.java",
        "error_code": "ACCUMULO_TABLE_EXISTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Accumulo table already exists",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ACCUMULO_TABLE_EXISTS, \"Accumulo table already exists\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloTableManager.java",
        "error_code": "UNEXPECTED_ACCUMULO_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to set locality groups",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(UNEXPECTED_ACCUMULO_ERROR, \"Failed to set locality groups\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloTableManager.java",
        "error_code": "ACCUMULO_TABLE_DNE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to set locality groups, table does not exist",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ACCUMULO_TABLE_DNE, \"Failed to set locality groups, table does not exist\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloTableManager.java",
        "error_code": "UNEXPECTED_ACCUMULO_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to set iterator on table {}",
        "error_message_variables": [
            "table"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(UNEXPECTED_ACCUMULO_ERROR, \"Failed to set iterator on table \" + table, e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloTableManager.java",
        "error_code": "ACCUMULO_TABLE_DNE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to set iterator, table does not exist",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ACCUMULO_TABLE_DNE, \"Failed to set iterator, table does not exist\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloTableManager.java",
        "error_code": "UNEXPECTED_ACCUMULO_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to delete Accumulo table",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(UNEXPECTED_ACCUMULO_ERROR, \"Failed to delete Accumulo table\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloTableManager.java",
        "error_code": "ACCUMULO_TABLE_DNE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to delete Accumulo table, does not exist",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ACCUMULO_TABLE_DNE, \"Failed to delete Accumulo table, does not exist\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloTableManager.java",
        "error_code": "UNEXPECTED_ACCUMULO_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to rename table",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(UNEXPECTED_ACCUMULO_ERROR, \"Failed to rename table\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloTableManager.java",
        "error_code": "ACCUMULO_TABLE_DNE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to rename table, old table does not exist",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ACCUMULO_TABLE_DNE, \"Failed to rename table, old table does not exist\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/AccumuloTableManager.java",
        "error_code": "ACCUMULO_TABLE_EXISTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to rename table, new table already exists",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ACCUMULO_TABLE_EXISTS, \"Failed to rename table, new table already exists\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/conf/AccumuloTableProperties.java",
        "error_code": "INVALID_TABLE_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Locality groups string is malformed. See documentation for proper format.",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_TABLE_PROPERTY, \"Locality groups string is malformed. See documentation for proper format.\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/index/ColumnCardinalityCache.java",
        "error_code": "UNEXPECTED_ACCUMULO_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Exception when getting cardinality",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(UNEXPECTED_ACCUMULO_ERROR, \"Exception when getting cardinality\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/index/ColumnCardinalityCache.java",
        "error_code": "FUNCTION_IMPLEMENTATION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "loadAll called with a non-homogeneous collection of cache keys",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_ERROR, \"loadAll called with a non-homogeneous collection of cache keys\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/index/Indexer.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "No indexed columns in table metadata. Refusing to index a table with no indexed columns",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"No indexed columns in table metadata. Refusing to index a table with no indexed columns\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/index/Indexer.java",
        "error_code": "UNEXPECTED_ACCUMULO_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Index mutation rejected by server",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(UNEXPECTED_ACCUMULO_ERROR, \"Index mutation rejected by server\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/index/Indexer.java",
        "error_code": "UNEXPECTED_ACCUMULO_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Index mutation was rejected by server on flush",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(UNEXPECTED_ACCUMULO_ERROR, \"Index mutation was rejected by server on flush\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/index/Indexer.java",
        "error_code": "ACCUMULO_TABLE_DNE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Accumulo table does not exist",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ACCUMULO_TABLE_DNE, \"Accumulo table does not exist\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/index/Indexer.java",
        "error_code": "UNEXPECTED_ACCUMULO_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Mutation was rejected by server on close",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(UNEXPECTED_ACCUMULO_ERROR, \"Mutation was rejected by server on close\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/index/IndexLookup.java",
        "error_code": "FUNCTION_IMPLEMENTATION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Should have received only one entry when scanning for number of rows in metrics table",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(FUNCTION_IMPLEMENTATION_ERROR, \"Should have received only one entry when scanning for number of rows in metrics table\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/index/IndexLookup.java",
        "error_code": "UNEXPECTED_ACCUMULO_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Exception when getting index ranges",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(UNEXPECTED_ACCUMULO_ERROR, \"Exception when getting index ranges\", e.getCause());"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/io/AccumuloPageSink.java",
        "error_code": "UNEXPECTED_ACCUMULO_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Accumulo error when creating BatchWriter and/or Indexer",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(UNEXPECTED_ACCUMULO_ERROR, \"Accumulo error when creating BatchWriter and/or Indexer\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/io/AccumuloPageSink.java",
        "error_code": "ACCUMULO_TABLE_DNE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Accumulo error when creating BatchWriter and/or Indexer, table does not exist",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ACCUMULO_TABLE_DNE, \"Accumulo error when creating BatchWriter and/or Indexer, table does not exist\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/io/AccumuloPageSink.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Column mapped as the Accumulo row ID cannot be null",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Column mapped as the Accumulo row ID cannot be null\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/io/AccumuloPageSink.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported type \" + type);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/io/AccumuloPageSink.java",
        "error_code": "UNEXPECTED_ACCUMULO_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Mutation rejected by server",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(UNEXPECTED_ACCUMULO_ERROR, \"Mutation rejected by server\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/io/AccumuloPageSink.java",
        "error_code": "UNEXPECTED_ACCUMULO_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Mutation rejected by server on flush",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(UNEXPECTED_ACCUMULO_ERROR, \"Mutation rejected by server on flush\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/io/AccumuloPageSink.java",
        "error_code": "UNEXPECTED_ACCUMULO_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Mutation rejected by server on flush",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(UNEXPECTED_ACCUMULO_ERROR, \"Mutation rejected by server on flush\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/io/AccumuloRecordCursor.java",
        "error_code": "IO_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Caught IO error from serializer on read",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(IO_ERROR, \"Caught IO error from serializer on read\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/io/AccumuloRecordCursor.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported type {}",
        "error_message_variables": [
            "getType(field)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported type \" + getType(field));"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/io/AccumuloRecordCursor.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported type {}",
        "error_message_variables": [
            "type"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported type \" + type);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/io/AccumuloRecordCursor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Expected field %s to be a type of %s but is %s\", field, Arrays.toString(expected), actual));"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/io/AccumuloRecordSet.java",
        "error_code": "UNEXPECTED_ACCUMULO_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Failed to create batch scanner for table %s{}",
        "error_message_variables": [
            ", table.getFullTableName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(UNEXPECTED_ACCUMULO_ERROR, format(\"Failed to create batch scanner for table %s\", table.getFullTableName()), e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/AccumuloTable.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"rowIdOrdinal is null, enable to locate rowId in given column list\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/AccumuloTable.java",
        "error_code": "NOT_FOUND",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Configured serializer class not found",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_FOUND, \"Configured serializer class not found\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/ZooKeeperMetadataManager.java",
        "error_code": "ZOOKEEPER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ZK error checking metadata root",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ZOOKEEPER_ERROR, \"ZK error checking metadata root\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/ZooKeeperMetadataManager.java",
        "error_code": "ZOOKEEPER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ZK error checking/creating default schema",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ZOOKEEPER_ERROR, \"ZK error checking/creating default schema\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/ZooKeeperMetadataManager.java",
        "error_code": "ZOOKEEPER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ZK error creating schema: {}",
        "error_message_variables": [
            "schemaName"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ZOOKEEPER_ERROR, \"ZK error creating schema: \" + schemaName, e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/ZooKeeperMetadataManager.java",
        "error_code": "ZOOKEEPER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ZK error deleting schema: {}",
        "error_message_variables": [
            "schemaName"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ZOOKEEPER_ERROR, \"ZK error deleting schema: \" + schemaName, e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/ZooKeeperMetadataManager.java",
        "error_code": "ZOOKEEPER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error fetching schemas",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ZOOKEEPER_ERROR, \"Error fetching schemas\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/ZooKeeperMetadataManager.java",
        "error_code": "ZOOKEEPER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error checking if schema exists",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ZOOKEEPER_ERROR, \"Error checking if schema exists\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/ZooKeeperMetadataManager.java",
        "error_code": "ZOOKEEPER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error fetching schemas",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ZOOKEEPER_ERROR, \"Error fetching schemas\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/ZooKeeperMetadataManager.java",
        "error_code": "ZOOKEEPER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error fetching table",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ZOOKEEPER_ERROR, \"Error fetching table\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/ZooKeeperMetadataManager.java",
        "error_code": "ZOOKEEPER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error checking if schema exists",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ZOOKEEPER_ERROR, \"Error checking if schema exists\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/ZooKeeperMetadataManager.java",
        "error_code": "ZOOKEEPER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error fetching schemas",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ZOOKEEPER_ERROR, \"Error fetching schemas\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/ZooKeeperMetadataManager.java",
        "error_code": "ZOOKEEPER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error fetching view",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ZOOKEEPER_ERROR, \"Error fetching view\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/ZooKeeperMetadataManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(format(\"Metadata for table %s already exists\", tableName));"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/ZooKeeperMetadataManager.java",
        "error_code": "ZOOKEEPER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ZK error when checking if table already exists",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ZOOKEEPER_ERROR, \"ZK error when checking if table already exists\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/ZooKeeperMetadataManager.java",
        "error_code": "ZOOKEEPER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error creating table znode in ZooKeeper",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ZOOKEEPER_ERROR, \"Error creating table znode in ZooKeeper\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/ZooKeeperMetadataManager.java",
        "error_code": "ZOOKEEPER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ZK error when deleting table metadata",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ZOOKEEPER_ERROR, \"ZK error when deleting table metadata\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/ZooKeeperMetadataManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IOException(format(\"Metadata for view %s already exists\", tableName));"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/ZooKeeperMetadataManager.java",
        "error_code": "ZOOKEEPER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ZK error when checking if view already exists",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ZOOKEEPER_ERROR, \"ZK error when checking if view already exists\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/ZooKeeperMetadataManager.java",
        "error_code": "ZOOKEEPER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error creating view znode in ZooKeeper",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ZOOKEEPER_ERROR, \"Error creating view znode in ZooKeeper\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/ZooKeeperMetadataManager.java",
        "error_code": "ZOOKEEPER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ZK error when deleting view metadata",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ZOOKEEPER_ERROR, \"ZK error when deleting view metadata\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/ZooKeeperMetadataManager.java",
        "error_code": "ZOOKEEPER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error checking if path is an AccumuloTable object",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ZOOKEEPER_ERROR, \"Error checking if path is an AccumuloTable object\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/metadata/ZooKeeperMetadataManager.java",
        "error_code": "ZOOKEEPER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error checking if path is an AccumuloView object",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ZOOKEEPER_ERROR, \"Error checking if path is an AccumuloView object\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/model/AccumuloTableHandle.java",
        "error_code": "NOT_FOUND",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Configured serializer class not found",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_FOUND, \"Configured serializer class not found\", e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/model/Field.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported Trino type: {}",
        "error_message_variables": [
            "type"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported Trino type: \" + type);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/model/SerializedRange.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/model/SerializedRange.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/serializers/LexicoderRowSerializer.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "No lexicoder for type {}",
        "error_message_variables": [
            "type"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"No lexicoder for type \" + type);"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/serializers/StringRowSerializer.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "arrays are not (yet?) supported for StringRowSerializer",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"arrays are not (yet?) supported for StringRowSerializer\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/serializers/StringRowSerializer.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "arrays are not (yet?) supported for StringRowSerializer",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"arrays are not (yet?) supported for StringRowSerializer\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/serializers/StringRowSerializer.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "maps are not (yet?) supported for StringRowSerializer",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"maps are not (yet?) supported for StringRowSerializer\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/serializers/StringRowSerializer.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "maps are not (yet?) supported for StringRowSerializer",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"maps are not (yet?) supported for StringRowSerializer\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/serializers/StringRowSerializer.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "arrays are not (yet?) supported for StringRowSerializer",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"arrays are not (yet?) supported for StringRowSerializer\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/serializers/StringRowSerializer.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "maps are not (yet?) supported for StringRowSerializer",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"maps are not (yet?) supported for StringRowSerializer\");"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/serializers/StringRowSerializer.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"StringLexicoder does not support encoding type %s, object class is %s{}",
        "error_message_variables": [
            ", type, value.getClass())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, format(\"StringLexicoder does not support encoding type %s, object class is %s\", type, value.getClass()));"
    },
    {
        "file_path": "plugin/trino-accumulo/src/main/java/io/trino/plugin/accumulo/serializers/StringRowSerializer.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported type {}",
        "error_message_variables": [
            "type"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported type \" + type);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Multiple tables matched: {}",
        "error_message_variables": [
            "schemaTableName"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Multiple tables matched: \" + schemaTableName);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Query not supported: ResultSetMetaData not available for query: {}",
        "error_message_variables": [
            "preparedQuery.query()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Query not supported: ResultSetMetaData not available for query: \" + preparedQuery.query());"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to get table handle for prepared query. {}",
        "error_message_variables": [
            "firstNonNull(e.getMessage(), e)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, \"Failed to get table handle for prepared query. \" + firstNonNull(e.getMessage(), e), e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Procedure is not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Procedure is not supported\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "Failure when processing column information for table %s: %s\".formatted(currentTable, firstNonNull(e.getMessage(), e))",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Failure when processing column information for table %s: %s\".formatted(currentTable, firstNonNull(e.getMessage(), e)), e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "The requested column listing mode is not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"The requested column listing mode is not supported\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SchemaNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SchemaNotFoundException(schemaTableName.getSchemaName());"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support creating tables with table comment",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support creating tables with table comment\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support creating tables with column comment",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support creating tables with column comment\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support adding columns with comments",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support adding columns with comments\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"topNFunction() implemented without implementing supportsTopN()\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"topNFunction() implemented without implementing isTopNLimitGuaranteed()\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "limitFunction() is implemented without isLimitGuaranteed()",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, \"limitFunction() is implemented without isLimitGuaranteed()\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/BaseJdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/CachingJdbcClient.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedExecutionException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedExecutionException(e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/DefaultJdbcMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support versioned tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support versioned tables\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/DefaultJdbcMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException(\"Unsupported timestamp time zone domain: \" + timestampTimeZoneDomain);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/DefaultJdbcMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support query or task retries",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support query or task retries\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/DefaultJdbcMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Query and task retries are incompatible with non-transactional inserts",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Query and task retries are incompatible with non-transactional inserts\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/DefaultJdbcMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support replacing tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support replacing tables\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/DefaultJdbcMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support replacing tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support replacing tables\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/DefaultQueryBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": ".ifPresent(column -> { throw new IllegalArgumentException(format(\"Column %s has an expression and a constraint attached at the same time\", column)); });"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/DefaultQueryBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported relation: \" + baseRelation);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/ExtraCredentialsBasedIdentityCacheMapping.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/FailingExecutor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/ForwardingConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/ForwardingConnection.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/JdbcClient.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support setting table comments",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support setting table comments\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/JdbcClient.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support setting column comments",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support setting column comments\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/JdbcClient.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support setting table properties",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support setting table properties\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/JdbcMetadataSessionProperties.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Domain compaction threshold (%s) must be greater than 0{}",
        "error_message_variables": [
            ", domainCompactionThreshold)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, format(\"Domain compaction threshold (%s) must be greater than 0\", domainCompactionThreshold));"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/JdbcMetadataSessionProperties.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Domain compaction threshold (%s) cannot exceed %s{}",
        "error_message_variables": [
            ", domainCompactionThreshold, max)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, format(\"Domain compaction threshold (%s) cannot exceed %s\", domainCompactionThreshold, max));"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/JdbcPageSink.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/JdbcPageSink.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/JdbcPageSink.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/JdbcPageSink.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/JdbcPageSink.java",
        "error_code": "JDBC_NON_TRANSIENT_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_NON_TRANSIENT_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/JdbcPageSink.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to insert data: {}",
        "error_message_variables": [
            "firstNonNull(e.getMessage(), e)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, \"Failed to insert data: \" + firstNonNull(e.getMessage(), e), e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/JdbcPageSink.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/JdbcRecordCursor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/JdbcRecordCursor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/JdbcRemoteIdentifiers.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/JdbcRemoteIdentifiers.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/JdbcWriteSessionProperties.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"%s must be greater than 0: %s{}",
        "error_message_variables": [
            ", WRITE_BATCH_SIZE, maxBatchSize)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, format(\"%s must be greater than 0: %s\", WRITE_BATCH_SIZE, maxBatchSize));"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/JdbcWriteSessionProperties.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"%s cannot exceed %s: %s{}",
        "error_message_variables": [
            ", WRITE_BATCH_SIZE, MAX_ALLOWED_WRITE_BATCH_SIZE, maxBatchSize)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, format(\"%s cannot exceed %s: %s\", WRITE_BATCH_SIZE, MAX_ALLOWED_WRITE_BATCH_SIZE, maxBatchSize));"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/ReusableConnectionFactory.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/StandardColumnMappings.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Driver returned null LocalDate for a non-null value",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, \"Driver returned null LocalDate for a non-null value\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/TracingDataSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/TracingDataSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/TracingDataSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/TracingDataSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/TracingDataSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/TracingDataSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/TracingDataSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/TracingDataSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/expression/ExpressionMappingParser.java",
        "error_code": "format(\"Error at %s:%s: %s\", line, charPositionInLine, message)",
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Error at %s:%s: %s\", line, charPositionInLine, message), e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/expression/ExpressionMappingParser.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"expression pattern is too large (stack overflow while parsing)\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/expression/ExpressionPatternBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"Unsupported parameter %s (%s) from %s\", result, result.getClass(), parameter));"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/expression/ExpressionPatternBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/expression/ExpressionPatternBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"Cannot combine %s and %s\", aggregate, nextResult));"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/expression/GenericRewrite.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"Unsupported value: %s (%s)\", value, value.getClass()));"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/expression/MatchContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"No value recorded for: \" + name);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/expression/MatchContext.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"%s is already mapped to %s, cannot remap to %s\", name, first, second));"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/expression/RewriteExactNumericConstant.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported type: \" + type);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/expression/TypeParameterCapture.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported parameter: \" + parameter);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/logging/FormatBasedRemoteQueryModifier.java",
        "error_code": "JDBC_NON_TRANSIENT_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Rendering metadata using 'query.comment-format' does not meet security criteria: {}",
        "error_message_variables": [
            "sql"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_NON_TRANSIENT_ERROR, \"Rendering metadata using 'query.comment-format' does not meet security criteria: \" + sql);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/main/java/io/trino/plugin/jdbc/procedure/ExecuteProcedure.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to execute query. {}",
        "error_message_variables": [
            "firstNonNull(e.getMessage(), e)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, \"Failed to execute query. \" + firstNonNull(e.getMessage(), e), e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/BaseJdbcConnectorTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "// TODO throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/BaseJdbcConnectorTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/BaseJdbcConnectorTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/BaseJdbcConnectorTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Query id not found for: \" + query);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/BaseJdbcConnectorTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/CastDataTypeTestTable.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/TestCachingJdbcClient.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e1);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/TestCachingJdbcClient.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"first attempt is poised to fail\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/TestCachingJdbcClient.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/TestingH2JdbcClient.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support setting column comments",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support setting column comments\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/TestingH2JdbcClient.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported column type: {}",
        "error_message_variables": [
            "type.getDisplayName()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported column type: \" + type.getDisplayName());"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/TestingH2JdbcClient.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support renaming tables across schemas",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support renaming tables across schemas\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/TestingH2JdbcClient.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Procedure not supported: ResultSetMetaData not available for query: {}",
        "error_message_variables": [
            "procedureQuery.query()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Procedure not supported: ResultSetMetaData not available for query: \" + procedureQuery.query());"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/TestingH2JdbcClient.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Procedure has multiple ResultSets for query: {}",
        "error_message_variables": [
            "procedureQuery.query()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Procedure has multiple ResultSets for query: \" + procedureQuery.query());"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/TestingH2JdbcClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to get table handle for procedure query. {}",
        "error_message_variables": [
            "firstNonNull(e.getMessage(), e)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, \"Failed to get table handle for procedure query. \" + firstNonNull(e.getMessage(), e), e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/TestRetryingConnectionFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NullPointerException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NullPointerException(\"Testing NPE\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/TestRetryingConnectionFactory.java",
        "error_code": "StandardErrorCode.NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Testing Trino exception",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(StandardErrorCode.NOT_SUPPORTED, \"Testing Trino exception\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/TestRetryingConnectionFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLException(\"Testing sql exception\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/TestRetryingConnectionFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLRecoverableException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLRecoverableException(\"Testing sql recoverable exception\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/TestRetryingConnectionFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(new SQLRecoverableException(\"Testing sql recoverable exception\"));"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/TestRetryingConnectionFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SQLTransientException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SQLTransientException(\"Testing sql transient exception\");"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/TestRetryingConnectionFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(new SQLTransientException(\"Testing sql transient exception\"));"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/TestRetryingConnectionFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unsupported action:\" + action);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/TestRetryingConnectionFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/TestReusableConnectionFactory.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/credential/TestCredentialProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/expression/BaseTestRewriteLikeWithCaseSensitivity.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/expression/TestGenericRewrite.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-base-jdbc/src/test/java/io/trino/plugin/jdbc/expression/TestGenericRewrite.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryArrowToPageConverter.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unhandled type for %s: %s{}",
        "error_message_variables": [
            ", javaType.getSimpleName(), type)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Unhandled type for %s: %s\", javaType.getSimpleName(), type));"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryArrowToPageConverter.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unhandled type for %s: %s{}",
        "error_message_variables": [
            ", javaType.getSimpleName(), type)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Unhandled type for %s: %s\", javaType.getSimpleName(), type));"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryArrowToPageConverter.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unhandled type for %s: %s{}",
        "error_message_variables": [
            ", javaType.getSimpleName(), type)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Unhandled type for %s: %s\", javaType.getSimpleName(), type), ex);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryArrowToPageConverter.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unhandled type for Slice: {}",
        "error_message_variables": [
            "type.getTypeSignature()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Unhandled type for Slice: \" + type.getTypeSignature());"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryArrowToPageConverter.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unhandled type for Object: {}",
        "error_message_variables": [
            "type.getTypeSignature()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Unhandled type for Object: \" + type.getTypeSignature());"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryClient.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedExecutionException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedExecutionException(e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryClient.java",
        "error_code": "BIGQUERY_LISTING_DATASET_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to retrieve datasets from BigQuery",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(BIGQUERY_LISTING_DATASET_ERROR, \"Failed to retrieve datasets from BigQuery\", e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryClient.java",
        "error_code": "BIGQUERY_LISTING_TABLE_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to retrieve tables from BigQuery",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(BIGQUERY_LISTING_TABLE_ERROR, \"Failed to retrieve tables from BigQuery\", e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryClient.java",
        "error_code": "BIGQUERY_FAILED_TO_EXECUTE_QUERY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to run the query: {}",
        "error_message_variables": [
            "firstNonNull(e.getMessage(), e)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(BIGQUERY_FAILED_TO_EXECUTE_QUERY, \"Failed to run the query: \" + firstNonNull(e.getMessage(), e), e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryClient.java",
        "error_code": "BaseHttpServiceException.UNKNOWN_CODE",
        "error_code_name": null,
        "error_class_name": "BigQueryException",
        "error_message_template": "ormat(\"Failed to run the query [%s]{}",
        "error_message_variables": [
            ", job.getQuery())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new BigQueryException(BaseHttpServiceException.UNKNOWN_CODE, format(\"Failed to run the query [%s]\", job.getQuery()), e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryClient.java",
        "error_code": "BIGQUERY_INVALID_STATEMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to get schema for query: {}",
        "error_message_variables": [
            "sql"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(BIGQUERY_INVALID_STATEMENT, \"Failed to get schema for query: \" + sql, e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryClient.java",
        "error_code": "BIGQUERY_INVALID_STATEMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported statement type: {}",
        "error_message_variables": [
            "queryStatistics.getStatementType()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(BIGQUERY_INVALID_STATEMENT, \"Unsupported statement type: \" + queryStatistics.getStatementType());"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryClient.java",
        "error_code": "BIGQUERY_INVALID_STATEMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to get destination table for query. {}",
        "error_message_variables": [
            "firstNonNull(e.getMessage(), e)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(BIGQUERY_INVALID_STATEMENT, \"Failed to get destination table for query. \" + firstNonNull(e.getMessage(), e), e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryClient.java",
        "error_code": "schemaTableName",
        "error_code_name": null,
        "error_class_name": "TableNotFoundException",
        "error_message_template": "ormat(\"Table '%s' has no schema{}",
        "error_message_variables": [
            ", schemaTableName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TableNotFoundException(schemaTableName, format(\"Table '%s' has no schema\", schemaTableName));"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryClient.java",
        "error_code": "BIGQUERY_AMBIGUOUS_OBJECT_NAME",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Found ambiguous names in BigQuery when looking up '{}\"': {}",
        "error_message_variables": [
            "getAnyRemoteName().toLowerCase(ENGLISH)",
            "remoteNames"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(BIGQUERY_AMBIGUOUS_OBJECT_NAME, \"Found ambiguous names in BigQuery when looking up '\" + getAnyRemoteName().toLowerCase(ENGLISH) + \"': \" + remoteNames);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryMetadata.java",
        "error_code": "BIGQUERY_LISTING_TABLE_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to retrieve tables from BigQuery",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(BIGQUERY_LISTING_TABLE_ERROR, \"Failed to retrieve tables from BigQuery\", e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support versioned tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support versioned tables\");"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TableNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TableNotFoundException(viewDefinitionTableName);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e.getCause());"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support replacing tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support replacing tables\");"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support replacing tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support replacing tables\");"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SchemaNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SchemaNotFoundException(schemaName);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryMetadata.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryMetadata.java",
        "error_code": "BIGQUERY_UNSUPPORTED_OPERATION",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support dropping wildcard tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(BIGQUERY_UNSUPPORTED_OPERATION, \"This connector does not support dropping wildcard tables\");"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryMetadata.java",
        "error_code": "BIGQUERY_UNSUPPORTED_OPERATION",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support inserting into wildcard tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(BIGQUERY_UNSUPPORTED_OPERATION, \"This connector does not support inserting into wildcard tables\");"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryMetadata.java",
        "error_code": "BIGQUERY_FAILED_TO_EXECUTE_QUERY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(BIGQUERY_FAILED_TO_EXECUTE_QUERY, e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryMetadata.java",
        "error_code": "BIGQUERY_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Response has error: %s{}",
        "error_message_variables": [
            ", response.getError().getMessage())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(BIGQUERY_BAD_WRITE, format(\"Response has error: %s\", response.getError().getMessage()));"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryMetadata.java",
        "error_code": "BIGQUERY_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to insert rows",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(BIGQUERY_BAD_WRITE, \"Failed to insert rows\", e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryPageSink.java",
        "error_code": "BIGQUERY_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Response has error: %s{}",
        "error_message_variables": [
            ", response.getError().getMessage())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(BIGQUERY_BAD_WRITE, format(\"Response has error: %s\", response.getError().getMessage()));"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryPageSink.java",
        "error_code": "BIGQUERY_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to insert rows",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(BIGQUERY_BAD_WRITE, \"Failed to insert rows\", e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryQueryPageSource.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unhandled type for %s: %s{}",
        "error_message_variables": [
            ", javaType.getSimpleName(), type)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Unhandled type for %s: %s\", javaType.getSimpleName(), type));"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryQueryPageSource.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unhandled type for %s: %s{}",
        "error_message_variables": [
            ", javaType.getSimpleName(), type)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Unhandled type for %s: %s\", javaType.getSimpleName(), type));"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryQueryPageSource.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unhandled type for %s: %s{}",
        "error_message_variables": [
            ", javaType.getSimpleName(), type)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Unhandled type for %s: %s\", javaType.getSimpleName(), type), e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryQueryPageSource.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unhandled type for Slice: {}",
        "error_message_variables": [
            "type.getTypeSignature()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Unhandled type for Slice: \" + type.getTypeSignature());"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryReadClientFactory.java",
        "error_code": "Error creating BigQueryReadClient",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Error creating BigQueryReadClient\", e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQuerySplitManager.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported table type: {}",
        "error_message_variables": [
            "tableType"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported table type: \" + tableType);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQuerySplitManager.java",
        "error_code": "BIGQUERY_FAILED_TO_EXECUTE_QUERY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to compute empty projection",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(BIGQUERY_FAILED_TO_EXECUTE_QUERY, \"Failed to compute empty projection\", e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQuerySplitManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryStorageArrowPageSource.java",
        "error_code": "Error deserializing next Arrow Batch",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Error deserializing next Arrow Batch\", e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryStorageArrowPageSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryStorageAvroPageSource.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to extract dereference value from record",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Failed to extract dereference value from record\");"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryStorageAvroPageSource.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unhandled type for %s: %s{}",
        "error_message_variables": [
            ", javaType.getSimpleName(), type)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Unhandled type for %s: %s\", javaType.getSimpleName(), type));"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryStorageAvroPageSource.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unhandled type for %s: %s{}",
        "error_message_variables": [
            ", javaType.getSimpleName(), type)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Unhandled type for %s: %s\", javaType.getSimpleName(), type));"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryStorageAvroPageSource.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unhandled type for Slice: {}",
        "error_message_variables": [
            "type.getTypeSignature()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Unhandled type for Slice: \" + type.getTypeSignature());"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryStorageAvroPageSource.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unhandled type for Object: {}",
        "error_message_variables": [
            "type.getTypeSignature()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Unhandled type for Object: \" + type.getTypeSignature());"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryStorageAvroPageSource.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid Avro schema: {}",
        "error_message_variables": [
            "firstNonNull(e.getMessage(), e)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Invalid Avro schema: \" + firstNonNull(e.getMessage(), e), e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryStorageAvroPageSource.java",
        "error_code": "Error determining the end of Avro buffer",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Error determining the end of Avro buffer\", e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryStorageAvroPageSource.java",
        "error_code": "Error reading next Avro Record",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Error reading next Avro Record\", e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryTypeManager.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported column type: {}",
        "error_message_variables": [
            "type.getDisplayName()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported column type: \" + type.getDisplayName());"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported type: \" + bigqueryType);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryTypeUtils.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "BigQuery supports dates between 0001-01-01 and 9999-12-31 but got {}",
        "error_message_variables": [
            "LocalDate.ofEpochDay(days)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"BigQuery supports dates between 0001-01-01 and 9999-12-31 but got \" + LocalDate.ofEpochDay(days));"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryTypeUtils.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "BigQuery does not support null elements in arrays",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"BigQuery does not support null elements in arrays\");"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryTypeUtils.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Expected row value field count does not match type field count",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Expected row value field count does not match type field count\");"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryTypeUtils.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported type: {}",
        "error_message_variables": [
            "type"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported type: \" + type);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/BigQueryWriteClientFactory.java",
        "error_code": "Error creating BigQueryWriteClient",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Error creating BigQueryWriteClient\", e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/DefaultBigQueryCredentialsProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/ProxyTransportFactory.java",
        "error_code": "BIGQUERY_PROXY_SSL_INITIALIZATION_FAILED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(BIGQUERY_PROXY_SSL_INITIALIZATION_FAILED, e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/ReadRowsHelper.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "NoSuchElementException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new NoSuchElementException(\"No more server responses\");"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/ReadSessionCreator.java",
        "error_code": "BIGQUERY_CREATE_READ_SESSION_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot create read session{}",
        "error_message_variables": [
            "firstNonNull(e.getMessage(), e)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(BIGQUERY_CREATE_READ_SESSION_ERROR, \"Cannot create read session\" + firstNonNull(e.getMessage(), e), e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/RetryOptionsConfigurer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/RetryOptionsConfigurer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/StaticBigQueryCredentialsSupplier.java",
        "error_code": "Failed to create Credentials from file",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Failed to create Credentials from file\", e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/StaticBigQueryCredentialsSupplier.java",
        "error_code": "Failed to create Credentials from stream",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Failed to create Credentials from stream\", e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/ViewMaterializationCache.java",
        "error_code": "BaseServiceException.UNKNOWN_CODE",
        "error_code_name": null,
        "error_class_name": "BigQueryException",
        "error_message_template": "ormat(\"Job %s has been interrupted{}",
        "error_message_variables": [
            ", job.getJobId())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new BigQueryException(BaseServiceException.UNKNOWN_CODE, format(\"Job %s has been interrupted\", job.getJobId()), e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/main/java/io/trino/plugin/bigquery/ptf/Query.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported type: {}",
        "error_message_variables": [
            "field.getType()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported type: \" + field.getType());"
    },
    {
        "file_path": "plugin/trino-bigquery/src/test/java/io/trino/plugin/bigquery/BigQueryQueryRunner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/test/java/io/trino/plugin/bigquery/BigQueryQueryRunner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/test/java/io/trino/plugin/bigquery/TestBigQueryInstanceCleaner.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected object type \" + objectType);"
    },
    {
        "file_path": "plugin/trino-bigquery/src/test/java/io/trino/plugin/bigquery/TestBigQueryWithProxyTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-blackhole/src/main/java/io/trino/plugin/blackhole/BlackHoleMetadata.java",
        "error_code": "ALREADY_EXISTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Schema [%s] already exists{}",
        "error_message_variables": [
            ", schemaName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(ALREADY_EXISTS, format(\"Schema [%s] already exists\", schemaName));"
    },
    {
        "file_path": "plugin/trino-blackhole/src/main/java/io/trino/plugin/blackhole/BlackHoleMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support versioned tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support versioned tables\");"
    },
    {
        "file_path": "plugin/trino-blackhole/src/main/java/io/trino/plugin/blackhole/BlackHoleMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"The deprecated listTableColumns is not supported because streamTableColumns is implemented instead\");"
    },
    {
        "file_path": "plugin/trino-blackhole/src/main/java/io/trino/plugin/blackhole/BlackHoleMetadata.java",
        "error_code": "INVALID_TABLE_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Distribute columns not defined on table: {}",
        "error_message_variables": [
            "undefinedColumns"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_TABLE_PROPERTY, \"Distribute columns not defined on table: \" + undefinedColumns);"
    },
    {
        "file_path": "plugin/trino-blackhole/src/main/java/io/trino/plugin/blackhole/BlackHoleMetadata.java",
        "error_code": "TABLE_ALREADY_EXISTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Table %s already exists{}",
        "error_message_variables": [
            ".formatted(tableMetadata.getTable())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(TABLE_ALREADY_EXISTS, \"Table %s already exists\".formatted(tableMetadata.getTable()));"
    },
    {
        "file_path": "plugin/trino-blackhole/src/main/java/io/trino/plugin/blackhole/BlackHoleMetadata.java",
        "error_code": "INVALID_TABLE_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}\" property is negative",
        "error_message_variables": [
            "SPLIT_COUNT_PROPERTY"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_TABLE_PROPERTY, SPLIT_COUNT_PROPERTY + \" property is negative\");"
    },
    {
        "file_path": "plugin/trino-blackhole/src/main/java/io/trino/plugin/blackhole/BlackHoleMetadata.java",
        "error_code": "INVALID_TABLE_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}\" property is negative",
        "error_message_variables": [
            "PAGES_PER_SPLIT_PROPERTY"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_TABLE_PROPERTY, PAGES_PER_SPLIT_PROPERTY + \" property is negative\");"
    },
    {
        "file_path": "plugin/trino-blackhole/src/main/java/io/trino/plugin/blackhole/BlackHoleMetadata.java",
        "error_code": "INVALID_TABLE_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}\" property is negative",
        "error_message_variables": [
            "ROWS_PER_PAGE_PROPERTY"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_TABLE_PROPERTY, ROWS_PER_PAGE_PROPERTY + \" property is negative\");"
    },
    {
        "file_path": "plugin/trino-blackhole/src/main/java/io/trino/plugin/blackhole/BlackHoleMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SchemaNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SchemaNotFoundException(schemaName);"
    },
    {
        "file_path": "plugin/trino-blackhole/src/main/java/io/trino/plugin/blackhole/BlackHoleNodePartitioningProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "plugin/trino-blackhole/src/main/java/io/trino/plugin/blackhole/BlackHolePageSourceProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unknown javaType: \" + javaType.getName());"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraClientModule.java",
        "error_code": "CASSANDRA_SSL_INITIALIZATION_FAILURE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(CASSANDRA_SSL_INITIALIZATION_FAILURE, e);"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraClientModule.java",
        "error_code": "Failed to add contact point: \" + contactPoint",
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Failed to add contact point: \" + contactPoint, e);"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support versioned tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support versioned tables\");"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support replacing tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support replacing tables\");"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraMetadata.java",
        "error_code": "PERMISSION_DENIED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "DROP TABLE is disabled in this Cassandra catalog",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(PERMISSION_DENIED, \"DROP TABLE is disabled in this Cassandra catalog\");"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Dropping materialized views not yet supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Dropping materialized views not yet supported\");"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support query retries",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support query retries\");"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support replacing tables",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support replacing tables\");"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support creating tables with table comment",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support creating tables with table comment\");"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support creating tables with column comment",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support creating tables with column comment\");"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support query retries",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support query retries\");"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Inserting into materialized views not yet supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Inserting into materialized views not yet supported\");"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Delete without primary key or partition key is not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Delete without primary key or partition key is not supported\");"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraPageSink.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported column type: {}",
        "error_message_variables": [
            "type.getDisplayName()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported column type: \" + type.getDisplayName());"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraRecordCursor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Cannot retrieve double for \" + getCassandraType(i));"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraRecordCursor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Cannot retrieve long for \" + getCassandraType(i));"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraRecordCursor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Timestamp column can not be accessed with getSlice\");"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraRecordCursor.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"getObject cannot be called for \" + cassandraType);"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraSession.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SchemaNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SchemaNotFoundException(caseInsensitiveSchemaName);"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraSession.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TableNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TableNotFoundException(new SchemaTableName(keyspace.getName().asInternal(), caseInsensitiveTableName));"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraSession.java",
        "error_code": "interrupted",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "interrupted"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"interrupted\", interrupted);"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraSplitManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Unsupported token range class %s\", tokenRange.getClass().getName()));"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraTypeManager.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Mismatch between the number of field names (%s) and the number of field types (%s) for the data type %s{}",
        "error_message_variables": [
            ", fieldNames.size(), fieldTypes.size(), dataType)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"Mismatch between the number of field names (%s) and the number of field types (%s) for the data type %s\", fieldNames.size(), fieldTypes.size(), dataType));"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case LIST, SET, MAP, TUPLE, UDT -> throw new IllegalStateException(\"Handling of type \" + this + \" is not implemented\");"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unsupported type: \" + cassandraType);"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraTypeManager.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid IP address binary length: {}",
        "error_message_variables": [
            "((Slice) trinoNativeValue).length()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Invalid IP address binary length: \" + ((Slice) trinoNativeValue).length(), e);"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraTypeManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Back conversion not implemented for \" + this);"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraTypeManager.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported type: {}",
        "error_message_variables": [
            "type"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported type: \" + type);"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraTypeManager.java",
        "error_code": "INVALID_CAST_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot cast value to IPADDRESS: {}",
        "error_message_variables": [
            "slice.toStringUtf8()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_CAST_ARGUMENT, \"Cannot cast value to IPADDRESS: \" + slice.toStringUtf8());"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/CassandraTypeManager.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid InetAddress length: {}",
        "error_message_variables": [
            "address.length"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Invalid InetAddress length: \" + address.length);"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/ptf/Query.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot get column definition",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Cannot get column definition\", Throwables.getRootCause(e));"
    },
    {
        "file_path": "plugin/trino-cassandra/src/main/java/io/trino/plugin/cassandra/ptf/Query.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot get column definition",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, \"Cannot get column definition\");"
    },
    {
        "file_path": "plugin/trino-cassandra/src/test/java/io/trino/plugin/cassandra/CassandraCreateAndInsertDataSetup.java",
        "error_code": "format(\"Error refreshing size estimates for %s.%s\", keyspaceName, tableName)",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(format(\"Error refreshing size estimates for %s.%s\", keyspaceName, tableName), e);"
    },
    {
        "file_path": "plugin/trino-cassandra/src/test/java/io/trino/plugin/cassandra/CassandraServer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TimeoutException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TimeoutException(format(\"Attempting to refresh size estimates for table %s.%s has timed out after %s\", keyspace, table, REFRESH_SIZE_ESTIMATES_TIMEOUT));"
    },
    {
        "file_path": "plugin/trino-cassandra/src/test/java/io/trino/plugin/cassandra/TestCassandraConnector.java",
        "error_code": "row \" + rowNumber",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"row \" + rowNumber, e);"
    },
    {
        "file_path": "plugin/trino-cassandra/src/test/java/io/trino/plugin/cassandra/TestCassandraConnector.java",
        "error_code": "row \" + rowNumber",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"row \" + rowNumber, e);"
    },
    {
        "file_path": "plugin/trino-cassandra/src/test/java/io/trino/plugin/cassandra/TestCassandraConnector.java",
        "error_code": "row \" + rowNumber",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"row \" + rowNumber, e);"
    },
    {
        "file_path": "plugin/trino-cassandra/src/test/java/io/trino/plugin/cassandra/TestCassandraConnector.java",
        "error_code": "column \" + column",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"column \" + column, e);"
    },
    {
        "file_path": "plugin/trino-cassandra/src/test/java/io/trino/plugin/cassandra/TestCassandraTable.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-cassandra/src/test/java/io/trino/plugin/cassandra/TestingScyllaServer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TimeoutException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TimeoutException(format(\"Attempting to refresh size estimates for table %s.%s has timed out after %s\", keyspace, table, REFRESH_SIZE_ESTIMATES_TIMEOUT));"
    },
    {
        "file_path": "plugin/trino-clickhouse/src/main/java/io/trino/plugin/clickhouse/ClickHouseClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-clickhouse/src/main/java/io/trino/plugin/clickhouse/ClickHouseClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-clickhouse/src/main/java/io/trino/plugin/clickhouse/ClickHouseClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-clickhouse/src/main/java/io/trino/plugin/clickhouse/ClickHouseClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-clickhouse/src/main/java/io/trino/plugin/clickhouse/ClickHouseClient.java",
        "error_code": "SCHEMA_NOT_EMPTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot drop non-empty schema '%s'{}",
        "error_message_variables": [
            ".formatted(remoteSchemaName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(SCHEMA_NOT_EMPTY, \"Cannot drop non-empty schema '%s'\".formatted(remoteSchemaName));"
    },
    {
        "file_path": "plugin/trino-clickhouse/src/main/java/io/trino/plugin/clickhouse/ClickHouseClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-clickhouse/src/main/java/io/trino/plugin/clickhouse/ClickHouseClient.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support setting column types",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support setting column types\");"
    },
    {
        "file_path": "plugin/trino-clickhouse/src/main/java/io/trino/plugin/clickhouse/ClickHouseClient.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support dropping a not null constraint",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"This connector does not support dropping a not null constraint\");"
    },
    {
        "file_path": "plugin/trino-clickhouse/src/main/java/io/trino/plugin/clickhouse/ClickHouseClient.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "MODIFYING_ROWS_MESSAGE"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, MODIFYING_ROWS_MESSAGE);"
    },
    {
        "file_path": "plugin/trino-clickhouse/src/main/java/io/trino/plugin/clickhouse/ClickHouseClient.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "MODIFYING_ROWS_MESSAGE"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, MODIFYING_ROWS_MESSAGE);"
    },
    {
        "file_path": "plugin/trino-clickhouse/src/main/java/io/trino/plugin/clickhouse/ClickHouseClient.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported column type: {}",
        "error_message_variables": [
            "type"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported column type: \" + type);"
    },
    {
        "file_path": "plugin/trino-clickhouse/src/main/java/io/trino/plugin/clickhouse/ClickHouseClient.java",
        "error_code": "JDBC_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(JDBC_ERROR, e);"
    },
    {
        "file_path": "plugin/trino-clickhouse/src/main/java/io/trino/plugin/clickhouse/ClickHouseClient.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid InetAddress length: {}",
        "error_message_variables": [
            "address.length"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Invalid InetAddress length: \" + address.length);"
    },
    {
        "file_path": "plugin/trino-clickhouse/src/main/java/io/trino/plugin/clickhouse/ClickHouseClient.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-clickhouse/src/main/java/io/trino/plugin/clickhouse/TrinoToClickHouseWriteChecker.java",
        "error_code": "INVALID_ARGUMENTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Value must be between %d and %d in ClickHouse: %d{}",
        "error_message_variables": [
            ", range.getMin(), range.getMax(), value)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_ARGUMENTS, format(\"Value must be between %d and %d in ClickHouse: %d\", range.getMin(), range.getMax(), value));"
    },
    {
        "file_path": "plugin/trino-clickhouse/src/main/java/io/trino/plugin/clickhouse/TrinoToClickHouseWriteChecker.java",
        "error_code": "INVALID_ARGUMENTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Value must be between %s and %s in ClickHouse: %s{}",
        "error_message_variables": [
            ", range.getMin(), range.getMax(), value)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_ARGUMENTS, format(\"Value must be between %s and %s in ClickHouse: %s\", range.getMin(), range.getMax(), value));"
    },
    {
        "file_path": "plugin/trino-clickhouse/src/main/java/io/trino/plugin/clickhouse/TrinoToClickHouseWriteChecker.java",
        "error_code": "INVALID_ARGUMENTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Date must be between %s and %s in ClickHouse: %s{}",
        "error_message_variables": [
            ", range.getMin(), range.getMax(), value)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_ARGUMENTS, format(\"Date must be between %s and %s in ClickHouse: %s\", range.getMin(), range.getMax(), value));"
    },
    {
        "file_path": "plugin/trino-clickhouse/src/test/java/io/trino/plugin/clickhouse/TestingClickHouseServer.java",
        "error_code": "Failed to execute statement: \" + sql",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Failed to execute statement: \" + sql, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/AbstractDeltaLakePageSink.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected column type: \" + column.columnType());"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/AbstractDeltaLakePageSink.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Exceeded limit of %s open writers for partitions{}",
        "error_message_variables": [
            ", maxOpenWriters)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, format(\"Exceeded limit of %s open writers for partitions\", maxOpenWriters));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/AbstractDeltaLakePageSink.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error committing Parquet file to Delta Lake",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, \"Error committing Parquet file to Delta Lake\", e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/AbstractDeltaLakePageSink.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error creating Parquet file",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, \"Error creating Parquet file\", e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaHiveTypeTranslator.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unsupported Hive type: %s. Supported VARCHAR types: VARCHAR(<=%d), VARCHAR.{}",
        "error_message_variables": [
            ", type, MAX_VARCHAR_LENGTH)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, format(\"Unsupported Hive type: %s. Supported VARCHAR types: VARCHAR(<=%d), VARCHAR.\", type, MAX_VARCHAR_LENGTH));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaHiveTypeTranslator.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unsupported Hive type: %s. Supported CHAR types: CHAR(<=%d).{}",
        "error_message_variables": [
            ", type, MAX_CHAR_LENGTH)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, format(\"Unsupported Hive type: %s. Supported CHAR types: CHAR(<=%d).\", type, MAX_CHAR_LENGTH));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaHiveTypeTranslator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Expected all parameters to be named type, but got %s\", parameter));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaHiveTypeTranslator.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unsupported Delta Lake type: %s{}",
        "error_message_variables": [
            ", type)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, format(\"Unsupported Delta Lake type: %s\", type));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeAnalyzeProperties.java",
        "error_code": "INVALID_ANALYZE_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Invalid null value in analyze %s property{}",
        "error_message_variables": [
            ", propertyName)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_ANALYZE_PROPERTY, format(\"Invalid null value in analyze %s property\", propertyName));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeBucketFunction.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(throwable);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeFunctionProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported function: \" + functionHandle);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeHistoryTable.java",
        "error_code": "DeltaLakeErrorCode.DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unable to load table metadata from location: {}",
        "error_message_variables": [
            "tableLocation"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DeltaLakeErrorCode.DELTA_LAKE_INVALID_SCHEMA, \"Unable to load table metadata from location: \" + tableLocation, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeHistoryTable.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error getting commit info entries from {}",
        "error_message_variables": [
            "tableLocation"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, \"Error getting commit info entries from \" + tableLocation, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMergeSink.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"inputPage channelCount (%s) == dataColumns size (%s) + 2\", inputChannelCount, dataColumnCount));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMergeSink.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"positionCount should be > 0, but is \" + positionCount);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMergeSink.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid merge operation: \" + operation);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMergeSink.java",
        "error_code": "DELTA_LAKE_FILESYSTEM_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error reading Parquet file: {}",
        "error_message_variables": [
            "path"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_FILESYSTEM_ERROR, \"Error reading Parquet file: \" + path, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMergeSink.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unable to write deletion vector file",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, \"Unable to write deletion vector file\", e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMergeSink.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unable to write deletion vector file",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, \"Unable to write deletion vector file\", e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMergeSink.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unable to rewrite Parquet file",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, \"Unable to rewrite Parquet file\", e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMergeSink.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error creating Parquet file",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, \"Error creating Parquet file\", e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMergeSink.java",
        "error_code": "DELTA_LAKE_FILESYSTEM_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error reading deletion vector file: {}",
        "error_message_variables": [
            "path"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_FILESYSTEM_ERROR, \"Error reading deletion vector file: \" + path, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error getting snapshot for {}",
        "error_message_variables": [
            "table"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, \"Error getting snapshot for \" + table, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "This connector does not support reading tables with TIMESTAMP AS OF",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case TEMPORAL -> throw new TrinoException(NOT_SUPPORTED, \"This connector does not support reading tables with TIMESTAMP AS OF\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported type for table version: {}",
        "error_message_variables": [
            "version.getVersionType().getDisplayName()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported type for table version: \" + version.getVersionType().getDisplayName());"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "INVALID_ARGUMENTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Delta Lake snapshot ID does not exists: {}",
        "error_message_variables": [
            "snapshotId"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_ARGUMENTS, \"Delta Lake snapshot ID does not exists: \" + snapshotId);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "INVALID_ARGUMENTS",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Delta Lake snapshot ID does not exists: {}",
        "error_message_variables": [
            "snapshotId"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_ARGUMENTS, \"Delta Lake snapshot ID does not exists: \" + snapshotId);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Read table with start version is not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Read table with start version is not supported\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"The deprecated listTableColumns is not supported because streamTableColumns is implemented instead\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "INVALID_SCHEMA_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid location URI: {}",
        "error_message_variables": [
            "locationUri"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SCHEMA_PROPERTY, \"Invalid location URI: \" + locationUri, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "GENERIC_USER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"The provided location '%s' does not match the existing table location '%s'{}",
        "error_message_variables": [
            ", location, currentLocation)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_USER_ERROR, format(\"The provided location '%s' does not match the existing table location '%s'\", location, currentLocation));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unable to access file system for: {}",
        "error_message_variables": [
            "location"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, \"Unable to access file system for: \" + location, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "GENERIC_USER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"The provided location '%s' does not match the existing table location '%s'{}",
        "error_message_variables": [
            ", location, currentLocation)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_USER_ERROR, format(\"The provided location '%s' does not match the existing table location '%s'\", location, currentLocation));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported type: {}",
        "error_message_variables": [
            "column.getType()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported type: \" + column.getType());"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unexpected column mapping mode: \" + columnMappingMode);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Target location cannot contain any files: {}",
        "error_message_variables": [
            "targetPath"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Target location cannot contain any files: \" + targetPath);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unable to access file system for: {}",
        "error_message_variables": [
            "targetPath"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, \"Unable to access file system for: \" + targetPath, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unable to use %s when change data feed is enabled{}",
        "error_message_variables": [
            ".formatted(conflicts)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unable to use %s when change data feed is enabled\".formatted(conflicts));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot replace a table when '{}\"' is set to true",
        "error_message_variables": [
            "APPEND_ONLY_CONFIGURATION_KEY"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Cannot replace a table when '\" + APPEND_ONLY_CONFIGURATION_KEY + \"' is set to true\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "CREATE OR REPLACE is not supported for tables with change data feed enabled",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"CREATE OR REPLACE is not supported for tables with change data feed enabled\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Using array, map or row type on partitioned columns is unsupported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, \"Using array, map or row type on partitioned columns is unsupported\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Table property 'partitioned_by' contained column names which do not exist: {}",
        "error_message_variables": [
            "invalidPartitionNames"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, \"Table property 'partitioned_by' contained column names which do not exist: \" + invalidPartitionNames);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Using all columns for partition columns is unsupported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, \"Using all columns for partition columns is unsupported\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to write Delta Lake transaction log entry",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, \"Failed to write Delta Lake transaction log entry\", e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Setting a table comment with column mapping %s is not supported{}",
        "error_message_variables": [
            ".formatted(columnMappingMode)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Setting a table comment with column mapping %s is not supported\".formatted(columnMappingMode));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unable to comment on table: %s.%s{}",
        "error_message_variables": [
            ", handle.getSchemaName(), handle.getTableName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, format(\"Unable to comment on table: %s.%s\", handle.getSchemaName(), handle.getTableName()), e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Setting a column comment with column mapping %s is not supported{}",
        "error_message_variables": [
            ".formatted(columnMappingMode)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Setting a column comment with column mapping %s is not supported\".formatted(columnMappingMode));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unable to add '%s' column comment for: %s.%s{}",
        "error_message_variables": [
            ", deltaLakeColumnHandle.baseColumnName(), deltaLakeTableHandle.getSchemaName(), deltaLakeTableHandle.getTableName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, format(\"Unable to add '%s' column comment for: %s.%s\", deltaLakeColumnHandle.baseColumnName(), deltaLakeTableHandle.getSchemaName(), deltaLakeTableHandle.getTableName()), e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Column name %s is forbidden when change data feed is enabled{}",
        "error_message_variables": [
            ".formatted(newColumnMetadata.getName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Column name %s is forbidden when change data feed is enabled\".formatted(newColumnMetadata.getName()));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unable to add NOT NULL column '%s' for non-empty table: %s.%s{}",
        "error_message_variables": [
            ", newColumnMetadata.getName(), handle.getSchemaName(), handle.getTableName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, format(\"Unable to add NOT NULL column '%s' for non-empty table: %s.%s\", newColumnMetadata.getName(), handle.getSchemaName(), handle.getTableName()));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unexpected column mapping mode: \" + columnMappingMode);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unable to add '%s' column for: %s.%s %s{}",
        "error_message_variables": [
            ", newColumnMetadata.getName(), handle.getSchemaName(), handle.getTableName(), firstNonNull(e.getMessage(), e))"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, format(\"Unable to add '%s' column for: %s.%s %s\", newColumnMetadata.getName(), handle.getSchemaName(), handle.getTableName(), firstNonNull(e.getMessage(), e)), e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot drop column from table using column mapping mode {}",
        "error_message_variables": [
            "columnMappingMode"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Cannot drop column from table using column mapping mode \" + columnMappingMode);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot drop partition column: {}",
        "error_message_variables": [
            "dropColumnName"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Cannot drop partition column: \" + dropColumnName);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "table.schemaTableName()",
        "error_code_name": null,
        "error_class_name": "ColumnNotFoundException",
        "error_message_template": "{}",
        "error_message_variables": [
            "dropColumnName"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ColumnNotFoundException(table.schemaTableName(), dropColumnName);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Dropping the last non-partition column is unsupported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Dropping the last non-partition column is unsupported\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Dropping the last non-partition column is unsupported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Dropping the last non-partition column is unsupported\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unable to drop '%s' column from: %s.%s{}",
        "error_message_variables": [
            ", dropColumnName, table.getSchemaName(), table.getTableName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, format(\"Unable to drop '%s' column from: %s.%s\", dropColumnName, table.getSchemaName(), table.getTableName()), e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot rename column when change data feed is enabled",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Cannot rename column when change data feed is enabled\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot rename column in table using column mapping mode {}",
        "error_message_variables": [
            "columnMappingMode"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Cannot rename column in table using column mapping mode \" + columnMappingMode);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unable to rename '%s' column for: %s.%s{}",
        "error_message_variables": [
            ", sourceColumnName, table.getSchemaName(), table.getTableName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, format(\"Unable to rename '%s' column for: %s.%s\", sourceColumnName, table.getSchemaName(), table.getTableName()), e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unable to drop not null constraint from '%s' column in: %s{}",
        "error_message_variables": [
            ", columnName, table.getSchemaTableName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, format(\"Unable to drop not null constraint from '%s' column in: %s\", columnName, table.getSchemaTableName()), e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to write Delta Lake transaction log entry",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, \"Failed to write Delta Lake transaction log entry\", e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_FILESYSTEM_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to access table metadata",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_FILESYSTEM_ERROR, \"Failed to access table metadata\", e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TransactionFailedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case SERIALIZABLE -> throw new TransactionFailedException(\"Conflicting concurrent writes with the current operation on Serializable isolation level\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TransactionFailedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TransactionFailedException(\"Conflicting concurrent writes found. Protocol changed by concurrent write operation\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TransactionFailedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TransactionFailedException(\"Conflicting concurrent writes found. Metadata changed by concurrent write operation\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TransactionFailedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TransactionFailedException(\"Conflicting concurrent writes found. Data files added in the modified table by concurrent write operation.\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TransactionFailedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TransactionFailedException(\"Conflicting concurrent writes found. Data files were added in the modified table by another concurrent write operation.\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TransactionFailedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TransactionFailedException(\"Conflicting concurrent writes found. Data files removed in the modified table by another concurrent write operation.\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TransactionFailedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TransactionFailedException(\"Conflicting concurrent writes found. Data files removed in the modified table by another concurrent write operation.\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TransactionFailedException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TransactionFailedException(\"Conflicting concurrent writes found. Data files were removed from the modified table by another concurrent write operation.\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported column mapping mode",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case UNKNOWN -> throw new TrinoException(NOT_SUPPORTED, \"Unsupported column mapping mode\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot modify rows from a table with '{}\"' set to true",
        "error_message_variables": [
            "APPEND_ONLY_CONFIGURATION_KEY"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Cannot modify rows from a table with '\" + APPEND_ONLY_CONFIGURATION_KEY + \"' set to true\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to write Delta Lake transaction log entry",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, \"Failed to write Delta Lake transaction log entry\", e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown procedure '\" + procedureName + \"'\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown procedure '\" + executeHandle.procedureId() + \"'\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to write Delta Lake transaction log entry",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, \"Failed to write Delta Lake transaction log entry\", e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Writing with column mapping %s is not supported{}",
        "error_message_variables": [
            ".formatted(columnMappingMode)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Writing with column mapping %s is not supported\".formatted(columnMappingMode));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Writing to tables with identity columns is not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Writing to tables with identity columns is not supported\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Writing to tables with both change data feed and deletion vectors enabled is not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Writing to tables with both change data feed and deletion vectors enabled is not supported\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported universal formats: {}",
        "error_message_variables": [
            "universalFormats"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported universal formats: \" + universalFormats);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported writer features: {}",
        "error_message_variables": [
            "unsupportedWriterFeatures"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported writer features: \" + unsupportedWriterFeatures);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Writing to tables with generated columns is not supported",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Writing to tables with generated columns is not supported\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_FILESYSTEM_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Failed to delete directory %s of the table %s{}",
        "error_message_variables": [
            ", handle.location(), handle.schemaTableName())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_FILESYSTEM_ERROR, format(\"Failed to delete directory %s of the table %s\", handle.location(), handle.schemaTableName()), e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Renaming managed tables is not allowed with current metastore configuration",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Renaming managed tables is not allowed with current metastore configuration\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "The following properties cannot be updated:  String.join(\", {}",
        "error_message_variables": [
            ", unsupportedProperties)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"The following properties cannot be updated: \" + String.join(\", \", unsupportedProperties));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unable to enable change data feed because table contains %s columns{}",
        "error_message_variables": [
            ".formatted(conflicts)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unable to enable change data feed because table contains %s columns\".formatted(conflicts));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to write Delta Lake transaction log entry",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, \"Failed to write Delta Lake transaction log entry\", e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Schema properties are not supported for system schema: {}",
        "error_message_variables": [
            "schemaName"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Schema properties are not supported for system schema: \" + schemaName);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "Invalid path: \" + path",
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Invalid path: \" + path, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Projecting columns with column mapping %s is not supported{}",
        "error_message_variables": [
            ".formatted(columnMappingMode)"
        ],
        "severity_level": "ERROR",
        "original_text": "default -> throw new TrinoException(NOT_SUPPORTED, \"Projecting columns with column mapping %s is not supported\".formatted(columnMappingMode));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "INVALID_ANALYZE_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot specify empty list of columns for analysis",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_ANALYZE_PROPERTY, \"Cannot specify empty list of columns for analysis\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unable to access file system for: {}",
        "error_message_variables": [
            "tableHandle.getLocation()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, \"Unable to access file system for: \" + tableHandle.getLocation(), e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Statistics serialization error",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Statistics serialization error\", e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(format(\"Unexpected columns in in mergedColumnStatistics %s; expected %s\", mergedColumnStatistics.keySet(), analyzePhysicalColumns));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_FILESYSTEM_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to clean up extraneous output files",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_FILESYSTEM_ERROR, \"Failed to clean up extraneous output files\", e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "VerifyException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case DATA -> throw new VerifyException(\"Unexpected DATA table type\"); // Handled above."
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot modify rows from a table with '{}\"' set to true",
        "error_message_variables": [
            "APPEND_ONLY_CONFIGURATION_KEY"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Cannot modify rows from a table with '\" + APPEND_ONLY_CONFIGURATION_KEY + \"' set to true\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "DELTA_LAKE_BAD_WRITE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to write Delta Lake transaction log entry",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_WRITE, \"Failed to write Delta Lake transaction log entry\", e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unexpected statistics collection: {}",
        "error_message_variables": [
            "metadata"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Unexpected statistics collection: \" + metadata);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeMetadata.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unexpected statistics collection: {}",
        "error_message_variables": [
            "columnStatisticMetadata"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Unexpected statistics collection: \" + columnStatisticMetadata);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakePageSink.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected column type: \" + column.columnType());"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakePageSinkProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unknown procedure: \" + executeHandle.procedureId());"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakePageSource.java",
        "error_code": "DELTA_LAKE_BAD_DATA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_DATA, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakePageSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakePageSourceProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalStateException(\"Unknown column mapping mode\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakePageSourceProvider.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to read deletion vectors",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, \"Failed to read deletion vectors\", e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakePageSourceProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakePageSourceProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported column mapping: \" + columnMapping);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeParquetSchemas.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "getLocation(e)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, getLocation(e), \"Failed to parse serialized schema: \" + jsonSchema, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeParquetSchemas.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException(\"Unsupported parameter columnMappingMode\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeParquetSchemas.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unsupported primitive type: %s{}",
        "error_message_variables": [
            ", primitiveType)"
        ],
        "severity_level": "ERROR",
        "original_text": "default -> throw new TrinoException(NOT_SUPPORTED, format(\"Unsupported primitive type: %s\", primitiveType));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeParquetSchemas.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TypeNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new TypeNotFoundException(new TypeSignature(containerType));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakePartitionsTable.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error getting snapshot from location: {}",
        "error_message_variables": [
            "tableLocation"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, \"Error getting snapshot from location: \" + tableLocation, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakePartitionsTable.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unable to compare Delta min/max values",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Unable to compare Delta min/max values\", throwable);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakePropertiesTable.java",
        "error_code": "DeltaLakeErrorCode.DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unable to load table metadata from location: {}",
        "error_message_variables": [
            "tableLocation"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DeltaLakeErrorCode.DELTA_LAKE_INVALID_SCHEMA, \"Unable to load table metadata from location: \" + tableLocation, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeSessionProperties.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "value -> { throw new IllegalStateException(\"The property cannot be set\"); },"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeSessionProperties.java",
        "error_code": "INVALID_SESSION_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported codec: LZ4",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_SESSION_PROPERTY, \"Unsupported codec: LZ4\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeSplitManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unrecognized function: \" + function);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeSplitSource.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeTableName.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid Delta Lake table name: {}",
        "error_message_variables": [
            "name"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Invalid Delta Lake table name: \" + name);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeTableName.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid Delta Lake table name: {}",
        "error_message_variables": [
            "name"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Invalid Delta Lake table name: \" + name);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeTableName.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Invalid Delta Lake table name: {}",
        "error_message_variables": [
            "name"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Invalid Delta Lake table name: \" + name);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeTableProperties.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(format(\"Invalid value [%s]. Valid values: [ID, NAME, NONE]\", value));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/DeltaLakeTableProperties.java",
        "error_code": "INVALID_TABLE_PROPERTY",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"%s must be greater than 0{}",
        "error_message_variables": [
            ", CHECKPOINT_INTERVAL_PROPERTY)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_TABLE_PROPERTY, format(\"%s must be greater than 0\", CHECKPOINT_INTERVAL_PROPERTY));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/delete/DeletionVectors.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported storage type for deletion vector: {}",
        "error_message_variables": [
            "deletionVector.storageType()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported storage type for deletion vector: \" + deletionVector.storageType());"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/delete/DeletionVectors.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected storage type: \" + deletionVector.storageType());"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/delete/DeletionVectors.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "The size of deletion vector %s expects %s but got %s{}",
        "error_message_variables": [
            ".formatted(inputFile.location(), expectedSize, actualSize)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, \"The size of deletion vector %s expects %s but got %s\".formatted(inputFile.location(), expectedSize, actualSize));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/delete/DeletionVectors.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Checksum mismatch for deletion vector: {}",
        "error_message_variables": [
            "inputFile.location()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, \"Checksum mismatch for deletion vector: \" + inputFile.location());"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/delete/DeletionVectors.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported magic number: \" + magicNumber);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/delete/PositionDeleteFilter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"No row position column\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/expression/SparkExpressionBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new UnsupportedOperationException(\"Unsupported operator: \" + operator.getText());"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/expression/SparkExpressionBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported operator: \" + symbol.getText());"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/expression/SparkExpressionBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ParsingException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ParsingException(\"Invalid hexadecimal digit: \" + ch);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/expression/SparkExpressionBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ParsingException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ParsingException(format(\"Incomplete escape sequence '%s' at the end of %s literal\", unicodeEscapeCharacters, context.getText()));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/expression/SparkExpressionBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected value: \" + value);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/expression/SparkExpressionBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"not yet implemented\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/expression/SparkExpressionBuilder.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(format(\"Cannot combine %s and %s\", aggregate, nextResult));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/expression/SparkExpressionConverter.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/expression/SparkExpressionParser.java",
        "error_code": "message",
        "error_code_name": null,
        "error_class_name": "ParsingException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ParsingException(message, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/expression/SparkExpressionParser.java",
        "error_code": "Cannot parse Spark expression [%s]: %s\".formatted(expression, firstNonNull(e.getMessage(), e))",
        "error_code_name": null,
        "error_class_name": "ParsingException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new ParsingException(\"Cannot parse Spark expression [%s]: %s\".formatted(expression, firstNonNull(e.getMessage(), e)), e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/expression/SparkExpressionParser.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "ParsingException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new ParsingException(\"expression is too large (stack overflow while parsing)\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/functions/tablechanges/TableChangesFunction.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TableNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TableNotFoundException(schemaTableName);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/functions/tablechanges/TableChangesFunction.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"since_version: %d is higher then current table version: %d{}",
        "error_message_variables": [
            ", sinceVersion, tableHandle.getReadVersion())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"since_version: %d is higher then current table version: %d\", sinceVersion, tableHandle.getReadVersion()));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/functions/tablechanges/TableChangesSplitSource.java",
        "error_code": "DELTA_LAKE_BAD_DATA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "There should be exactly 1 commitInfo present in a metadata file",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_BAD_DATA, \"There should be exactly 1 commitInfo present in a metadata file\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/functions/tablechanges/TableChangesSplitSource.java",
        "error_code": "INVALID_FUNCTION_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Change Data Feed is not enabled at version %d. Version contains 'remove' entries without 'cdc' entries{}",
        "error_message_variables": [
            ", version)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_FUNCTION_ARGUMENT, format(\"Change Data Feed is not enabled at version %d. Version contains 'remove' entries without 'cdc' entries\", version));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/functions/tablechanges/TableChangesSplitSource.java",
        "error_code": "DELTA_LAKE_FILESYSTEM_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to access table metadata",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_FILESYSTEM_ERROR, \"Failed to access table metadata\", e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/metastore/DeltaLakeTableMetadataScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/metastore/HiveMetastoreBackedDeltaLakeMetastore.java",
        "error_code": "table.getDatabaseName()",
        "error_code_name": null,
        "error_class_name": "NotADeltaLakeTableException",
        "error_message_template": "{}",
        "error_message_variables": [
            "table.getTableName()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new NotADeltaLakeTableException(table.getDatabaseName(), table.getTableName());"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/metastore/HiveMetastoreBackedDeltaLakeMetastore.java",
        "error_code": "table.getDatabaseName()",
        "error_code_name": null,
        "error_class_name": "NotADeltaLakeTableException",
        "error_message_template": "{}",
        "error_message_variables": [
            "table.getTableName()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new NotADeltaLakeTableException(table.getDatabaseName(), table.getTableName());"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/metastore/HiveMetastoreBackedDeltaLakeMetastore.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"No %s property defined for table: %s{}",
        "error_message_variables": [
            ", PATH_PROPERTY, table)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, format(\"No %s property defined for table: %s\", PATH_PROPERTY, table));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/metastore/glue/DeltaLakeGlueMetastoreTableOperations.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TableNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TableNotFoundException(schemaTableName);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/metastore/glue/v1/DeltaLakeGlueV1MetastoreTableOperations.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TableNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TableNotFoundException(schemaTableName);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/procedure/DropExtendedStatsProcedure.java",
        "error_code": "INVALID_PROCEDURE_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Table '%s' does not exist{}",
        "error_message_variables": [
            ", name)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_PROCEDURE_ARGUMENT, format(\"Table '%s' does not exist\", name));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/procedure/FlushMetadataCacheProcedure.java",
        "error_code": "INVALID_PROCEDURE_ARGUMENT",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Illegal parameter set passed",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(INVALID_PROCEDURE_ARGUMENT, \"Illegal parameter set passed\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/procedure/RegisterTableProcedure.java",
        "error_code": "PERMISSION_DENIED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "register_table procedure is disabled",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(PERMISSION_DENIED, \"register_table procedure is disabled\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/procedure/RegisterTableProcedure.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "SchemaNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new SchemaNotFoundException(schemaTableName.getSchemaName());"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/procedure/RegisterTableProcedure.java",
        "error_code": "GENERIC_USER_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"No transaction log found in location %s{}",
        "error_message_variables": [
            ", transactionLogDir)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_USER_ERROR, format(\"No transaction log found in location %s\", transactionLogDir));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/procedure/RegisterTableProcedure.java",
        "error_code": "DELTA_LAKE_FILESYSTEM_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Failed checking table location %s{}",
        "error_message_variables": [
            ", tableLocation)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_FILESYSTEM_ERROR, format(\"Failed checking table location %s\", tableLocation), e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/procedure/RegisterTableProcedure.java",
        "error_code": "DELTA_LAKE_INVALID_TABLE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to access table location: {}",
        "error_message_variables": [
            "tableLocation"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_TABLE, \"Failed to access table location: \" + tableLocation, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/procedure/UnregisterTableProcedure.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TableNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TableNotFoundException(schemaTableName);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/procedure/VacuumProcedure.java",
        "error_code": "DELTA_LAKE_FILESYSTEM_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Failure when vacuuming %s.%s with retention %s: %s{}",
        "error_message_variables": [
            ", schema, table, retention, e)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_FILESYSTEM_ERROR, format(\"Failure when vacuuming %s.%s with retention %s: %s\", schema, table, retention, e), e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/procedure/VacuumProcedure.java",
        "error_code": "format(\"Failure when vacuuming %s.%s with retention %s: %s\", schema, table, retention, e)",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(format(\"Failure when vacuuming %s.%s with retention %s: %s\", schema, table, retention, e), e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/procedure/VacuumProcedure.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot execute vacuum procedure with %d writer version{}",
        "error_message_variables": [
            ".formatted(protocolEntry.minWriterVersion())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Cannot execute vacuum procedure with %d writer version\".formatted(protocolEntry.minWriterVersion()));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/procedure/VacuumProcedure.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot execute vacuum procedure with %s writer features{}",
        "error_message_variables": [
            ".formatted(unsupportedWriterFeatures)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Cannot execute vacuum procedure with %s writer features\".formatted(unsupportedWriterFeatures));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/procedure/VacuumProcedure.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Cannot execute vacuum procedure with %s writer features{}",
        "error_message_variables": [
            ".formatted(DELETION_VECTORS_FEATURE_NAME)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Cannot execute vacuum procedure with %s writer features\".formatted(DELETION_VECTORS_FEATURE_NAME));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/statistics/CachingExtendedStatisticsAccess.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error reading statistics from cache",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Error reading statistics from cache\", e.getCause());"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/statistics/MetaDirStatisticsAccess.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"failed to read statistics with table location %s{}",
        "error_message_variables": [
            ", tableLocation)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, format(\"failed to read statistics with table location %s\", tableLocation), e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/statistics/MetaDirStatisticsAccess.java",
        "error_code": "DELTA_LAKE_FILESYSTEM_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to store statistics with table location: {}",
        "error_message_variables": [
            "tableLocation"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_FILESYSTEM_ERROR, \"Failed to store statistics with table location: \" + tableLocation, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/statistics/MetaDirStatisticsAccess.java",
        "error_code": "DELTA_LAKE_FILESYSTEM_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error deleting statistics file: {}",
        "error_message_variables": [
            "statisticsPath"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_FILESYSTEM_ERROR, \"Error deleting statistics file: \" + statisticsPath, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/DeltaLakeParquetStatisticsUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unexpected value for bigint type: \" + jsonValue);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/DeltaLakeParquetStatisticsUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported type: \" + type);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/DeltaLakeParquetStatisticsUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException(\"Unsupported type: \" + type);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/DeltaLakeSchemaSupport.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "getLocation(e)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, getLocation(e), \"Failed to encode Delta Lake schema\", e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/DeltaLakeSchemaSupport.java",
        "error_code": "DUPLICATE_COLUMN_NAME",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Field name '%s' specified more than once{}",
        "error_message_variables": [
            ".formatted(name.toLowerCase(ENGLISH))"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DUPLICATE_COLUMN_NAME, \"Field name '%s' specified more than once\".formatted(name.toLowerCase(ENGLISH)));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/DeltaLakeSchemaSupport.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unexpected column mapping mode: \" + columnMappingMode);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/DeltaLakeSchemaSupport.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported type: {}",
        "error_message_variables": [
            "type"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, \"Unsupported type: \" + type);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/DeltaLakeSchemaSupport.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Only 'id', 'name' or 'none' is supported for the '%s' table property{}",
        "error_message_variables": [
            ", COLUMN_MAPPING_MODE_CONFIGURATION_KEY)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, format(\"Only 'id', 'name' or 'none' is supported for the '%s' table property\", COLUMN_MAPPING_MODE_CONFIGURATION_KEY));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/DeltaLakeSchemaSupport.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "getLocation(e)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, getLocation(e), \"Failed to parse serialized schema: \" + json, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/DeltaLakeSchemaSupport.java",
        "error_code": "fromType",
        "error_code_name": null,
        "error_class_name": "UnsupportedTypeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "toType"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedTypeException(fromType, toType);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/DeltaLakeSchemaSupport.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "getLocation(e)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, getLocation(e), \"Failed to parse invariants expression: \" + invariants, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/DeltaLakeSchemaSupport.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "getLocation(e)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, getLocation(e), \"Failed to parse serialized schema: \" + json, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/DeltaLakeSchemaSupport.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "{}",
        "error_message_variables": [
            "getLocation(e)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, getLocation(e), \"Failed to parse serialized schema: \" + metadataEntry.getSchemaString(), e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/DeltaLakeSchemaSupport.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed to deserialize type: {}",
        "error_message_variables": [
            "type"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, \"Failed to deserialize type: \" + type);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/DeltaLakeSchemaSupport.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedTypeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case \"variant\" -> throw new UnsupportedTypeException(\"variant\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/DeltaLakeSchemaSupport.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TypeNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new TypeNotFoundException(new TypeSignature(primitiveType));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/DeltaLakeSchemaSupport.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TypeNotFoundException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new TypeNotFoundException(new TypeSignature(containerType));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/MetadataEntry.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"%s must be greater than 0{}",
        "error_message_variables": [
            ", DELTA_CHECKPOINT_INTERVAL_PROPERTY)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, format(\"%s must be greater than 0\", DELTA_CHECKPOINT_INTERVAL_PROPERTY));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/MetadataEntry.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Invalid value for %s property: %s{}",
        "error_message_variables": [
            ", DELTA_CHECKPOINT_INTERVAL_PROPERTY, value)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, format(\"Invalid value for %s property: %s\", DELTA_CHECKPOINT_INTERVAL_PROPERTY, value));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/MetadataEntry.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "case UNKNOWN -> throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/ProtocolEntry.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"readerFeatures must not exist when minReaderVersion is less than \" + MIN_VERSION_SUPPORTS_READER_FEATURES);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/ProtocolEntry.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"writerFeatures must not exist when minWriterVersion is less than \" + MIN_VERSION_SUPPORTS_WRITER_FEATURES);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/TableSnapshot.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"%s mentions a non-existent checkpoint file for table: %s{}",
        "error_message_variables": [
            ", checkpoint, table)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, format(\"%s mentions a non-existent checkpoint file for table: %s\", checkpoint, table));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/TableSnapshot.java",
        "error_code": "DELTA_LAKE_FILESYSTEM_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unexpected IO exception occurred while retrieving the length of the file: %s for the table %s{}",
        "error_message_variables": [
            ", checkpoint, table)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_FILESYSTEM_ERROR, format(\"Unexpected IO exception occurred while retrieving the length of the file: %s for the table %s\", checkpoint, table), e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/TableSnapshot.java",
        "error_code": "DELTA_LAKE_FILESYSTEM_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Unexpected IO exception occurred while reading the entries of the file: %s for the table %s{}",
        "error_message_variables": [
            ", checkpoint, table)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_FILESYSTEM_ERROR, format(\"Unexpected IO exception occurred while reading the entries of the file: %s for the table %s\", checkpoint, table), e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/TableSnapshot.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Unsupported v2 checkpoint file format: \" + checkpointFile.location());"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/TransactionLogAccess.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/TransactionLogAccess.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/TransactionLogAccess.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Failed accessing transaction log for table: {}",
        "error_message_variables": [
            "tableSnapshot.getTable()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, \"Failed accessing transaction log for table: \" + tableSnapshot.getTable(), e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/TransactionLogAccess.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error reading transaction log for {}",
        "error_message_variables": [
            "tableSnapshot.getTable()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, \"Error reading transaction log for \" + tableSnapshot.getTable(), e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/TransactionLogAccess.java",
        "error_code": "DELTA_LAKE_INVALID_SCHEMA",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error reading transaction log for {}",
        "error_message_variables": [
            "tableSnapshot.getTable()"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(DELTA_LAKE_INVALID_SCHEMA, \"Error reading transaction log for \" + tableSnapshot.getTable(), e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/TransactionLogAccess.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/TransactionLogAccess.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/checkpoint/CheckpointEntryIterator.java",
        "error_code": "GENERIC_INTERNAL_ERROR",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Error while initilizing the checkpoint entry iterator for the file %s{}",
        "error_message_variables": [
            ".formatted(checkpoint.location())"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(GENERIC_INTERNAL_ERROR, \"Error while initilizing the checkpoint entry iterator for the file %s\".formatted(checkpoint.location()));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/checkpoint/CheckpointEntryIterator.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported Delta Lake checkpoint entry type: \" + entryType);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/checkpoint/CheckpointWriterManager.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/checkpoint/TransactionLogTail.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "MissingTransactionLogException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new MissingTransactionLogException(getTransactionLogJsonEntryPath(transactionLogDir, entryNumber).toString());"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/writer/AzureTransactionLogSynchronizer.java",
        "error_code": "Conflict detected while writing Transaction Log entry to ADLS",
        "error_code_name": null,
        "error_class_name": "TransactionConflictException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TransactionConflictException(\"Conflict detected while writing Transaction Log entry to ADLS\", e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/writer/AzureTransactionLogSynchronizer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/writer/GcsTransactionLogSynchronizer.java",
        "error_code": "Conflict detected while writing Transaction Log entry \" + newLogEntryPath + \" to GCS",
        "error_code_name": null,
        "error_class_name": "TransactionConflictException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TransactionConflictException(\"Conflict detected while writing Transaction Log entry \" + newLogEntryPath + \" to GCS\", e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/writer/GcsTransactionLogSynchronizer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/writer/LocalTransactionLogSynchronizer.java",
        "error_code": "Conflict detected while writing Transaction Log entry \" + newLogEntryPath",
        "error_code_name": null,
        "error_class_name": "TransactionConflictException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TransactionConflictException(\"Conflict detected while writing Transaction Log entry \" + newLogEntryPath, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/writer/LocalTransactionLogSynchronizer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/writer/NoIsolationSynchronizer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/writer/S3ConditionalWriteLogSynchronizer.java",
        "error_code": "Conflict detected while writing Transaction Log entry \" + newLogEntryPath + \" to S3",
        "error_code_name": null,
        "error_class_name": "TransactionConflictException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TransactionConflictException(\"Conflict detected while writing Transaction Log entry \" + newLogEntryPath + \" to S3\", e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/writer/S3ConditionalWriteLogSynchronizer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/writer/S3LockBasedTransactionLogSynchronizer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TransactionConflictException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TransactionConflictException(\"Target file already exists: \" + newLogEntryPath);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/writer/S3LockBasedTransactionLogSynchronizer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "TransactionConflictException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new TransactionConflictException(\"Target file was created during locking: \" + newLogEntryPath);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/writer/S3LockBasedTransactionLogSynchronizer.java",
        "error_code": "Internal error while writing \" + newLogEntryPath",
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(\"Internal error while writing \" + newLogEntryPath, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/writer/S3LockBasedTransactionLogSynchronizer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"Lock filename \" + lockFilename + \" does not match expected pattern\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/transactionlog/writer/TransactionLogSynchronizerManager.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "ormat(\"Cannot write to table in %s; %s not supported{}",
        "error_message_variables": [
            ", tableLocation, uriScheme)"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, format(\"Cannot write to table in %s; %s not supported\", tableLocation, uriScheme));"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/util/DeltaLakeWriteUtils.java",
        "error_code": "HIVE_INVALID_PARTITION_VALUE",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Hive partition keys can only contain printable ASCII characters (0x20 - 0x7E). Invalid value: {}",
        "error_message_variables": [
            "encoded"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(HIVE_INVALID_PARTITION_VALUE, \"Hive partition keys can only contain printable ASCII characters (0x20 - 0x7E). Invalid value: \" + encoded);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/main/java/io/trino/plugin/deltalake/util/DeltaLakeWriteUtils.java",
        "error_code": "NOT_SUPPORTED",
        "error_code_name": null,
        "error_class_name": "TrinoException",
        "error_message_template": "Unsupported type for partition: {}",
        "error_message_variables": [
            "type"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new TrinoException(NOT_SUPPORTED, \"Unsupported type for partition: \" + type);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/BaseDeltaLakeConnectorSmokeTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Timed out waiting on table to reflect new data from new location\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/BaseDeltaLakeConnectorSmokeTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Location not found in SHOW CREATE TABLE result\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/BaseDeltaLakeRegisterTableProcedureTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Location not found in SHOW CREATE TABLE result\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/DeltaLakeAlluxioCacheTestUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"File not recognized: \" + path);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/FileTestingTransactionLogSynchronizer.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/TestDeltaLakeAdlsConnectorSmokeTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/TestDeltaLakeAlluxioCacheMinioAndHmsConnectorSmokeTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/TestDeltaLakeAnalyze.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Location not found in SHOW CREATE TABLE result\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/TestDeltaLakeBasic.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Location not found in SHOW CREATE TABLE result\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/TestDeltaLakeColumnMapping.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Location not found in SHOW CREATE TABLE result\");"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/TestDeltaLakeDynamicPartitionPruningTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/TestDeltaLakeDynamicPartitionPruningTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/TestDeltaLakeFileOperations.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"File not recognized: \" + path);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/TestDeltaLakeGcsConnectorSmokeTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/TestDeltaLakeGcsConnectorSmokeTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/TestDeltaLakeGcsConnectorSmokeTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/TestDeltaLakeGcsConnectorSmokeTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/TestDeltaLakeLocalConcurrentWritesTest.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/TestDeltaLakePageSink.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "default -> throw new IllegalArgumentException(\"Unsupported type \" + column.getType());"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/TestDeltaLakeProjectionPushdownPlans.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/TestingDeltaLakeUtils.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/TestReadJsonTransactionLog.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UncheckedIOException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UncheckedIOException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/TestReadJsonTransactionLog.java",
        "error_code": "Failed to parse \" + json",
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "{}",
        "error_message_variables": [
            "e"
        ],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(\"Failed to parse \" + json, e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/TestReadJsonTransactionLog.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/metastore/TestDeltaLakeTableMetadataScheduler.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "UnsupportedOperationException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new UnsupportedOperationException();"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/metastore/glue/TestDeltaLakeGlueMetastore.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalStateException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalStateException(\"Unexpected redirects reported for tables: \" + redirectedTables);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/statistics/TestDeltaLakeFileBasedTableStatisticsProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/statistics/TestDeltaLakeFileBasedTableStatisticsProvider.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "RuntimeException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new RuntimeException(e);"
    },
    {
        "file_path": "plugin/trino-delta-lake/src/test/java/io/trino/plugin/deltalake/transactionlog/statistics/BenchmarkExtendedStatistics.java",
        "error_code": null,
        "error_code_name": null,
        "error_class_name": "IllegalArgumentException",
        "error_message_template": "",
        "error_message_variables": [],
        "severity_level": "ERROR",
        "original_text": "throw new IllegalArgumentException(\"invalid stats type: \" + type);"
    }
]